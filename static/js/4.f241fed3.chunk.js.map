{"version":3,"sources":["pages/Home/components/TransactionsTable/style.module.scss","pages/Home/components/TransactionsTable/components/TransactionsModal/style.module.scss","pages/Home/components/Summary/style.module.scss","pages/Home/components/Summary/components/SummaryModal/Components/Tabs/style.module.scss","pages/Home/components/Summary/components/SummaryModal/style.module.scss","pages/Home/components/Widgets/components/Widget/style.module.scss","pages/Home/components/Widgets/components/WidgetsModal/style.module.scss","pages/Home/components/Widgets/style.module.scss","pages/Home/components/Widgets/components/GraphsModal/style.module.scss","pages/Home/components/Calendar/style.module.scss","pages/Home/components/TotalAmount/style.module.scss","pages/Home/style.module.scss","assets/icons/edit.svg","pages/Home/components/Calendar/hooks/useCalendar.ts","pages/Home/hooks/useTransactions.ts","pages/Home/hooks/useCategories.ts","pages/Home/components/TransactionsTable/components/TransactionsModal/index.js","pages/Home/components/TransactionsTable/components/TransactionsModal/TransactionsModal.tsx","pages/Home/components/TransactionsTable/index.js","pages/Home/components/TransactionsTable/TransactionsTable.tsx","pages/Home/components/Summary/components/SummaryModal/Components/Tabs/index.js","pages/Home/components/Summary/components/SummaryModal/Components/Tabs/Tabs.tsx","pages/Home/components/Summary/components/SummaryModal/index.js","pages/Home/components/Summary/components/SummaryModal/SummaryModal.tsx","pages/Home/components/Summary/index.js","pages/Home/components/Summary/Summary.tsx","pages/Home/hooks/useWidgets.ts","pages/Home/components/Widgets/components/Widget/index.js","pages/Home/components/Widgets/components/Widget/Widget.tsx","pages/Home/components/Widgets/components/WidgetsModal/WidgetsModal.tsx","pages/Home/components/Widgets/components/WidgetsModal/index.js","pages/Home/components/Widgets/components/GraphsModal/index.js","pages/Home/components/Widgets/components/GraphsModal/GraphsModal.tsx","pages/Home/components/Widgets/index.js","pages/Home/components/Widgets/Widgets.tsx","pages/Home/components/Calendar/index.js","pages/Home/components/Calendar/Calendar.tsx","pages/Home/components/TotalAmount/index.js","pages/Home/components/TotalAmount/TotalAmount.tsx","pages/Home/Home.tsx"],"names":["module","exports","useCalendar","dispatch","useDispatch","useTypedSelector","calendar","selectedDay","selectedMonth","selectedYear","options","selectedOption","nowDateStamp","prevDateStamp","setSelectedDay","day","setCalendarDayAction","setSelectedMonth","month","setCalendarMonthAction","setSelectedYear","year","setCalendarYearAction","setSelectedOption","option","setSelectedOptionAction","selectedDayName","DateHelper","dayRuNames","selectedMonthName","monthRuNames","useTransactions","transactions","items","globalItems","isLoaded","transactionItems","transactionGlobalItems","addTransaction","React","useCallback","data","a","TransactionsActions","updateTransaction","deleteTransaction","id","useEffect","batch","fetchTransactions","fetchGlobalTransactions","useCategories","categories","itemsTransactions","categoryItems","addCategory","CategoryActions","fetchTransactionsByCategories","fetchCategories","TransactionsModal","onClose","isEdit","map","categoryItem","value","name","title","buttonText","onSubmit","className","styles","fields","render","fieldProps","defaultValue","Date","toISOString","split","category","placeholder","input","validate","allValues","meta","FormHelper","Require","msg","undefined","component","type","amount","TransactionsTable","tableRef","useRef","useState","startRows","setStartRows","showModal","setShowModal","idItemRef","scrollHandler","e","Math","floor","currentTarget","scrollTop","table","current","addEventListener","removeEventListener","table_header","table_width","style","display","justifyContent","onClick","table_body_scroll","ref","length","table_body","height","slice","transactionItem","cn","income","is_income","table_cell","table_date","transaction_date","toLocaleDateString","table_amount","width","viewBox","xmlns","table_edit","fillRule","clipRule","d","table_delete","table_empty","Tabs","selectedTab","setSelectedTab","tabs","item","tabs_item","tabs_item__active","onChange","onClickHandler","label","SummaryModal","Range","min","count","max","Summary","filter","transactions_sum","summary","summary_header","table_head","table_scroll","table_row","table_category","useWidgets","widgets","colors","widgetItems","widgetColors","addWidget","WidgetsActions","addWidgetAction","deleteWidget","deleteWidgetAction","fetchWidgetColors","fetchWidgets","Widget","color","isMore","period","limit","transactionsSum","categoryName","widget","background","fill","widget_delete","widget_left","widget_img","widget_validity","widget_right","widget_title","toLowerCase","widget_sum","optionsPeriods","ColorField","onClickHandle","active","TabsField","activeTab","setActiveTab","WidgetsModal","categoryOptions","GraphsModal","state","setState","values","setValues","console","log","innerRadius","radius","getAngle","onValueClick","onValueMouseOver","v","onSeriesMouseOut","hint","Widgets","showIndex","setShowIndex","showModalForm","setShowModalForm","showModalGraphs","setShowModalGraphs","widgetItem","is_more","widgets_next","prev","widgets_handler","widgets_add","Calendar","nowDate","dayOnWeek","getDayOnWeek","daysInMonth","getCountDaysInMonth","daysInPrevMonth","daysInNextMonth","prevClickHandler","index","nextClickHandler","calendar_title","calendar_select","abbreviation","range","calendar_day","disabled","now","getDate","getMonth","getFullYear","select","TotalAmount","alignItems","Home","useUser","username","fetchInfo","loggedIn","home","pockets","pockets_content","pockets_tables","utils","profile","src","profile_photo","alt","editSVG","profile_photo_edit","utils_calendar","to"],"mappings":"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","file":"static/js/4.f241fed3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"income\":\"style_income__1bGW2\",\"table\":\"style_table__1Rzb6\",\"table_width\":\"style_table_width__J9xlN\",\"table_edit\":\"style_table_edit__2HoTv\",\"table_delete\":\"style_table_delete__3Wjw6\",\"table_header\":\"style_table_header__2HmC_\",\"table_body\":\"style_table_body___w4vQ\",\"table_body_scroll\":\"style_table_body_scroll__2eCYp\",\"table_cell\":\"style_table_cell__1rxX7\",\"table_date\":\"style_table_date__2oT7h\",\"table_amount\":\"style_table_amount__2hIAO\",\"table_empty\":\"style_table_empty__kzIFj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"category\":\"style_category__3CT4a\",\"fields-container\":\"style_fields-container__3Vrh-\",\"amount\":\"style_amount__2elO5\",\"fields\":\"style_fields__3WB3B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"summary\":\"style_summary__2AfnG\",\"summary_header\":\"style_summary_header__2D4Ue\",\"table\":\"style_table__1uHhY\",\"table_head\":\"style_table_head__3YG_H\",\"table_scroll\":\"style_table_scroll__4w5tF\",\"table_cell\":\"style_table_cell__1jP9B\",\"table_category\":\"style_table_category__2KUHo\",\"table_amount\":\"style_table_amount__gW5IH\",\"table_empty\":\"style_table_empty__1mqyR\",\"income\":\"style_income___m9Cu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tabs\":\"style_tabs__Exn9M\",\"tabs_item\":\"style_tabs_item__AjACS\",\"tabs_item__active\":\"style_tabs_item__active__37_1r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fields-container\":\"style_fields-container__10XNp\",\"fields-tabs\":\"style_fields-tabs__20_JJ\",\"input\":\"style_input__2jtRK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"widget\":\"style_widget__1mU7T\",\"widget_left\":\"style_widget_left__1oq8h\",\"widget_right\":\"style_widget_right__1gxD-\",\"widget_delete\":\"style_widget_delete__3SZme\",\"widget_img\":\"style_widget_img__TO2zV\",\"widget_validity\":\"style_widget_validity__2Jlz8\",\"widget_title\":\"style_widget_title__OiX-U\",\"widget_sum\":\"style_widget_sum__kOHkd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fields\":\"style_fields__11scn\",\"fields-container\":\"style_fields-container__2t20h\",\"fields-top\":\"style_fields-top__efq35\",\"input\":\"style_input__386Bv\",\"color-field\":\"style_color-field__1x0yk\",\"color-field_item\":\"style_color-field_item__kXl4a\",\"active\":\"style_active__18N9D\",\"tabs\":\"style_tabs__Ozs2R\",\"tabs_item\":\"style_tabs_item__3ppPT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"widgets-container\":\"style_widgets-container__3zYDX\",\"widgets-container__reverse\":\"style_widgets-container__reverse__KTecL\",\"widgets-items\":\"style_widgets-items__K_tpn\",\"widgets-item\":\"style_widgets-item__GmZpx\",\"widgets_fake-block\":\"style_widgets_fake-block__3Zbex\",\"widgets_fake-block__reverse\":\"style_widgets_fake-block__reverse___I6oZ\",\"widgets_more\":\"style_widgets_more__2gzF2\",\"widgets_handler\":\"style_widgets_handler__3Xc1L\",\"widgets_add\":\"style_widgets_add__1Z0H4\",\"widgets_next\":\"style_widgets_next__2BoEY\",\"widgets_next__reverse\":\"style_widgets_next__reverse__3BP4b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"style_title__3mX14\",\"hint\":\"style_hint__1yIdz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"calendar\":\"style_calendar__1Q2Ll\",\"calendar_month-switch\":\"style_calendar_month-switch__1_xwR\",\"calendar_month-switch_svg\":\"style_calendar_month-switch_svg__1V9E0\",\"calendar_month-switch_date\":\"style_calendar_month-switch_date__110eb\",\"calendar_month-switch_month\":\"style_calendar_month-switch_month__3wQ_f\",\"calendar_month-switch_year\":\"style_calendar_month-switch_year__YiMeR\",\"calendar_week-days\":\"style_calendar_week-days__3dYlH\",\"calendar_week-days_item\":\"style_calendar_week-days_item__1UGVY\",\"calendar_day\":\"style_calendar_day__ftudp\",\"disabled\":\"style_disabled__2A2rd\",\"select\":\"style_select__GRqWL\",\"now\":\"style_now__2I2F4\",\"calendar-container\":\"style_calendar-container__1sVEF\",\"calendar_title\":\"style_calendar_title__1ypYf\",\"calendar_select\":\"style_calendar_select__ofXqF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"total-amount\":\"style_total-amount__23uFI\",\"total-amount_title\":\"style_total-amount_title__3FIuX\",\"total-amount_content\":\"style_total-amount_content__173vO\",\"total-amount_juke\":\"style_total-amount_juke__1V53h\",\"total-amount_juke_text\":\"style_total-amount_juke_text__l-aD8\",\"total-amount_row\":\"style_total-amount_row__14VnF\",\"total-amount_count\":\"style_total-amount_count__2CTws\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"style_home__2IdAK\",\"pockets\":\"style_pockets__2xMzS\",\"pockets-wrapper\":\"style_pockets-wrapper__1rsQV\",\"pockets_content\":\"style_pockets_content__2SnDt\",\"pockets_tables\":\"style_pockets_tables__3MPHV\",\"utils\":\"style_utils__xEDPs\",\"utils_calendar\":\"style_utils_calendar__2XVJz\",\"profile\":\"style_profile__3Jsnd\",\"profile_photo\":\"style_profile_photo__Sm3W4\",\"profile_photo-container\":\"style_profile_photo-container__25Qsi\",\"profile_photo_edit-container\":\"style_profile_photo_edit-container__3bJKs\",\"total-amount_title\":\"style_total-amount_title__1TkuX\"};","export default __webpack_public_path__ + \"static/media/edit.17d10101.svg\";","import {\r\n    setCalendarDayAction,\r\n    setCalendarMonthAction,\r\n    setCalendarYearAction,\r\n    setSelectedOptionAction,\r\n} from \"../../../../../redux/actions/calendar\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport DateHelper from \"../../../../../utils/DateHelper\";\r\nimport { useTypedSelector } from \"../../../../../hooks/useTypedSelectors\";\r\n\r\nconst useCalendar = () => {\r\n    const dispatch = useDispatch();\r\n    const [\r\n        selectedDay,\r\n        selectedMonth,\r\n        selectedYear,\r\n        options,\r\n        selectedOption,\r\n        nowDateStamp,\r\n        prevDateStamp,\r\n    ] = useTypedSelector(({ calendar }) => [\r\n        calendar.selectedDay,\r\n        calendar.selectedMonth,\r\n        calendar.selectedYear,\r\n        calendar.options,\r\n        calendar.selectedOption,\r\n        calendar.nowDateStamp,\r\n        calendar.prevDateStamp,\r\n    ]);\r\n\r\n    const setSelectedOption = (option: string) =>\r\n        dispatch(setSelectedOptionAction(option));\r\n\r\n    const setSelectedDay = (day: number) => dispatch(setCalendarDayAction(day));\r\n\r\n    const setSelectedMonth = (month: number) =>\r\n        dispatch(setCalendarMonthAction(month));\r\n\r\n    const setSelectedYear = (year: number) =>\r\n        dispatch(setCalendarYearAction(year));\r\n    return {\r\n        selectedDay,\r\n        selectedMonth,\r\n        selectedYear,\r\n        setSelectedDay,\r\n        setSelectedMonth,\r\n        setSelectedYear,\r\n        setSelectedOption,\r\n        selectedDayName: DateHelper.dayRuNames[selectedDay],\r\n        selectedMonthName: DateHelper.monthRuNames[selectedMonth],\r\n        options,\r\n        nowDateStamp,\r\n        prevDateStamp,\r\n        selectedOption,\r\n    };\r\n};\r\n\r\nexport default useCalendar;\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { TransactionsActions } from \"../../../redux/actions/transactions\";\r\nimport { batch } from \"react-redux\";\r\nimport useCalendar from \"../components/Calendar/hooks/useCalendar\";\r\nimport { useTypedSelector } from \"../../../hooks/useTypedSelectors\";\r\n\r\nexport type TransactionFormValues = {\r\n    amount: number;\r\n    category: { id: number; value: any };\r\n    date: string;\r\n    id?: number;\r\n};\r\n\r\nconst useTransactions = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const { nowDateStamp, prevDateStamp, selectedOption } = useCalendar();\r\n\r\n    const [transactionItems, transactionGlobalItems, isLoaded] =\r\n        useTypedSelector(({ transactions }) => [\r\n            transactions.items,\r\n            transactions.globalItems,\r\n            transactions.isLoaded,\r\n        ]);\r\n\r\n    const addTransaction = React.useCallback(\r\n        async (data: TransactionFormValues) => {\r\n            dispatch(TransactionsActions.addTransaction(data));\r\n        },\r\n        [dispatch]\r\n    );\r\n\r\n    const updateTransaction = React.useCallback(\r\n        async (data: TransactionFormValues) => {\r\n            dispatch(TransactionsActions.updateTransaction(data));\r\n        },\r\n        [dispatch]\r\n    );\r\n\r\n    const deleteTransaction = React.useCallback(\r\n        async (id: number) => {\r\n            dispatch(TransactionsActions.deleteTransaction(id));\r\n        },\r\n        [dispatch]\r\n    );\r\n\r\n    React.useEffect(() => {\r\n        batch(() => {\r\n            dispatch(TransactionsActions.fetchTransactions());\r\n            dispatch(TransactionsActions.fetchGlobalTransactions());\r\n        });\r\n    }, [dispatch, nowDateStamp, prevDateStamp, selectedOption]);\r\n\r\n    return {\r\n        transactionGlobalItems,\r\n        isLoaded,\r\n        transactionItems,\r\n        addTransaction,\r\n        updateTransaction,\r\n        deleteTransaction,\r\n    };\r\n};\r\n\r\nexport default useTransactions;\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useTypedSelector } from \"../../../hooks/useTypedSelectors\";\r\nimport CategoryActions from \"../../../redux/actions/categories\";\r\nimport useCalendar from \"../components/Calendar/hooks/useCalendar\";\r\n\r\nexport type CategoryFormValues = {\r\n    id?: number;\r\n    category_type: boolean;\r\n    name: string;\r\n};\r\n\r\nconst useCategories = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const { nowDateStamp, prevDateStamp, selectedOption } = useCalendar();\r\n\r\n    const [categoryItems, itemsTransactions, isLoaded] = useTypedSelector(\r\n        ({ categories }) => [\r\n            categories.items,\r\n            categories.itemsTransactions,\r\n            categories.isLoaded,\r\n        ]\r\n    );\r\n\r\n    const addCategory = React.useCallback(\r\n        async (data: CategoryFormValues) => {\r\n            dispatch(CategoryActions.addCategory(data));\r\n        },\r\n        [dispatch]\r\n    );\r\n\r\n    React.useEffect(() => {\r\n        dispatch(CategoryActions.fetchTransactionsByCategories());\r\n    }, [dispatch, nowDateStamp, prevDateStamp, selectedOption]);\r\n\r\n    React.useEffect(() => {\r\n        dispatch(CategoryActions.fetchCategories());\r\n    }, [dispatch]);\r\n\r\n    return {\r\n        categoryItems,\r\n        addCategory,\r\n        itemsTransactions,\r\n        isLoaded,\r\n    };\r\n};\r\n\r\nexport default useCategories;\r\n","import TransactionsModal from \"./TransactionsModal\";\r\n\r\nexport default TransactionsModal;","import { map } from \"lodash\";\r\nimport React from \"react\";\r\nimport { Field } from \"react-final-form\";\r\nimport {\r\n    DateField,\r\n    ModalForm,\r\n    SelectField,\r\n} from \"../../../../../../components/fields\";\r\nimport FormHelper from \"../../../../../../utils/validators/FormHelper\";\r\nimport { Require } from \"../../../../../../utils/validators/RequireValidator\";\r\nimport useCategories from \"../../../../hooks/useCategories\";\r\nimport useTransactions, {\r\n    TransactionFormValues,\r\n} from \"../../../../hooks/useTransactions\";\r\n\r\nimport styles from \"./style.module.scss\";\r\n\r\ntype Props = {\r\n    id?: number | null;\r\n    onClose: () => void;\r\n};\r\n\r\nconst TransactionsModal: React.FC<Props> = ({ id, onClose }) => {\r\n    const isEdit = !!id;\r\n\r\n    const { categoryItems } = useCategories();\r\n\r\n    const options = map(categoryItems, (categoryItem) => ({\r\n        id: categoryItem.id,\r\n        value: categoryItem.name,\r\n    }));\r\n    const { addTransaction, updateTransaction } = useTransactions();\r\n\r\n    const onSubmit = (data: TransactionFormValues) => {\r\n        if (isEdit) {\r\n            data = { ...data, id };\r\n        }\r\n        const func = isEdit ? updateTransaction : addTransaction;\r\n        func(data);\r\n    };\r\n\r\n    return (\r\n        <ModalForm\r\n            title={`${isEdit ? \"Изменить\" : \"Добавить\"} данные`}\r\n            buttonText={isEdit ? \"Сохранить\" : \"Добавить\"}\r\n            onSubmit={onSubmit}\r\n            onClose={onClose}\r\n        >\r\n            <div className={styles[\"fields-container\"]}>\r\n                <div className={styles.fields}>\r\n                    <Field\r\n                        name=\"date\"\r\n                        render={(fieldProps) => (\r\n                            <DateField fieldProps={fieldProps} />\r\n                        )}\r\n                        defaultValue={new Date().toISOString().split(\"T\")[0]}\r\n                    />\r\n                </div>\r\n                <div className={styles.category}>\r\n                    <Field\r\n                        name=\"category\"\r\n                        render={(fieldProps) => (\r\n                            <SelectField\r\n                                placeholder={\"Категория\"}\r\n                                options={options}\r\n                                fieldProps={fieldProps.input}\r\n                            />\r\n                        )}\r\n                        validate={(value, allValues, meta) => {\r\n                            FormHelper.validate([\r\n                                new Require({\r\n                                    msg: \"Категория обязательное поле\",\r\n                                }),\r\n                            ])(value?.value || undefined, allValues, meta);\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div className={styles.fields}>\r\n                    <Field\r\n                        name=\"amount\"\r\n                        component=\"input\"\r\n                        type=\"number\"\r\n                        placeholder=\"Сумма\"\r\n                        className={styles.amount}\r\n                        validate={FormHelper.validate([\r\n                            new Require({\r\n                                msg: \"Сумма обязательное поле\",\r\n                            }),\r\n                        ])}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </ModalForm>\r\n    );\r\n};\r\n\r\nexport default TransactionsModal;\r\n","import TransactionsTable from \"./TransactionsTable\";\r\n\r\nexport default TransactionsTable;","import React from \"react\";\r\nimport { map } from \"lodash\";\r\nimport cn from \"classnames\";\r\nimport { ActivityIndicator, ButtonText } from \"../../../../components\";\r\nimport styles from \"./style.module.scss\";\r\nimport useTransactions from \"../../hooks/useTransactions\";\r\nimport { TTransactionItem } from \"../../../../redux/actions/transactions\";\r\nimport { TransactionsModal } from \"./components\";\r\n\r\nconst countTableView = 9;\r\nconst cellHeight = 59;\r\n\r\nconst TransactionsTable = () => {\r\n    const tableRef = React.useRef<HTMLDivElement>(null);\r\n    const [startRows, setStartRows] = React.useState(0);\r\n    const { transactionItems, deleteTransaction, isLoaded } = useTransactions();\r\n\r\n    const [showModal, setShowModal] = React.useState(false);\r\n    const idItemRef = React.useRef<number | null>(null);\r\n\r\n    const addClickHandler = () => {\r\n        idItemRef.current = null;\r\n        setShowModal(true);\r\n    };\r\n\r\n    const editClickHandler = (id: number) => {\r\n        idItemRef.current = id;\r\n        setShowModal(true);\r\n    };\r\n\r\n    const scrollHandler = (e: any) => {\r\n        setStartRows(Math.floor(e.currentTarget.scrollTop / cellHeight));\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        const table = tableRef.current;\r\n        table?.addEventListener(\"scroll\", scrollHandler);\r\n\r\n        return () => table?.removeEventListener(\"scroll\", scrollHandler);\r\n    }, []);\r\n    return (\r\n        <div>\r\n            {showModal && (\r\n                <TransactionsModal\r\n                    id={idItemRef.current}\r\n                    onClose={() => setShowModal(false)}\r\n                />\r\n            )}\r\n            <table className={styles.table}>\r\n                <thead className={styles.table_header}>\r\n                    <tr>\r\n                        <th className={styles.table_width}>даты</th>\r\n                        <th className={styles.table_width}>категория</th>\r\n                        <th className={styles.table_width}>суммы</th>\r\n                        <th className={styles.table_width}>\r\n                            <div\r\n                                style={{\r\n                                    display: \"flex\",\r\n                                    justifyContent: \"center\",\r\n                                }}\r\n                            >\r\n                                <ButtonText onClick={addClickHandler}>\r\n                                    Добавить\r\n                                </ButtonText>\r\n                            </div>\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n            </table>\r\n            <div className={styles.table_body_scroll} ref={tableRef}>\r\n                {isLoaded ? (\r\n                    !!transactionItems.length ? (\r\n                        <table className={styles.table_body}>\r\n                            <tbody>\r\n                                <tr\r\n                                    style={{\r\n                                        height: cellHeight * startRows,\r\n                                    }}\r\n                                ></tr>\r\n                                {map(\r\n                                    transactionItems.slice(\r\n                                        startRows,\r\n                                        countTableView + startRows\r\n                                    ),\r\n                                    (transactionItem: TTransactionItem) => (\r\n                                        <tr\r\n                                            key={transactionItem.id}\r\n                                            className={cn({\r\n                                                [styles.income]:\r\n                                                    transactionItem.category\r\n                                                        .is_income,\r\n                                            })}\r\n                                        >\r\n                                            <td\r\n                                                className={`${styles.table_cell} ${styles.table_date} ${styles.table_width}`}\r\n                                            >\r\n                                                {new Date(\r\n                                                    transactionItem.transaction_date *\r\n                                                        1000\r\n                                                ).toLocaleDateString()}\r\n                                            </td>\r\n                                            <td\r\n                                                className={`${styles.table_cell} ${styles.table_width}`}\r\n                                            >\r\n                                                {transactionItem.category.name}\r\n                                            </td>\r\n                                            <td\r\n                                                className={`${styles.table_cell} ${styles.table_amount} ${styles.table_width}`}\r\n                                            >\r\n                                                {transactionItem.amount}\r\n                                            </td>\r\n                                            <td\r\n                                                className={`${styles.table_cell} ${styles.table_width}`}\r\n                                            >\r\n                                                <svg\r\n                                                    width=\"22\"\r\n                                                    height=\"22\"\r\n                                                    viewBox=\"0 0 22 22\"\r\n                                                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                                                    className={\r\n                                                        styles.table_edit\r\n                                                    }\r\n                                                    onClick={() =>\r\n                                                        editClickHandler(\r\n                                                            transactionItem.id\r\n                                                        )\r\n                                                    }\r\n                                                >\r\n                                                    <path\r\n                                                        fillRule=\"evenodd\"\r\n                                                        clipRule=\"evenodd\"\r\n                                                        d=\"M21.7 5.7L11.7 15.7C11.5 15.9 11.3 16 11 16H7C6.4 16 6 15.6 6 15V11C6 10.7 6.1 10.5 6.3 10.3L16.3 0.3C16.7 -0.1 17.3 -0.1 17.7 0.3L21.7 4.3C22.1 4.7 22.1 5.3 21.7 5.7ZM20 13.7V19C20 20.7 18.7 22 17 22H3C1.3 22 0 20.7 0 19V5C0 3.3 1.3 2 3 2H8.3C8.9 2 9.3 2.4 9.3 3C9.3 3.6 8.9 4 8.3 4H3C2.4 4 2 4.4 2 5V19C2 19.6 2.4 20 3 20H17C17.6 20 18 19.6 18 19V13.7C18 13.1 18.4 12.7 19 12.7C19.6 12.7 20 13.1 20 13.7ZM17 2.4L19.6 5L10.6 14H8V11.4L17 2.4Z\"\r\n                                                    />\r\n                                                </svg>\r\n\r\n                                                <svg\r\n                                                    width=\"20\"\r\n                                                    height=\"22\"\r\n                                                    viewBox=\"0 0 20 22\"\r\n                                                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                                                    className={\r\n                                                        styles.table_delete\r\n                                                    }\r\n                                                    onClick={() =>\r\n                                                        deleteTransaction(\r\n                                                            transactionItem.id\r\n                                                        )\r\n                                                    }\r\n                                                >\r\n                                                    <path\r\n                                                        fillRule=\"evenodd\"\r\n                                                        clipRule=\"evenodd\"\r\n                                                        d=\"M19 4H15V3C15 1.3 13.7 0 12 0H8C6.3 0 5 1.3 5 3V4H1C0.4 4 0 4.4 0 5C0 5.6 0.4 6 1 6H2V19C2 20.7 3.3 22 5 22H15C16.7 22 18 20.7 18 19V6H19C19.6 6 20 5.6 20 5C20 4.4 19.6 4 19 4ZM7 3C7 2.4 7.4 2 8 2H12C12.6 2 13 2.4 13 3V4H7V3ZM15 20C15.6 20 16 19.6 16 19V6H4V19C4 19.6 4.4 20 5 20H15ZM9 10V16C9 16.6 8.6 17 8 17C7.4 17 7 16.6 7 16V10C7 9.4 7.4 9 8 9C8.6 9 9 9.4 9 10ZM13 16V10C13 9.4 12.6 9 12 9C11.4 9 11 9.4 11 10V16C11 16.6 11.4 17 12 17C12.6 17 13 16.6 13 16Z\"\r\n                                                    />\r\n                                                </svg>\r\n                                            </td>\r\n                                        </tr>\r\n                                    )\r\n                                )}\r\n\r\n                                <tr\r\n                                    style={{\r\n                                        height:\r\n                                            cellHeight *\r\n                                            (transactionItems.length -\r\n                                                (countTableView + startRows)),\r\n                                    }}\r\n                                ></tr>\r\n                            </tbody>\r\n                        </table>\r\n                    ) : (\r\n                        <div className={styles.table_empty}>\r\n                            Записей пока нет\r\n                        </div>\r\n                    )\r\n                ) : (\r\n                    <ActivityIndicator />\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TransactionsTable;\r\n","import Tabs from './Tabs';\r\n\r\nexport default Tabs;","import React from \"react\";\r\nimport { map } from \"lodash\";\r\nimport cn from \"classnames\";\r\nimport { FieldInputProps } from \"react-final-form\";\r\n\r\nimport styles from \"./style.module.scss\";\r\n\r\ntype TabProps = {\r\n    id: number;\r\n    value: any;\r\n    label: string;\r\n};\r\n\r\ntype TabsProps = {\r\n    items: TabProps[];\r\n    fieldProps: FieldInputProps<any>;\r\n};\r\n\r\nconst Tabs: React.FC<TabsProps> = ({ items, fieldProps }) => {\r\n    const [selectedTab, setSelectedTab] = React.useState(items[0]);\r\n\r\n    const onClickHandler = (item: TabProps) => {\r\n        setSelectedTab(item);\r\n        fieldProps.onChange(item.value);\r\n    };\r\n\r\n    return (\r\n        <div className={styles.tabs}>\r\n            {map(items, (item) => (\r\n                <span\r\n                    key={item.id}\r\n                    className={cn(styles.tabs_item, {\r\n                        [styles.tabs_item__active]: selectedTab.id === item.id,\r\n                    })}\r\n                    onClick={() => onClickHandler(item)}\r\n                >\r\n                    {item.label}\r\n                </span>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Tabs;\r\n","import SummaryModal from \"./SummaryModal\";\r\n\r\nexport default SummaryModal;","import React from \"react\";\r\nimport { Field } from \"react-final-form\";\r\nimport { ModalForm } from \"../../../../../../components/fields\";\r\nimport FormHelper from \"../../../../../../utils/validators/FormHelper\";\r\nimport { Range } from \"../../../../../../utils/validators/RangeValidator\";\r\nimport { Require } from \"../../../../../../utils/validators/RequireValidator\";\r\nimport useCategories, { CategoryFormValues } from \"../../../../hooks/useCategories\";\r\nimport { Tabs } from \"./Components\";\r\n\r\nimport styles from \"./style.module.scss\";\r\n\r\ntype Props = {\r\n    onClose: () => void;\r\n};\r\n\r\nconst SummaryModal: React.FC<Props> = ({ onClose }) => {\r\n    const { addCategory } = useCategories();\r\n\r\n    const onSubmit = (data: CategoryFormValues) => {\r\n        addCategory(data);\r\n    };\r\n\r\n    const tabs = [\r\n        {\r\n            id: 1,\r\n            label: \"Доход\",\r\n            value: true,\r\n        },\r\n        {\r\n            id: 2,\r\n            label: \"Расход\",\r\n            value: false,\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <ModalForm\r\n            title=\"Добавить данные\"\r\n            buttonText=\"Добавить\"\r\n            onSubmit={onSubmit}\r\n            onClose={onClose}\r\n        >\r\n            <div className={styles[\"fields-container\"]}>\r\n                <div className={styles[\"fields-tabs\"]}>\r\n                    <Field\r\n                        name=\"category_type\"\r\n                        render={(fieldProps) => (\r\n                            <Tabs items={tabs} fieldProps={fieldProps.input} />\r\n                        )}\r\n                    />\r\n                </div>\r\n                <Field\r\n                    name=\"name\"\r\n                    component=\"input\"\r\n                    type=\"text\"\r\n                    placeholder=\"Название\"\r\n                    className={styles.input}\r\n                    validate={FormHelper.validate([\r\n                        new Require({ msg: \"Название обязательно\" }),\r\n                        new Range({\r\n                            min: {\r\n                                count: 2,\r\n                                msg: \"Название не может быть меньше чем 2 символа\",\r\n                            },\r\n                            max: {\r\n                                count: 255,\r\n                                msg: \"Название не может быть больше чем 255 символа\",\r\n                            },\r\n                        }),\r\n                    ])}\r\n                />\r\n            </div>\r\n        </ModalForm>\r\n    );\r\n};\r\n\r\nexport default SummaryModal;\r\n","import Summary from \"./Summary\";\r\n\r\nexport default Summary;","import React from \"react\";\r\nimport { ActivityIndicator, ButtonText } from \"../../../../components\";\r\nimport { map } from \"lodash\";\r\nimport cn from \"classnames\";\r\n\r\nimport styles from \"./style.module.scss\";\r\nimport useCategories from \"../../hooks/useCategories\";\r\nimport { SummaryModal } from \"./components\";\r\n\r\nconst Summary = () => {\r\n    const { itemsTransactions, isLoaded } = useCategories();\r\n\r\n    const [showModal, setShowModal] = React.useState(false);\r\n\r\n    const addClickHandler = () => {\r\n        setShowModal(true);\r\n    };\r\n\r\n    const items = itemsTransactions.filter((item) => item.transactions_sum > 0);\r\n\r\n    return (\r\n        <div className={styles.summary}>\r\n            {showModal && <SummaryModal onClose={() => setShowModal(false)} />}\r\n            <div className={styles.summary_header}>\r\n                <h3>Суммарно</h3>\r\n                <ButtonText onClick={addClickHandler}>\r\n                    Добавить категорию\r\n                </ButtonText>\r\n            </div>\r\n            <table className={`${styles.table} ${styles.table_head}`}>\r\n                <thead>\r\n                    <tr>\r\n                        <th className={styles.table_cell}>Расходы</th>\r\n                        <th className={styles.table_cell}>Сумма</th>\r\n                    </tr>\r\n                </thead>\r\n            </table>\r\n            <div className={styles.table_scroll}>\r\n                {isLoaded ? (\r\n                    !!items.length ? (\r\n                        <table className={styles.table}>\r\n                            <tbody>\r\n                                {map(items, (categoryItem) => (\r\n                                    <tr\r\n                                        key={categoryItem.id}\r\n                                        className={cn(styles.table_row, {\r\n                                            [styles.income]:\r\n                                                categoryItem.is_income,\r\n                                        })}\r\n                                    >\r\n                                        <td\r\n                                            className={`${styles.table_cell} ${styles.table_category}`}\r\n                                        >\r\n                                            {categoryItem.name}\r\n                                        </td>\r\n                                        <td\r\n                                            className={`${styles.table_cell} ${styles.table_amount}`}\r\n                                        >\r\n                                            {categoryItem.transactions_sum}\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </table>\r\n                    ) : (\r\n                        <div className={styles.table_empty}>\r\n                            Записей пока нет\r\n                        </div>\r\n                    )\r\n                ) : (\r\n                    <ActivityIndicator />\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Summary;\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useTypedSelector } from \"../../../hooks/useTypedSelectors\";\r\nimport { WidgetsActions } from \"../../../redux/actions/widgets\";\r\nimport useCalendar from \"../components/Calendar/hooks/useCalendar\";\r\n\r\nexport type WidgetFormValues = {\r\n    category: {\r\n        id: number;\r\n        value: string;\r\n    };\r\n    color: {\r\n        id: number;\r\n        value: string;\r\n    };\r\n    isMore: boolean;\r\n    limit: string;\r\n    period: {\r\n        id: number;\r\n        value: \"День\" | \"Неделя\" | \"Месяц\" | \"Год\";\r\n    };\r\n};\r\n\r\nconst useWidgets = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const { nowDateStamp, prevDateStamp, selectedOption } = useCalendar();\r\n\r\n    const [widgetItems, widgetColors] = useTypedSelector(({ widgets }) => [\r\n        widgets.items,\r\n        widgets.colors,\r\n    ]);\r\n\r\n    const addWidget = React.useCallback(\r\n        async (data: WidgetFormValues) => {\r\n            dispatch(WidgetsActions.addWidgetAction(data));\r\n        },\r\n        [dispatch]\r\n    );\r\n\r\n    const deleteWidget = React.useCallback(\r\n        async (id: number) => {\r\n            dispatch(WidgetsActions.deleteWidgetAction(id));\r\n        },\r\n        [dispatch]\r\n    );\r\n\r\n    React.useEffect(() => {\r\n        dispatch(WidgetsActions.fetchWidgetColors());\r\n    }, [dispatch]);\r\n\r\n    React.useEffect(() => {\r\n        dispatch(WidgetsActions.fetchWidgets());\r\n    }, [dispatch, nowDateStamp, prevDateStamp, selectedOption]);\r\n\r\n    return {\r\n        widgetItems,\r\n        widgetColors,\r\n        addWidget,\r\n        deleteWidget,\r\n    };\r\n};\r\n\r\nexport default useWidgets;\r\n","import Widget from \"./Widget\";\r\n\r\nexport default Widget;","import React from \"react\";\r\n\r\nimport styles from \"./style.module.scss\";\r\n\r\nexport type Props = {\r\n    color: string;\r\n    isMore: boolean;\r\n    period: \"День\" | \"Неделя\" | \"Месяц\" | \"Год\";\r\n    limit: number;\r\n    transactionsSum: number;\r\n    categoryName: string;\r\n    onClick: () => void;\r\n};\r\n\r\nconst Widget: React.FC<Props> = ({\r\n    color,\r\n    isMore,\r\n    period,\r\n    limit,\r\n    transactionsSum,\r\n    categoryName,\r\n    onClick,\r\n}) => {\r\n\r\n    return (\r\n        <div className={styles.widget} style={{ background: color + \"22\" }}>\r\n            <svg\r\n                width=\"20\"\r\n                height=\"20\"\r\n                viewBox=\"0 0 20 20\"\r\n                fill=\"none\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                className={styles.widget_delete}\r\n                onClick={onClick}\r\n            >\r\n                <path\r\n                    d=\"M18.8639 10.1622L11.0968 17.5442C9.90192 18.6799 8.36558 19.1667 6.82924 19.1667C5.2929 19.1667 3.75656 18.5988 2.56163 17.5442C0.257125 15.354 0.257125 11.7035 2.56163 9.51327L10.414 2.05014C11.1822 1.32005 12.2918 0.833328 13.4014 0.833328C14.5109 0.833328 15.6205 1.23893 16.3887 2.05014C18.0957 3.67256 18.0957 6.18731 16.3887 7.80973L8.53628 15.2729C7.51206 16.2463 5.89037 16.2463 4.95149 15.2729C4.52473 14.8673 4.26868 14.2183 4.26868 13.5693C4.26868 12.9203 4.52473 12.2714 5.03684 11.8658L12.2918 4.9705C12.6332 4.64601 13.1453 4.64601 13.4867 4.9705C13.8281 5.29498 13.8281 5.78171 13.4867 6.10619L6.23177 13.0015C6.06107 13.1637 5.97572 13.326 5.97572 13.5693C5.97572 13.8127 6.06107 13.9749 6.23177 14.1372C6.57318 14.4616 7.0853 14.4616 7.4267 14.1372L15.2791 6.67404C16.3033 5.70058 16.3033 4.15929 15.2791 3.26696C14.3402 2.37463 12.6332 2.37463 11.6943 3.26696L3.84191 10.7301C2.13487 12.3525 2.13487 14.8673 3.84191 16.4897C5.54896 18.1121 8.19487 18.1121 9.90192 16.4897L17.7543 9.02654C18.0957 8.70206 18.6078 8.70206 18.9492 9.02654C19.2907 9.35103 19.2053 9.83775 18.8639 10.1622Z\"\r\n                    fill=\"black\"\r\n                />\r\n            </svg>\r\n\r\n            <div className={styles.widget_left}>\r\n                <div className={styles.widget_img}>\r\n                    <svg\r\n                        width=\"24\"\r\n                        height=\"36\"\r\n                        viewBox=\"0 0 24 36\"\r\n                        fill=\"none\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                    >\r\n                        <path\r\n                            fillRule=\"evenodd\"\r\n                            clipRule=\"evenodd\"\r\n                            d=\"M23.4782 12.237C23.4782 5.93709 18.313 0.782608 12 0.782608C5.68695 0.782608 0.521729 5.93709 0.521729 12.237C0.521729 15.9597 2.24347 19.2528 4.96955 21.2573L3.39129 33.5708C3.24782 34.1435 3.53477 34.7163 3.96521 35.0026C4.39564 35.289 4.96955 35.289 5.54347 35.0026L12 31.1368L18.4565 35.0026C18.6 35.1458 18.8869 35.1458 19.1739 35.1458C19.4609 35.1458 19.7478 35.0026 19.8913 34.8594C20.3217 34.5731 20.6087 34.0004 20.4652 33.4276L18.8869 21.2573C21.7565 19.2528 23.4782 15.9597 23.4782 12.237ZM3.39129 12.237C3.39129 7.51207 7.26521 3.64621 12 3.64621C16.7348 3.64621 20.6087 7.51207 20.6087 12.237C20.6087 16.9619 16.7348 20.8278 12 20.8278C7.26521 20.8278 3.39129 16.9619 3.39129 12.237ZM12.7174 28.2732L17.3087 30.9936L16.3043 22.8324C15.013 23.4051 13.5783 23.6914 12 23.6914C10.4217 23.6914 8.98695 23.4051 7.69564 22.8324L6.69129 30.9936L11.2826 28.2732C11.713 27.9868 12.2869 27.9868 12.7174 28.2732Z\"\r\n                            fill={color}\r\n                        />\r\n                    </svg>\r\n                </div>\r\n                <p className={styles.widget_validity}>{period}</p>\r\n            </div>\r\n            <div className={styles.widget_right}>\r\n                <p className={styles.widget_title}>\r\n                    Тратить на {categoryName.toLowerCase()} {isMore ? 'больше' : 'меньше'} {limit} рублей\r\n                </p>\r\n                <p className={styles.widget_sum} style={{ color: color }}>\r\n                    {transactionsSum}/{limit}\r\n                </p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Widget;\r\n","import React from \"react\";\r\nimport { Field, FieldInputProps } from \"react-final-form\";\r\nimport cn from \"classnames\";\r\nimport { map, filter } from \"lodash\";\r\n\r\nimport useWidgets, { WidgetFormValues } from \"../../../../hooks/useWidgets\";\r\nimport { ModalForm, SelectField } from \"../../../../../../components/fields\";\r\nimport useCategories from \"../../../../hooks/useCategories\";\r\n\r\nimport styles from \"./style.module.scss\";\r\nimport { TWidgetColor } from \"../../../../../../redux/actions/widgets\";\r\nimport FormHelper from \"../../../../../../utils/validators/FormHelper\";\r\nimport { Require } from \"../../../../../../utils/validators/RequireValidator\";\r\n\r\ntype Props = {\r\n    onClose: () => void;\r\n};\r\n\r\nconst optionsPeriods = [\r\n    {\r\n        id: 1,\r\n        value: \"День\",\r\n    },\r\n    {\r\n        id: 2,\r\n        value: \"Неделя\",\r\n    },\r\n    {\r\n        id: 3,\r\n        value: \"Месяц\",\r\n    },\r\n    {\r\n        id: 4,\r\n        value: \"Год\",\r\n    },\r\n];\r\n\r\ntype ColorFieldProps = {\r\n    colors: TWidgetColor[];\r\n    fieldProps: FieldInputProps<any>;\r\n};\r\n\r\nconst ColorField: React.FC<ColorFieldProps> = ({ colors, fieldProps }) => {\r\n    const onClickHandle = (color: TWidgetColor) => {\r\n        fieldProps.onChange(color);\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        if (!!colors.length && !fieldProps.value) {\r\n            fieldProps.onChange(colors[0]);\r\n        }\r\n    }, [fieldProps, colors]);\r\n    return (\r\n        <div className={styles[\"color-field\"]}>\r\n            {map(colors, (color) => (\r\n                <span\r\n                    key={color.id}\r\n                    onClick={() => onClickHandle(color)}\r\n                    className={cn(styles[\"color-field_item\"], {\r\n                        [styles.active]: color.id === fieldProps.value.id,\r\n                    })}\r\n                    style={{ background: color.value }}\r\n                ></span>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst TabsField: React.FC<{ fieldProps: FieldInputProps<any> }> = ({\r\n    fieldProps,\r\n}) => {\r\n    const [activeTab, setActiveTab] = React.useState(false);\r\n\r\n    const moreHandler = () => {\r\n        setActiveTab(true);\r\n        fieldProps.onChange(true);\r\n    };\r\n\r\n    const lessHandler = () => {\r\n        setActiveTab(false);\r\n        fieldProps.onChange(false);\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        if (!fieldProps.value) {\r\n            fieldProps.onChange(false);\r\n        }\r\n    }, [fieldProps]);\r\n    return (\r\n        <div className={styles.tabs}>\r\n            <div\r\n                className={cn(styles.tabs_item, {\r\n                    [styles.active]: activeTab,\r\n                })}\r\n                onClick={moreHandler}\r\n            >\r\n                Больше\r\n            </div>\r\n            <div\r\n                className={cn(styles.tabs_item, {\r\n                    [styles.active]: !activeTab,\r\n                })}\r\n                onClick={lessHandler}\r\n            >\r\n                Меньше\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst WidgetsModal: React.FC<Props> = ({ onClose }) => {\r\n    const { widgetColors, addWidget } = useWidgets();\r\n\r\n    const { categoryItems } = useCategories();\r\n\r\n    const categoryOptions = map(\r\n        filter(categoryItems, (categoryItem) => !categoryItem.is_income),\r\n        (categoryItem) => ({\r\n            id: categoryItem.id,\r\n            value: categoryItem.name,\r\n        })\r\n    );\r\n\r\n    const onSubmit = (data: WidgetFormValues) => {\r\n        addWidget(data);\r\n    };\r\n\r\n    return (\r\n        <ModalForm\r\n            title=\"Добавить данные\"\r\n            buttonText=\"Добавить\"\r\n            onSubmit={onSubmit}\r\n            onClose={onClose}\r\n        >\r\n            <div className={styles[\"fields-container\"]}>\r\n                <div className={styles[\"fields-top\"]}>\r\n                    <Field\r\n                        name=\"color\"\r\n                        render={(fieldProps) => (\r\n                            <ColorField\r\n                                colors={widgetColors}\r\n                                fieldProps={fieldProps.input}\r\n                            />\r\n                        )}\r\n                    />\r\n                    <div className={styles[\"fields\"]}>\r\n                        <Field\r\n                            name=\"limit\"\r\n                            component=\"input\"\r\n                            type=\"number\"\r\n                            placeholder=\"Лимит\"\r\n                            className={styles.input}\r\n                            validate={FormHelper.validate([\r\n                                new Require({ msg: \"Лимит обязательное поле\" }),\r\n                            ])}\r\n                        />\r\n                    </div>\r\n                    <div className={styles[\"fields\"]}>\r\n                        <Field\r\n                            name=\"category\"\r\n                            render={(fieldProps) => (\r\n                                <SelectField\r\n                                    placeholder=\"Категория\"\r\n                                    options={categoryOptions}\r\n                                    fieldProps={fieldProps.input}\r\n                                />\r\n                            )}\r\n                            validate={(value, allValues, meta) => {\r\n                                FormHelper.validate([\r\n                                    new Require({\r\n                                        msg: \"Категория обязательное поле\",\r\n                                    }),\r\n                                ])(value?.value, allValues, meta);\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    <div className={styles[\"fields\"]}>\r\n                        <Field\r\n                            name=\"period\"\r\n                            render={(fieldProps) => (\r\n                                <SelectField\r\n                                    placeholder=\"Срок\"\r\n                                    options={optionsPeriods}\r\n                                    fieldProps={fieldProps.input}\r\n                                />\r\n                            )}\r\n                            validate={(value, allValues, meta) => {\r\n                                FormHelper.validate([\r\n                                    new Require({\r\n                                        msg: \"Срок обязательное поле\",\r\n                                    }),\r\n                                ])(value?.value, allValues, meta);\r\n                            }}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <Field\r\n                    name=\"isMore\"\r\n                    render={(fieldProps) => (\r\n                        <TabsField fieldProps={fieldProps.input} />\r\n                    )}\r\n                />\r\n            </div>\r\n        </ModalForm>\r\n    );\r\n};\r\n\r\nexport default WidgetsModal;\r\n","import WidgetsModal from \"./WidgetsModal\";\r\n\r\nexport default WidgetsModal;","import GraphsModal from \"./GraphsModal\";\r\n\r\nexport default GraphsModal;","import React from \"react\";\r\nimport { ModalContainer } from \"../../../../../../components\";\r\nimport { RadialChart, Hint } from \"react-vis\";\r\n\r\nimport styles from \"./style.module.scss\";\r\nimport useCategories from \"../../../../hooks/useCategories\";\r\nimport { map } from \"lodash\";\r\n\r\ntype Props = {\r\n    onClose: () => void;\r\n};\r\n\r\nconst GraphsModal: React.FC<Props> = ({ onClose }) => {\r\n    const [state, setState] = React.useState<any>(false);\r\n    const [values, setValues] = React.useState<any[]>([]);\r\n\r\n    const { itemsTransactions } = useCategories();\r\n    console.log(values);\r\n    React.useEffect(() => {\r\n        setValues(\r\n            map(itemsTransactions, (item) => ({\r\n                id: item.id,\r\n                name: item.name,\r\n                transactionsSum: item.transactions_sum,\r\n            }))\r\n        );\r\n    }, [itemsTransactions]);\r\n    return (\r\n        <ModalContainer onClose={onClose}>\r\n            <h2 className={styles.title}>График</h2>\r\n            <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                <RadialChart\r\n                    innerRadius={120}\r\n                    radius={175}\r\n                    getAngle={(d) => d.transactionsSum}\r\n                    onValueClick={(data) => console.log(data)}\r\n                    data={values}\r\n                    onValueMouseOver={(v) => setState(v)}\r\n                    onSeriesMouseOut={() => setState(false)}\r\n                    width={360}\r\n                    height={360}\r\n                >\r\n                    {state !== false && (\r\n                        <Hint value={state}>\r\n                            <div className={styles.hint}>\r\n                                {state.name}\r\n                            </div>\r\n                        </Hint>\r\n                    )}\r\n                </RadialChart>\r\n            </div>\r\n        </ModalContainer>\r\n    );\r\n};\r\n\r\nexport default GraphsModal;\r\n","import Widgets from \"./Widgets\";\r\n\r\nexport default Widgets;","import React from \"react\";\r\nimport useWidgets from \"../../hooks/useWidgets\";\r\nimport { Widget, WidgetsModal } from \"./components\";\r\nimport { map } from \"lodash\";\r\n\r\nimport styles from \"./style.module.scss\";\r\nimport cn from \"classnames\";\r\nimport GraphsModal from \"./components/GraphsModal\";\r\n\r\nconst countShow = 4;\r\n\r\nconst Widgets = () => {\r\n    const { widgetItems, deleteWidget } = useWidgets();\r\n    const [showIndex, setShowIndex] = React.useState(0);\r\n\r\n    const onClickHandle = () => {\r\n        setShowIndex((prev) => (prev > 0 ? 0 : 2));\r\n    };\r\n\r\n    const [showModalForm, setShowModalForm] = React.useState(false);\r\n    const [showModalGraphs, setShowModalGraphs] = React.useState(false);\r\n    return (\r\n        <div className={cn(styles[\"widgets-container\"])}>\r\n            {showModalForm && <WidgetsModal onClose={() => setShowModalForm(false)} />}\r\n            {showModalGraphs && <GraphsModal onClose={() => setShowModalGraphs(false)} />}\r\n            <div className={styles[\"widgets-items\"]}>\r\n                {map(\r\n                    widgetItems.slice(showIndex, showIndex + countShow),\r\n                    (widgetItem) => (\r\n                        <div\r\n                            className={styles[\"widgets-item\"]}\r\n                            key={widgetItem.id}\r\n                        >\r\n                            <Widget\r\n                                color={widgetItem.color}\r\n                                isMore={widgetItem.is_more}\r\n                                period={widgetItem.period}\r\n                                limit={widgetItem.limit}\r\n                                transactionsSum={widgetItem.transactions_sum}\r\n                                categoryName={widgetItem.category.name}\r\n                                onClick={() => deleteWidget(widgetItem.id)}\r\n                            />\r\n                        </div>\r\n                    )\r\n                )}\r\n            </div>\r\n\r\n            <div className={styles[\"widgets_more\"]}>\r\n                {widgetItems.length > countShow && (\r\n                    <button\r\n                        className={cn(styles.widgets_next, {\r\n                            [styles[\"widgets_next__reverse\"]]: showIndex > 0,\r\n                        })}\r\n                        onClick={onClickHandle}\r\n                    >\r\n                        <svg\r\n                            width=\"184\"\r\n                            height=\"24\"\r\n                            viewBox=\"0 0 184 24\"\r\n                            fill=\"none\"\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                        >\r\n                            <path\r\n                                d=\"M183.061 13.0606C183.646 12.4749 183.646 11.5251 183.061 10.9393L173.515 1.39338C172.929 0.807596 171.979 0.807596 171.393 1.39338C170.808 1.97917 170.808 2.92892 171.393 3.5147L179.879 12L171.393 20.4853C170.808 21.0711 170.808 22.0208 171.393 22.6066C171.979 23.1924 172.929 23.1924 173.515 22.6066L183.061 13.0606ZM1.31134e-07 13.5L182 13.5L182 10.5L-1.31134e-07 10.5L1.31134e-07 13.5Z\"\r\n                                fill=\"#5D5FEF\"\r\n                            />\r\n                        </svg>\r\n                    </button>\r\n                )}\r\n                <div className={styles.widgets_handler}>\r\n                    <button\r\n                        className={styles.widgets_add}\r\n                        onClick={() => setShowModalGraphs(true)}\r\n                    >\r\n                        Графики\r\n                    </button>\r\n                    <button\r\n                        className={styles.widgets_add}\r\n                        onClick={() => setShowModalForm(true)}\r\n                    >\r\n                        Добавить виджет\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Widgets;\r\n","import Calendar from \"./Calendar\";\r\n\r\nexport default Calendar;","import React from \"react\";\r\nimport { range, map } from \"lodash\";\r\nimport cn from \"classnames\";\r\n\r\nimport DateHelper from \"../../../../utils/DateHelper\";\r\n\r\nimport styles from \"./style.module.scss\";\r\nimport { Select } from \"../../../../components\";\r\nimport useCalendar from \"./hooks/useCalendar\";\r\n\r\nconst totalDays = 42;\r\n\r\nconst Calendar = () => {\r\n    const {\r\n        selectedDay,\r\n        selectedMonth,\r\n        selectedYear,\r\n        setSelectedDay,\r\n        setSelectedMonth,\r\n        setSelectedYear,\r\n        options,\r\n        setSelectedOption,\r\n    } = useCalendar();\r\n    const nowDate = new Date();\r\n\r\n    const dayOnWeek = DateHelper.getDayOnWeek(\r\n        new Date(selectedYear, selectedMonth, 0)\r\n    );\r\n\r\n    const daysInMonth = DateHelper.getCountDaysInMonth(selectedMonth + 1);\r\n    const daysInPrevMonth = DateHelper.getCountDaysInMonth(selectedMonth);\r\n    const daysInNextMonth = totalDays - (daysInMonth + dayOnWeek);\r\n\r\n    const prevClickHandler = () => {\r\n        let index = selectedMonth - 1;\r\n        if (index < 0) {\r\n            index = 11;\r\n            setSelectedYear(selectedYear - 1);\r\n        }\r\n        setSelectedMonth(index);\r\n    };\r\n    const nextClickHandler = () => {\r\n        let index = selectedMonth + 1;\r\n        if (index > 11) {\r\n            index = 0;\r\n            setSelectedYear(selectedYear + 1);\r\n        }\r\n        setSelectedMonth(index);\r\n    };\r\n\r\n    const onSelectChangeHandler = (option: string) => {\r\n        setSelectedOption(option);\r\n    };\r\n    return (\r\n        <div className={styles[\"calendar-container\"]}>\r\n            <div className={styles.calendar_title}>\r\n                <h3>Выбор даты</h3>\r\n                <div className={styles.calendar_select}>\r\n                    <Select\r\n                        options={options}\r\n                        onChange={onSelectChangeHandler}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className={styles[\"calendar_month-switch\"]}>\r\n                <span\r\n                    className={styles[\"calendar_month-switch_svg\"]}\r\n                    onClick={prevClickHandler}\r\n                >\r\n                    <svg\r\n                        width=\"6\"\r\n                        height=\"12\"\r\n                        viewBox=\"0 0 6 12\"\r\n                        fill=\"none\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                    >\r\n                        <path\r\n                            d=\"M5.775 9.975C6.075 10.275 6.075 10.725 5.775 11.025C5.625 11.175 5.475 11.25 5.25 11.25C5.025 11.25 4.875 11.175 4.725 11.025L0.225 6.525C-0.075 6.225 -0.075 5.775 0.225 5.475L4.725 0.975C5.025 0.675 5.475 0.675 5.775 0.975C6.075 1.275 6.075 1.725 5.775 2.025L1.8 6L5.775 9.975Z\"\r\n                            fill=\"#6E6B7B\"\r\n                        />\r\n                    </svg>\r\n                </span>\r\n\r\n                <div className={styles[\"calendar_month-switch_date\"]}>\r\n                    <span className={styles[\"calendar_month-switch_month\"]}>\r\n                        {DateHelper.monthRuNames[selectedMonth]}\r\n                    </span>\r\n                    <span className={styles[\"calendar_month-switch_year\"]}>\r\n                        {selectedYear}\r\n                    </span>\r\n                </div>\r\n                <span\r\n                    className={styles[\"calendar_month-switch_svg\"]}\r\n                    onClick={nextClickHandler}\r\n                >\r\n                    <svg\r\n                        width=\"6\"\r\n                        height=\"12\"\r\n                        viewBox=\"0 0 6 12\"\r\n                        fill=\"none\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                    >\r\n                        <path\r\n                            d=\"M5.775 6.525L1.275 11.025C1.125 11.175 0.975 11.25 0.75 11.25C0.525 11.25 0.375 11.175 0.225 11.025C-0.075 10.725 -0.075 10.275 0.225 9.975L4.2 6L0.225 2.025C-0.075 1.725 -0.075 1.275 0.225 0.975C0.525 0.675 0.975 0.675 1.275 0.975L5.775 5.475C6.075 5.775 6.075 6.225 5.775 6.525Z\"\r\n                            fill=\"#6E6B7B\"\r\n                        />\r\n                    </svg>\r\n                </span>\r\n            </div>\r\n            <div className={styles[\"calendar_week-days\"]}>\r\n                {map(DateHelper.dayRuNames, (day) => (\r\n                    <div\r\n                        className={styles[\"calendar_week-days_item\"]}\r\n                        key={day.abbreviation}\r\n                    >\r\n                        {day.abbreviation}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <div className={styles.calendar}>\r\n                {range(\r\n                    daysInPrevMonth - dayOnWeek + 1,\r\n                    daysInPrevMonth + 1\r\n                ).map((day) => (\r\n                    <div\r\n                        className={`${styles.calendar_day} ${styles.disabled}`}\r\n                        key={`prev_${day}`}\r\n                        onClick={() => {\r\n                            prevClickHandler();\r\n                            setSelectedDay(day);\r\n                        }}\r\n                    >\r\n                        {day}\r\n                    </div>\r\n                ))}\r\n\r\n                {range(1, daysInMonth + 1).map((day) => (\r\n                    <div\r\n                        className={cn(styles.calendar_day, {\r\n                            [styles.now]:\r\n                                day === nowDate.getDate() &&\r\n                                nowDate.getMonth() === selectedMonth &&\r\n                                nowDate.getFullYear() === selectedYear,\r\n                            [styles.select]: day === selectedDay,\r\n                        })}\r\n                        key={`active_${day}`}\r\n                        onClick={() => setSelectedDay(day)}\r\n                    >\r\n                        {day}\r\n                    </div>\r\n                ))}\r\n\r\n                {range(1, daysInNextMonth + 1).map((day) => (\r\n                    <div\r\n                        className={`${styles.calendar_day} ${styles.disabled}`}\r\n                        key={`next_${day}`}\r\n                        onClick={() => {\r\n                            nextClickHandler();\r\n                            setSelectedDay(day);\r\n                        }}\r\n                    >\r\n                        {day}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Calendar;\r\n","import TotalAmount from \"./TotalAmount\";\r\n\r\nexport default TotalAmount;","import React from \"react\";\r\nimport useTransactions from \"../../hooks/useTransactions\";\r\nimport { map } from \"lodash\";\r\n\r\nimport styles from \"./style.module.scss\";\r\nimport useCalendar from \"../Calendar/hooks/useCalendar\";\r\n\r\nconst TotalAmount = () => {\r\n    const { transactionGlobalItems } = useTransactions();\r\n    const { selectedMonthName, selectedYear } = useCalendar();\r\n\r\n    const items = transactionGlobalItems.filter((item) => item.amount > 0);\r\n    return (\r\n        <div className={styles[\"total-amount\"]}>\r\n            <div className={styles[\"total-amount_content\"]}>\r\n                <h2 className={styles[\"total-amount_title\"]}>\r\n                    {selectedMonthName} {selectedYear}\r\n                </h2>\r\n                {!!items.length ? (\r\n                    <>\r\n                        <div>\r\n                            {map(items, (item, index) => (\r\n                                <div\r\n                                    className={styles[\"total-amount_row\"]}\r\n                                    key={`${index}_${item.name}`}\r\n                                >\r\n                                    <span>{item.name}</span>\r\n                                    <span\r\n                                        className={styles[\"total-amount_count\"]}\r\n                                    >\r\n                                        {item.amount}\r\n                                    </span>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </>\r\n                ) : (\r\n                    <div\r\n                        style={{\r\n                            width: \"100%\",\r\n                            height: \"50%\",\r\n                            display: \"flex\",\r\n                            justifyContent: \"center\",\r\n                            alignItems: \"center\",\r\n                        }}\r\n                    >\r\n                        Нет данных\r\n                    </div>\r\n                )}\r\n            </div>\r\n            <div className={styles[\"total-amount_juke\"]}>\r\n                <span className={styles[\"total-amount_juke_text\"]}>\r\n                    Приколдесное поле\r\n                </span>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TotalAmount;\r\n","import React from \"react\";\r\nimport editSVG from \"../../assets/icons/edit.svg\";\r\n\r\nimport {\r\n    TransactionsTable,\r\n    Widgets,\r\n    Summary,\r\n    Calendar,\r\n    TotalAmount,\r\n} from \"./components/\";\r\nimport useUser from \"./hooks/useUser\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport styles from \"./style.module.scss\";\r\n\r\nconst Home: React.FC = () => {\r\n    const { username, fetchInfo, loggedIn } = useUser();\r\n\r\n    React.useEffect(() => {\r\n        if (!username && loggedIn) {\r\n            fetchInfo();\r\n        }\r\n    }, [username, fetchInfo, loggedIn]);\r\n    return (\r\n        <div className={styles.home}>\r\n            {!loggedIn ? (\r\n                <Redirect to=\"/auth\" />\r\n            ) : (\r\n                <>\r\n                    <div className={styles[\"pockets-wrapper\"]}>\r\n                        <div className={styles.pockets}>\r\n                            <h2>Pockets</h2>\r\n                            <div className={styles.pockets_content}>\r\n                                <div className={styles.pockets_tables}>\r\n                                    <TransactionsTable />\r\n                                    <Summary />\r\n                                </div>\r\n                                <Widgets />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={styles.utils}>\r\n                        <div>\r\n                            <div className={styles.profile}>\r\n                                <div\r\n                                    className={\r\n                                        styles[\"profile_photo-container\"]\r\n                                    }\r\n                                >\r\n                                    <img\r\n                                        src=\"https://thispersondoesnotexist.com/image\"\r\n                                        className={styles.profile_photo}\r\n                                        alt=\"personal_photo\"\r\n                                    />\r\n                                    <div\r\n                                        className={\r\n                                            styles[\r\n                                                \"profile_photo_edit-container\"\r\n                                            ]\r\n                                        }\r\n                                    >\r\n                                        <img\r\n                                            src={editSVG}\r\n                                            className={\r\n                                                styles.profile_photo_edit\r\n                                            }\r\n                                            alt=\"personal_photo\"\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <h2>Привет, {username}</h2>\r\n                            </div>\r\n                            <div className={styles.utils_calendar}>\r\n                                <Calendar />\r\n                            </div>\r\n                        </div>\r\n                        <div className={styles[\"total-amount\"]}>\r\n                            <h3 className={styles[\"total-amount_title\"]}>\r\n                                Всего\r\n                            </h3>\r\n                            <TotalAmount />\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n"],"sourceRoot":""}