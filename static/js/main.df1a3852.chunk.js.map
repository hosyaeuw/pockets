{"version":3,"sources":["utils/Network.ts","redux/actions/notifications.ts","api.ts","pages/Auth/style.module.scss","utils/DateHelper.ts","redux/actions/categories.ts","components/Select/style.module.scss","notify/components/Notify/style.module.scss","components/ButtonText/index.js","components/ButtonText/ButtonText.tsx","components/Select/Select.tsx","components/Select/index.js","components/Button/index.js","components/Button/Button.tsx","components/ModalContainer/index.js","components/ModalContainer/ModalContainer.tsx","notify/components/Notify/index.js","notify/components/Notify/Notify.tsx","components/NotifyContainer/hooks/useNotify.ts","components/NotifyContainer/index.js","components/NotifyContainer/NotifyContainer.tsx","components/ActivityIndicator/index.js","components/ActivityIndicator/ActivityIndicator.tsx","redux/actions/user.ts","redux/actions/transactions.ts","redux/actions/widgets.ts","redux/actions/calendar.ts","components/fields/SelectField/style.module.scss","hooks/useTypedSelectors.ts","utils/validators/FormHelper.ts","utils/validators/RequireValidator.ts","components/fields/InputField/index.js","components/fields/InputField/InputField.tsx","components/fields/DateInputField/index.js","components/fields/DateInputField/DateField.tsx","components/fields/SelectField/SelectField.tsx","components/fields/SelectField/index.js","components/fields/ModalForm/index.js","components/fields/ModalForm/ModalForm.tsx","components/ModalContainer/style.module.scss","components/fields/InputField/style.module.scss","components/fields/ModalForm/style.module.scss","components/ButtonText/style.module.scss","components/ActivityIndicator/style.module.scss","pages/Home/hooks/useUser.ts","utils/validators/RangeValidator.ts","components/Button/style.module.scss","components/NotifyContainer/style.module.scss","components/fields/DateInputField/style.module.scss","style.module.scss","utils/validators/EmailValidator.ts","pages/Auth/Auth.tsx","redux/reducers/transactions.ts","redux/reducers/widgets.ts","redux/reducers/categories.ts","redux/reducers/notifications.ts","redux/reducers/calendar.ts","redux/reducers/user.ts","redux/reducers/index.ts","redux/store.ts","App.tsx","index.tsx"],"names":["fetch","axios","create","responseType","withCredentials","timeout","headers","Accept","interceptors","request","use","config","Authorization","reactLocalStorage","get","error","Promise","reject","response","a","originalRequest","status","post","api","user","url","refresh_token","then","data","setToken","access_token","Types","SET_ITEMS","NotificationsActions","addNotify","item","dispatch","getState","notifications","setNotifyAction","items","deleteNotify","id","splice","type","payload","transactions","global","categories","transactionsByCategories","widget","colors","auth","reg","getInfo","module","exports","DateHelper","month","Date","getDate","date","getDay","monthRuNames","monthEngNames","periodTypes","dayRuNames","name","abbreviation","dayEngNames","getPrevDate","selectedOption","setDate","setMonth","getMonth","setFullYear","getFullYear","getNextDate","SET_ITEMS_TRANSACTIONS","LOADING","ERROR","CategoriesActions","fetchCategories","_","setCategories","result","fetchTransactionsByCategories","calendar","nowDateStamp","prevDateStamp","params","start_date","end_date","setTransactionsByCategories","catch","batch","setLoading","text","addCategory","category_type","is_income","isLoading","ButtonText","children","onClick","className","styles","btn","btn_plus","SelectOptionBlock","options","onClose","optionsRef","React","useRef","onCloseHandler","useCallback","useEffect","document","body","addEventListener","removeEventListener","select_options","ref","map","select_option","Select","onChange","useState","setSelectedOption","openOptions","setOpenOptions","select","select_label","prev","cn","select_svg","open","width","height","viewBox","fill","xmlns","d","Button","button","ModalContainer","e","target","includes","escHandler","key","modal","modal_close","Notify","notify","notify__success","notify__warning","notify__error","notify_close","notify_text","useNotify","useDispatch","notificationItems","useTypedSelector","NotifyContainer","index","ActivityIndicator","indicator","SET_USERNAME","userActions","authAction","regAction","fetchInfoAction","setUsername","username","SET_GLOBAL_ITEMS","TransactionsActions","fetchTransactions","offset","limit","setTransactions","addTransaction","amount","category","transaction_date","transaction_timestamp","category_id","find","CategoryActions","fetchGlobalTransactions","updateTransaction","put","forEach","transaction","deleteTransaction","delete","filter","setGlobalTransactions","SET_COLORS","WidgetsActions","fetchWidgets","setWidgets","fetchWidgetColors","setWidgetColor","addWidgetAction","fields","period","value","color_id","color","expire_at","is_more","isMore","deleteWidgetAction","widgets","SET_DAY","SET_MONTH","SET_YEAR","SET_SELECTED_OPTION","setCalendarDayAction","day","setCalendarMonthAction","setCalendarYearAction","setSelectedOptionAction","option","useSelector","FormHelper","validators","allValues","meta","undefined","validator","validate","Require","msg","this","val","trim","visited","InputField","placeholder","fieldProps","label","input_label","input","DateField","inputRef","onFocus","current","onBlur","Options","select_options_item","SelectField","showOptions","setShowOptions","closeHandler","select_value","length","ModalForm","title","buttonText","onSubmit","render","handleSubmit","errors","form_title","Object","keys","form_errors","form_btn","useUser","loggedIn","setLoggedIn","fetchInfo","Range","max","min","count","Email","template","match","token","set","Auth","isReg","history","useHistory","push","authHandler","regHandler","auth_title","clear","auth_subtitle","auth_description","auth_form","auth_form_errors","values","auth_form_errors_item","auth_field","props","auth_bottom","to","initState","globalItems","isLoaded","reducer","state","action","produce","draft","itemsTransactions","nowDate","getDateWithoutTime","selectedDay","selectedMonth","selectedYear","rootReducer","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middleware","think","withExtraArgument","store","createStore","applyMiddleware","Home","lazy","App","container","path","Suspense","fallback","exact","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.df1a3852.chunk.js","sourcesContent":["import axios, { AxiosError } from \"axios\";\r\nimport { reactLocalStorage } from \"reactjs-localstorage\";\r\nimport api from \"../api\";\r\nimport { setToken } from \"../pages/Auth/Auth\";\r\n\r\nexport const fetch = axios.create({\r\n    responseType: \"json\",\r\n    withCredentials: true,\r\n    timeout: 30000,\r\n    headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Acess-Control-Allow-Origin\": \"*\",\r\n        Accept: \"application/json\",\r\n    },\r\n});\r\n\r\nfetch.interceptors.request.use(\r\n    (config) => {\r\n        config.headers = {\r\n            ...config.headers,\r\n            Authorization: `Bearer ${reactLocalStorage.get(\"token\")}`,\r\n        };\r\n        return config;\r\n    },\r\n    (error) => {\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\nfetch.interceptors.response.use(\r\n    (config) => {\r\n        return config;\r\n    },\r\n    async (error: AxiosError) => {\r\n        const originalRequest = error.config;\r\n        if (error.response?.status === 401 && originalRequest.headers) {\r\n            await axios\r\n                .post(\r\n                    `${api.user.url}${api.user.refresh_token}`,\r\n                    {},\r\n                    {\r\n                        headers: {\r\n                            Authorization: `Bearer ${reactLocalStorage.get(\r\n                                \"refresh_token\"\r\n                            )}`,\r\n                        },\r\n                    }\r\n                )\r\n                .then(({ data }) => {\r\n                    setToken(data.access_token, data.refresh_token);\r\n                });\r\n            return fetch.request(originalRequest);\r\n        }\r\n    }\r\n);\r\n","import { TAction } from \"../store\";\r\n\r\nexport const Types = {\r\n    SET_ITEMS: \"NOTIFY@SET:ITEM\",\r\n};\r\n\r\nexport type NotifyType = {\r\n    type: \"success\" | \"warning\" | \"error\";\r\n    text: string;\r\n};\r\n\r\ntype TNotifyAction = {\r\n    type: typeof Types.SET_ITEMS;\r\n    payload: NotifyType[];\r\n};\r\n\r\ntype NotifyActionsType = {\r\n    addNotify: (item: NotifyType) => TAction<Promise<void>>;\r\n    deleteNotify: (id: number) => TAction<Promise<void>>;\r\n    setNotifyAction: (items: NotifyType[]) => TNotifyAction;\r\n};\r\n\r\nexport const NotificationsActions: NotifyActionsType = {\r\n    addNotify(item) {\r\n        return async (dispatch, getState) => {\r\n            const { notifications } = getState();\r\n            dispatch(this.setNotifyAction([...notifications.items, item]));\r\n        };\r\n    },\r\n    deleteNotify(id) {\r\n        return async (dispatch, getState) => {\r\n            const { notifications } = getState();\r\n            const items = [...notifications.items];\r\n            items.splice(id, 1);\r\n            dispatch(this.setNotifyAction(items));\r\n        };\r\n    },\r\n    setNotifyAction(items) {\r\n        return {\r\n            type: Types.SET_ITEMS,\r\n            payload: items,\r\n        };\r\n    },\r\n};\r\n","const api = {\r\n    transactions: {\r\n        url: \"/api/transactions/\",\r\n        global: \"/api/transactions/global/\",\r\n    },\r\n    categories: {\r\n        url: \"/api/categories/\",\r\n        transactionsByCategories: \"/api/categories/transactions_by_categories/\",\r\n    },\r\n    widget: {\r\n        url: \"/api/widgets/\",\r\n        colors: \"colors/\",\r\n    },\r\n    user: {\r\n        url: \"/user/\",\r\n        auth: \"auth\",\r\n        reg: \"reg\",\r\n        getInfo: \"info\",\r\n        refresh_token: 'refresh'\r\n    },\r\n};\r\n\r\nexport default api;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"auth\":\"style_auth__zxVX_\",\"auth_title\":\"style_auth_title__1R8OT\",\"auth_subtitle\":\"style_auth_subtitle__1Pu4t\",\"auth_description\":\"style_auth_description__3N9Cv\",\"auth_field\":\"style_auth_field__3KZ0g\",\"auth_form\":\"style_auth_form__28LgK\",\"auth_form_errors\":\"style_auth_form_errors__1_lJH\",\"auth_bottom\":\"style_auth_bottom__2nxIY\"};","export default class DateHelper {\r\n    static monthRuNames = [\r\n        \"Январь\",\r\n        \"Февраль\",\r\n        \"Март\",\r\n        \"Апрель\",\r\n        \"Май\",\r\n        \"Июнь\",\r\n        \"Июль\",\r\n        \"Август\",\r\n        \"Сентябрь\",\r\n        \"Октябрь\",\r\n        \"Ноябрь\",\r\n        \"Декабрь\",\r\n    ];\r\n\r\n    static monthEngNames = [\r\n        \"January\",\r\n        \"February\",\r\n        \"March\",\r\n        \"April\",\r\n        \"May\",\r\n        \"June\",\r\n        \"July\",\r\n        \"August\",\r\n        \"September\",\r\n        \"October\",\r\n        \"November\",\r\n        \"December\",\r\n    ];\r\n\r\n    static periodTypes = [\"День\", \"Неделя\", \"Месяц\", \"Год\"];\r\n\r\n    static dayRuNames = [\r\n        {\r\n            name: \"Понедельник\",\r\n            abbreviation: \"Пн\",\r\n        },\r\n        {\r\n            name: \"Вторник\",\r\n            abbreviation: \"Вт\",\r\n        },\r\n        {\r\n            name: \"Среда\",\r\n            abbreviation: \"Ср\",\r\n        },\r\n        {\r\n            name: \"Четверг\",\r\n            abbreviation: \"Чт\",\r\n        },\r\n        {\r\n            name: \"Пятница\",\r\n            abbreviation: \"Пт\",\r\n        },\r\n        {\r\n            name: \"Суббота\",\r\n            abbreviation: \"Сб\",\r\n        },\r\n        {\r\n            name: \"Воскресенье\",\r\n            abbreviation: \"Вс\",\r\n        },\r\n    ];\r\n\r\n    static dayEngNames = [\r\n        {\r\n            name: \"Monday\",\r\n            abbreviation: \"Mon\",\r\n        },\r\n        {\r\n            name: \"Tuesday\",\r\n            abbreviation: \"Tue\",\r\n        },\r\n        {\r\n            name: \"Wednesday\",\r\n            abbreviation: \"Wed\",\r\n        },\r\n        {\r\n            name: \"Thursday\",\r\n            abbreviation: \"Thu\",\r\n        },\r\n        {\r\n            name: \"Friday\",\r\n            abbreviation: \"Fri\",\r\n        },\r\n        {\r\n            name: \"Saturday\",\r\n            abbreviation: \"Sat\",\r\n        },\r\n        {\r\n            name: \"Sunday\",\r\n            abbreviation: \"Sun\",\r\n        },\r\n    ];\r\n    static getCountDaysInMonth(month: number) {\r\n        return 32 - new Date(2021, month - 1, 32).getDate();\r\n    }\r\n\r\n    static getDayOnWeek(date: Date) {\r\n        return date.getDay();\r\n    }\r\n\r\n    static getPrevDate = (date: Date, selectedOption: string) => {\r\n        switch (selectedOption) {\r\n            case \"День\":\r\n                return date.setDate(date.getDate() - 1);\r\n            case \"Неделя\":\r\n                return date.setDate(date.getDate() - 7);\r\n            case \"Месяц\":\r\n                return date.setMonth(date.getMonth() - 1);\r\n            case \"Год\":\r\n            default:\r\n                return date.setFullYear(date.getFullYear() - 1);\r\n        }\r\n    };\r\n    static getNextDate = (date: Date, selectedOption: string) => {\r\n        switch (selectedOption) {\r\n            case \"День\":\r\n                return date.setDate(date.getDate() + 1);\r\n            case \"Неделя\":\r\n                return date.setDate(date.getDate() + 7);\r\n            case \"Месяц\":\r\n                return date.setMonth(date.getMonth() + 1);\r\n            case \"Год\":\r\n            default:\r\n                return date.setFullYear(date.getFullYear() + 1);\r\n        }\r\n    };\r\n}\r\n","import { batch } from \"react-redux\";\r\nimport { CategoryFormValues } from \"../../pages/Home/hooks/useCategories\";\r\nimport { fetch } from \"../../utils/Network\";\r\nimport { TAction } from \"../store\";\r\nimport { NotificationsActions } from \"./notifications\";\r\n\r\nexport const Types = {\r\n    SET_ITEMS: \"CATEGORIES@SET:ITEMS\",\r\n    SET_ITEMS_TRANSACTIONS: \"CATEGORIES@SET:ITEMS_TRANSACTIONS\",\r\n    LOADING: \"CATEGORIES@LOADING\",\r\n    ERROR: \"CATEGORIES@LOADING:ERROR\",\r\n};\r\n\r\nexport type TCategory = {\r\n    id: number;\r\n    name: string;\r\n    is_income: boolean;\r\n};\r\n\r\nexport interface ITransactionsByCategory extends TCategory {\r\n    transactions_sum: number;\r\n}\r\n\r\ntype TCategoryAction = {\r\n    type: typeof Types.SET_ITEMS;\r\n    payload: TCategory[];\r\n};\r\n\r\ntype TTransactionsByCategoryAction = {\r\n    type: typeof Types.SET_ITEMS_TRANSACTIONS;\r\n    payload: ITransactionsByCategory[];\r\n};\r\n\r\ntype TLoadingAction = {\r\n    type: typeof Types.LOADING;\r\n    payload: boolean;\r\n};\r\n\r\nexport type CategoryActions =\r\n    | TCategoryAction\r\n    | TTransactionsByCategoryAction\r\n    | TLoadingAction;\r\n\r\ntype CategoryActionsType = {\r\n    fetchCategories: () => TAction<Promise<void>>;\r\n    fetchTransactionsByCategories: () => TAction<Promise<void>>;\r\n    addCategory: (data: CategoryFormValues) => TAction<Promise<void>>;\r\n    setTransactionsByCategories: (\r\n        items: ITransactionsByCategory[]\r\n    ) => TTransactionsByCategoryAction;\r\n    setCategories: (items: TCategory[]) => TCategoryAction;\r\n    setLoading: (isLoading: boolean) => TLoadingAction;\r\n};\r\n\r\nconst CategoriesActions: CategoryActionsType = {\r\n    fetchCategories() {\r\n        return async (dispatch, _, { api }) => {\r\n            fetch\r\n                .get(api.categories.url)\r\n                .then(({ data }) => dispatch(this.setCategories(data.result)));\r\n        };\r\n    },\r\n    fetchTransactionsByCategories() {\r\n        return async (dispatch, getState, { api }) => {\r\n            const { nowDateStamp, prevDateStamp } = getState().calendar;\r\n            fetch\r\n                .get(api.categories.transactionsByCategories, {\r\n                    params: {\r\n                        start_date: prevDateStamp,\r\n                        end_date: nowDateStamp,\r\n                    },\r\n                })\r\n                .then(({ data }) => {\r\n                    dispatch(this.setTransactionsByCategories(data.result));\r\n                })\r\n                .catch((error) => {\r\n                    batch(() => {\r\n                        dispatch(this.setLoading(true));\r\n                        dispatch(\r\n                            NotificationsActions.addNotify({\r\n                                type: \"error\",\r\n                                text: \"Не удалось загрузить категории\",\r\n                            })\r\n                        );\r\n                    });\r\n                });\r\n        };\r\n    },\r\n    addCategory({ name, category_type }) {\r\n        return async (dispatch, _, { api }) => {\r\n            fetch\r\n                .post(api.categories.url, {\r\n                    name,\r\n                    is_income: category_type,\r\n                })\r\n                .then(() => dispatch(this.fetchCategories()))\r\n                .catch((error) => {\r\n                    dispatch(\r\n                        NotificationsActions.addNotify({\r\n                            type: \"error\",\r\n                            text: \"Не удалось добавить категорию\",\r\n                        })\r\n                    );\r\n                });\r\n        };\r\n    },\r\n    setTransactionsByCategories(items) {\r\n        return {\r\n            type: Types.SET_ITEMS_TRANSACTIONS,\r\n            payload: items,\r\n        };\r\n    },\r\n    setCategories(items) {\r\n        return {\r\n            type: Types.SET_ITEMS,\r\n            payload: items,\r\n        };\r\n    },\r\n    setLoading(isLoading) {\r\n        return {\r\n            type: Types.LOADING,\r\n            payload: isLoading,\r\n        };\r\n    },\r\n};\r\n\r\nexport default CategoriesActions;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"style_select__24nQI\",\"select_svg\":\"style_select_svg__3aISt\",\"open\":\"style_open__13ohM\",\"select_option\":\"style_select_option__37Kih\",\"select_label\":\"style_select_label__1h4WW\",\"select_options\":\"style_select_options__fGj3a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notify\":\"style_notify__3qZwk\",\"notify_close\":\"style_notify_close__3froJ\",\"notify_text\":\"style_notify_text__3TYFB\",\"notify__success\":\"style_notify__success__3nEf5\",\"notify__warning\":\"style_notify__warning__2p9ox\",\"notify__error\":\"style_notify__error__11lAZ\"};","import ButtonText from './ButtonText';\r\n\r\nexport default ButtonText;","import React from \"react\";\r\n\r\nimport styles from \"./style.module.scss\";\r\n\r\nexport type Props = {\r\n    onClick: () => void;\r\n};\r\n\r\nconst ButtonText: React.FC<Props> = ({ children, onClick }) => {\r\n    return (\r\n        <button className={styles.btn} onClick={onClick}>\r\n            <span className={styles.btn_plus}>+</span>\r\n            {children}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default ButtonText;\r\n","import React from \"react\";\r\nimport cn from \"classnames\";\r\n\r\nimport styles from \"./style.module.scss\";\r\n\r\ntype SelectProps = {\r\n    options: string[];\r\n    onChange?: (data: any) => void;\r\n};\r\n\r\ninterface OptionProps extends SelectProps {\r\n    onClick: (item: string) => void;\r\n    onClose: () => void;\r\n}\r\n\r\nconst SelectOptionBlock: React.FC<OptionProps> = ({\r\n    options,\r\n    onClick,\r\n    onClose,\r\n}) => {\r\n    const optionsRef = React.useRef(null);\r\n\r\n    const onCloseHandler = React.useCallback(() => {\r\n        onClose();\r\n    }, [onClose]);\r\n\r\n    React.useEffect(() => {\r\n        document.body.addEventListener(\"click\", onCloseHandler);\r\n\r\n        return () => document.body.removeEventListener(\"click\", onCloseHandler);\r\n    }, [onCloseHandler]);\r\n\r\n    return (\r\n        <div className={styles.select_options} ref={optionsRef}>\r\n            {options.map((item) => (\r\n                <div\r\n                    key={item}\r\n                    onClick={() => onClick(item)}\r\n                    className={styles.select_option}\r\n                >\r\n                    {item}\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst Select: React.FC<SelectProps> = ({ options, onChange }) => {\r\n    const [selectedOption, setSelectedOption] = React.useState(options[2]);\r\n    const [openOptions, setOpenOptions] = React.useState(false);\r\n\r\n    const openHandler = () => {\r\n        setOpenOptions((prev) => !prev);\r\n    };\r\n\r\n    const optionClickHander = (item: string) => {\r\n        setSelectedOption(item);\r\n        onChange && onChange(item)\r\n    };\r\n\r\n    const onCloseHandler = () => {\r\n        setOpenOptions(false);\r\n    };\r\n    return (\r\n        <div className={styles.select}>\r\n            <div className={styles.select_label} onClick={openHandler}>\r\n                <span>{selectedOption}</span>\r\n                <span\r\n                    className={cn(styles.select_svg, {\r\n                        [styles.open]: openOptions,\r\n                    })}\r\n                >\r\n                    <svg\r\n                        width=\"14\"\r\n                        height=\"8\"\r\n                        viewBox=\"0 0 14 8\"\r\n                        fill=\"none\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                    >\r\n                        <path\r\n                            d=\"M13.7 1.7L7.7 7.7C7.5 7.9 7.3 8 7 8C6.7 8 6.5 7.9 6.3 7.7L0.3 1.7C-0.1 1.3 -0.1 0.7 0.3 0.3C0.7 -0.1 1.3 -0.1 1.7 0.3L7 5.6L12.3 0.3C12.7 -0.1 13.3 -0.1 13.7 0.3C14.1 0.7 14.1 1.3 13.7 1.7Z\"\r\n                            fill=\"#5D5FEF\"\r\n                        />\r\n                    </svg>\r\n                </span>\r\n            </div>\r\n            {openOptions && (\r\n                <SelectOptionBlock\r\n                    options={options}\r\n                    onClick={optionClickHander}\r\n                    onClose={onCloseHandler}\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Select;\r\n","import Select from './Select';\r\n\r\nexport default Select;","import Button from './Button';\r\n\r\nexport default Button;","import React from \"react\";\r\nimport cn from \"classnames\";\r\n\r\nimport styles from \"./style.module.scss\";\r\n\r\ntype Props = {\r\n    className?: StyleSheet;\r\n};\r\n\r\nconst Button: React.FC<Props> = ({ children, className }) => {\r\n    return <button className={cn(styles.button, className)}>{children}</button>;\r\n};\r\n\r\nexport default Button;\r\n","import ModalContainer from './ModalContainer';\r\n\r\nexport default ModalContainer;","import React from \"react\";\r\n\r\nimport styles from \"./style.module.scss\";\r\n\r\ntype ModalProps = {\r\n    onClose: () => void;\r\n};\r\n\r\nconst ModalContainer: React.FC<ModalProps> = ({ children, onClose }) => {\r\n    const closeHandle = () => {\r\n        onClose();\r\n    };\r\n\r\n    const onCloseHandler = React.useCallback(\r\n        (e) => {\r\n            if (\r\n                typeof e.target.className === \"string\" &&\r\n                e.target.className.includes(\"modal-wrapper\")\r\n            ) {\r\n                onClose();\r\n            }\r\n        },\r\n        [onClose]\r\n    );\r\n\r\n    const escHandler = React.useCallback(\r\n        (e: KeyboardEvent) => {\r\n            if (e.key === \"Escape\") {\r\n                onClose();\r\n            }\r\n        },\r\n        [onClose]\r\n    );\r\n\r\n    React.useEffect(() => {\r\n        document.addEventListener(\"keydown\", escHandler);\r\n\r\n        return () => document.removeEventListener(\"keydown\", escHandler);\r\n    }, [escHandler]);\r\n    return (\r\n        <div className={styles[\"modal-wrapper\"]} onClick={onCloseHandler}>\r\n            <div className={styles.modal}>\r\n                <button className={styles.modal_close} onClick={closeHandle}>\r\n                    &times;\r\n                </button>\r\n                {children}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ModalContainer;\r\n","import Notify from \"./Notify\";\r\n\r\nexport default Notify;","import React from \"react\";\r\n\r\nimport styles from \"./style.module.scss\";\r\nimport cn from \"classnames\";\r\nimport { NotifyType } from \"../../../redux/actions/notifications\";\r\n\r\ntype Props = NotifyType & {\r\n    onClose: () => void;\r\n};\r\n\r\nconst Notify: React.FC<Props> = ({ type, text, onClose }) => {\r\n    return (\r\n        <div\r\n            className={cn(styles.notify, {\r\n                [styles.notify__success]: type === \"success\",\r\n                [styles.notify__warning]: type === \"warning\",\r\n                [styles.notify__error]: type === \"error\",\r\n            })}\r\n        >\r\n            <span className={styles.notify_close} onClick={onClose}>\r\n                &times;\r\n            </span>\r\n            <p className={styles.notify_text}>{text}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Notify;\r\n","import { useDispatch } from \"react-redux\";\r\nimport { useTypedSelector } from \"../../../hooks/useTypedSelectors\";\r\nimport {\r\n    NotificationsActions,\r\n    NotifyType,\r\n} from \"../../../redux/actions/notifications\";\r\n\r\nconst useNotify = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const notificationItems = useTypedSelector(\r\n        ({ notifications }) => notifications.items\r\n    );\r\n\r\n    const addNotify = (item: NotifyType) => {\r\n        dispatch(NotificationsActions.addNotify(item));\r\n    };\r\n\r\n    const deleteNotify = (id: number) => {\r\n        dispatch(NotificationsActions.deleteNotify(id));\r\n    };\r\n\r\n    return {\r\n        notificationItems,\r\n        deleteNotify,\r\n        addNotify,\r\n    };\r\n};\r\n\r\nexport default useNotify;\r\n","import NotifyContainer from './NotifyContainer';\r\n\r\nexport default NotifyContainer;","import React from \"react\";\r\nimport { Notify } from \"../../notify/components\";\r\nimport useNotify from \"./hooks/useNotify\";\r\nimport { map } from \"lodash\";\r\n\r\nimport styles from \"./style.module.scss\";\r\n\r\nconst NotifyContainer: React.FC = () => {\r\n    const { notificationItems, deleteNotify } = useNotify();\r\n    const onClose = (id: number) => {\r\n        deleteNotify(id);\r\n    };\r\n\r\n    return (\r\n        <div className={styles[\"notify-container\"]}>\r\n            {map(notificationItems, (item, index: number) => (\r\n                <Notify\r\n                    key={`${item.text}_${index}`}\r\n                    type={item.type}\r\n                    text={item.text}\r\n                    onClose={() => onClose(index)}\r\n                />\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NotifyContainer;\r\n","import ActivityIndicator from './ActivityIndicator';\r\n\r\nexport default ActivityIndicator;","import React from \"react\";\r\nimport styles from \"./style.module.scss\";\r\n\r\nconst ActivityIndicator: React.FC = () => {\r\n    return (\r\n        <div className={styles['indicator-container']}>\r\n            <span className={styles.indicator}></span>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ActivityIndicator;\r\n","import axios from \"axios\";\r\n\r\nimport api from \"../../api\";\r\nimport { AuthFormValues } from \"../../pages/Home/hooks/useUser\";\r\nimport { fetch } from \"../../utils/Network\";\r\nimport { TAction } from \"../store\";\r\n\r\nexport const Types = {\r\n    SET_USERNAME: \"USER@SET:USERNAME\",\r\n};\r\n\r\ntype TUsernameAction = {\r\n    type: typeof Types.SET_USERNAME;\r\n};\r\n\r\ntype TransactionsActionsType = {\r\n    authAction: (data: AuthFormValues) => Promise<any>;\r\n    regAction: (data: AuthFormValues) => Promise<any>;\r\n    fetchInfoAction: () => TAction<Promise<void>>;\r\n    setUsername: (username: string) => TUsernameAction;\r\n};\r\n\r\nexport const userActions: TransactionsActionsType = {\r\n    authAction(data) {\r\n        return axios.post(`${api.user.url}${api.user.auth}`, data);\r\n    },\r\n    regAction(data) {\r\n        return axios.post(`${api.user.url}${api.user.reg}`, data);\r\n    },\r\n    fetchInfoAction() {\r\n        return async (dispatch) => {\r\n            fetch.get(`${api.user.url}${api.user.getInfo}`).then(({ data }) => {\r\n                dispatch(this.setUsername(data.username));\r\n            });\r\n        };\r\n    },\r\n    setUsername(username) {\r\n        return {\r\n            type: Types.SET_USERNAME,\r\n            payload: username,\r\n        };\r\n    },\r\n};\r\n","import { batch } from \"react-redux\";\r\nimport CategoryActions from \"./categories\";\r\nimport { TCategory } from \"./categories\";\r\nimport { fetch } from \"../../utils/Network\";\r\nimport { NotificationsActions } from \"./notifications\";\r\nimport { TAction } from \"../store\";\r\nimport { TransactionFormValues } from \"../../pages/Home/hooks/useTransactions\";\r\n\r\nexport const Types = {\r\n    SET_ITEMS: \"TRANSACTIONS@SET:ITEMS\",\r\n    SET_GLOBAL_ITEMS: \"TRANSACTIONS@SET:GLOBAL_ITEMS\",\r\n    LOADING: \"TRANSACTIONS@LOADING:START\",\r\n    ERROR: \"TRANSACTIONS@LOADING:ERROR\",\r\n};\r\n\r\nexport type TTransaction = {\r\n    count: number;\r\n    next: string;\r\n    previous: string;\r\n    result: TTransactionItem[];\r\n};\r\n\r\nexport type TTransactionItem = {\r\n    id: number;\r\n    category: TCategory;\r\n    transaction_date: number;\r\n    amount: number;\r\n};\r\n\r\nexport type TGlobalTransactionItem = {\r\n    name: string;\r\n    amount: number;\r\n};\r\n\r\ntype TTransactionItemAction = {\r\n    type: typeof Types.SET_ITEMS;\r\n    payload: TTransactionItem[];\r\n};\r\n\r\ntype TGlobalTransactionItemAction = {\r\n    type: typeof Types.SET_GLOBAL_ITEMS;\r\n    payload: TGlobalTransactionItem[];\r\n};\r\n\r\ntype TLoadingAction = {\r\n    type: typeof Types.LOADING;\r\n    payload: boolean;\r\n};\r\n\r\nexport type TransactionActions =\r\n    | TTransactionItemAction\r\n    | TGlobalTransactionItemAction\r\n    | TLoadingAction;\r\n\r\ntype TransactionsActionsType = {\r\n    fetchTransactions: (\r\n        offset?: number,\r\n        limit?: number\r\n    ) => TAction<Promise<void>>;\r\n    fetchGlobalTransactions: () => TAction<Promise<void>>;\r\n    addTransaction: (data: TransactionFormValues) => TAction<Promise<void>>;\r\n    updateTransaction: (data: TransactionFormValues) => TAction<Promise<void>>;\r\n    deleteTransaction: (id: number) => TAction<Promise<void>>;\r\n    setTransactions: (items: TTransactionItem[]) => TTransactionItemAction;\r\n    setGlobalTransactions: (\r\n        items: TGlobalTransactionItem[]\r\n    ) => TGlobalTransactionItemAction;\r\n    setLoading: (isLoading: boolean) => TLoadingAction;\r\n};\r\n\r\nexport const TransactionsActions: TransactionsActionsType = {\r\n    fetchTransactions(offset = 1, limit = 20) {\r\n        return async (dispatch, getState, { api }) => {\r\n            const { nowDateStamp, prevDateStamp } = getState().calendar;\r\n            fetch\r\n                .get<TTransaction>(api.transactions.url, {\r\n                    params: {\r\n                        start_date: prevDateStamp,\r\n                        end_date: nowDateStamp,\r\n                        offset,\r\n                        limit,\r\n                    },\r\n                })\r\n                .then(({ data }) => {\r\n                    dispatch(this.setTransactions(data.result));\r\n                })\r\n                .catch((error) => {\r\n                    batch(() => {\r\n                        dispatch(this.setLoading(true));\r\n                        dispatch(\r\n                            NotificationsActions.addNotify({\r\n                                type: \"error\",\r\n                                text: \"Не удалось загрузить транзакции\",\r\n                            })\r\n                        );\r\n                    });\r\n                });\r\n        };\r\n    },\r\n    addTransaction({ amount, date, category }) {\r\n        return async (dispatch, getState, { api }) => {\r\n            const transaction_date = new Date(date);\r\n            const transaction_timestamp = +transaction_date;\r\n            const { transactions, categories } = getState();\r\n\r\n            fetch\r\n                .post(api.transactions.url, {\r\n                    amount,\r\n                    transaction_date: transaction_timestamp,\r\n                    category_id: category.id,\r\n                })\r\n                .then(({ data }) => {\r\n                    batch(() => {\r\n                        dispatch(\r\n                            this.setTransactions([\r\n                                {\r\n                                    id: data.id,\r\n                                    transaction_date:\r\n                                        transaction_timestamp / 1000,\r\n                                    category:\r\n                                        categories.items.find(\r\n                                            (item: TCategory) =>\r\n                                                category.id === item.id\r\n                                        ) || categories.items[0],\r\n                                    amount,\r\n                                },\r\n                                ...transactions.items,\r\n                            ])\r\n                        );\r\n                        dispatch(\r\n                            CategoryActions.fetchTransactionsByCategories()\r\n                        );\r\n                        dispatch(this.fetchGlobalTransactions());\r\n                    });\r\n                })\r\n                .catch((error) => {\r\n                    dispatch(\r\n                        NotificationsActions.addNotify({\r\n                            type: \"error\",\r\n                            text: \"Не удалось добавить транзакцию\",\r\n                        })\r\n                    );\r\n                });\r\n        };\r\n    },\r\n    updateTransaction({ id, amount, date, category }) {\r\n        return async (dispatch, getState, { api }) => {\r\n            const transaction_date = new Date(date);\r\n            const { transactions } = getState();\r\n            fetch\r\n                .put(`${api.transactions.url}${id}/`, {\r\n                    amount,\r\n                    transaction_date: +transaction_date,\r\n                    category_id: category.id,\r\n                })\r\n                .then(({ data }) => {\r\n                    const items = [...transactions.items];\r\n                    transactions.items.forEach(\r\n                        (transaction: TTransactionItem, index: number) => {\r\n                            if (transaction.id === id) {\r\n                                items[index] = data.result;\r\n                            }\r\n                        }\r\n                    );\r\n                    batch(() => {\r\n                        dispatch(this.setTransactions(items));\r\n                        dispatch(\r\n                            CategoryActions.fetchTransactionsByCategories()\r\n                        );\r\n                        dispatch(this.fetchGlobalTransactions());\r\n                    });\r\n                });\r\n        };\r\n    },\r\n    deleteTransaction(id) {\r\n        return async (dispatch, getState, { api }) => {\r\n            const { transactions } = getState();\r\n            fetch\r\n                .delete(`${api.transactions.url}${id}/`)\r\n                .then(() => {\r\n                    batch(() => {\r\n                        dispatch(\r\n                            this.setTransactions(\r\n                                transactions.items.filter(\r\n                                    (item) => item.id !== id\r\n                                )\r\n                            )\r\n                        );\r\n                        dispatch(\r\n                            CategoryActions.fetchTransactionsByCategories()\r\n                        );\r\n                        dispatch(this.fetchGlobalTransactions());\r\n                    });\r\n                })\r\n                .catch((error) => {\r\n                    dispatch(\r\n                        NotificationsActions.addNotify({\r\n                            type: \"error\",\r\n                            text: \"Не удалось удалить транзакцию\",\r\n                        })\r\n                    );\r\n                });\r\n        };\r\n    },\r\n    fetchGlobalTransactions() {\r\n        return async (dispatch, getState, { api }) => {\r\n            const { nowDateStamp, prevDateStamp } = getState().calendar;\r\n            fetch\r\n                .get(api.transactions.global, {\r\n                    params: {\r\n                        start_date: prevDateStamp,\r\n                        end_date: nowDateStamp,\r\n                    },\r\n                })\r\n                .then(({ data }) => {\r\n                    dispatch(this.setGlobalTransactions(data.result));\r\n                });\r\n        };\r\n    },\r\n    setTransactions(items: TTransactionItem[]) {\r\n        return {\r\n            type: Types.SET_ITEMS,\r\n            payload: items,\r\n        };\r\n    },\r\n    setGlobalTransactions(items: TGlobalTransactionItem[]) {\r\n        return {\r\n            type: Types.SET_GLOBAL_ITEMS,\r\n            payload: items,\r\n        };\r\n    },\r\n    setLoading(isLoading: boolean) {\r\n        return {\r\n            type: Types.LOADING,\r\n            payload: isLoading,\r\n        };\r\n    },\r\n};\r\n","import axios from \"axios\";\r\nimport { TCategory } from \"./categories\";\r\nimport { fetch } from \"../../utils/Network\";\r\nimport { TAction } from \"../store\";\r\nimport { WidgetFormValues } from \"../../pages/Home/hooks/useWidgets\";\r\nimport DateHelper from \"../../utils/DateHelper\";\r\n\r\nexport const Types = {\r\n    SET_ITEMS: \"WIDGETS@SET:ITEMS\",\r\n    SET_COLORS: \"WIDGETS@SET:COLORS\",\r\n    LOADING: \"WIDGETS@LOADING:START\",\r\n    ERROR: \"WIDGETS@LOADING:ERROR\",\r\n};\r\n\r\nexport type TWidgetColor = {\r\n    id: number;\r\n    value: string;\r\n};\r\n\r\nexport type TWidgetItem = {\r\n    id: number;\r\n    category: TCategory;\r\n    limit: number;\r\n    is_more: boolean;\r\n    color: string;\r\n    transactions_sum: number;\r\n    created_at: Date;\r\n    expire_at: Date;\r\n    period: \"День\" | \"Неделя\" | \"Месяц\" | \"Год\";\r\n};\r\n\r\ntype TWidgetAction = {\r\n    type: typeof Types.SET_ITEMS;\r\n    payload: TWidgetItem[];\r\n};\r\n\r\ntype TColorAction = {\r\n    type: typeof Types.SET_COLORS;\r\n    payload: TWidgetColor[];\r\n};\r\n\r\ntype WidgetsActionsType = {\r\n    fetchWidgets: () => TAction<Promise<void>>;\r\n    fetchWidgetColors: () => TAction<Promise<void>>;\r\n    addWidgetAction: (data: WidgetFormValues) => TAction<Promise<void>>;\r\n    deleteWidgetAction: (id: number) => TAction<Promise<void>>;\r\n    setWidgets: (items: TWidgetItem[]) => TWidgetAction;\r\n    setWidgetColor: (items: TWidgetColor[]) => TColorAction;\r\n};\r\n\r\nexport const WidgetsActions: WidgetsActionsType = {\r\n    fetchWidgets() {\r\n        return async (dispatch, getState, { api }) => {\r\n            const { nowDateStamp } = getState().calendar;\r\n            fetch\r\n                .get(api.widget.url, {\r\n                    params: {\r\n                        date: nowDateStamp,\r\n                    },\r\n                })\r\n                .then(({ data }) => dispatch(this.setWidgets(data.result)));\r\n        };\r\n    },\r\n    fetchWidgetColors() {\r\n        return async (dispatch, _, { api }) => {\r\n            const url = `${api.widget.url}${api.widget.colors}`;\r\n            axios\r\n                .get(url)\r\n                .then(({ data }) => dispatch(this.setWidgetColor(data.result)));\r\n        };\r\n    },\r\n    addWidgetAction(data) {\r\n        return async (dispatch, _, { api }) => {\r\n            const fields = {\r\n                category_id: data.category.id,\r\n                limit: data.limit,\r\n                period: data.period.value,\r\n                color_id: data.color.id,\r\n                expire_at: DateHelper.getNextDate(\r\n                    new Date(),\r\n                    data.period.value\r\n                ),\r\n                is_more: data.isMore,\r\n            };\r\n\r\n            fetch\r\n                .post(api.widget.url, fields)\r\n                .then(() => dispatch(this.fetchWidgets()));\r\n        };\r\n    },\r\n    deleteWidgetAction(id) {\r\n        return async (dispatch, getState, { api }) => {\r\n            const { widgets } = getState();\r\n            fetch.delete(`${api.widget.url}/${id}/`).then(() => {\r\n                dispatch(\r\n                    this.setWidgets(\r\n                        widgets.items.filter(\r\n                            (item: TWidgetItem) => item.id !== id\r\n                        )\r\n                    )\r\n                );\r\n            });\r\n        };\r\n    },\r\n    setWidgets(items) {\r\n        return {\r\n            type: Types.SET_ITEMS,\r\n            payload: items,\r\n        };\r\n    },\r\n    setWidgetColor(items) {\r\n        return {\r\n            type: Types.SET_COLORS,\r\n            payload: items,\r\n        };\r\n    },\r\n};\r\n","export const Types = {\r\n    SET_DAY: \"CALENDAR@SET:DAY\",\r\n    SET_MONTH: \"CALENDAR@SET:MONTH\",\r\n    SET_YEAR: \"CALENDAR@SET:YEAR\",\r\n    SET_SELECTED_OPTION: \"CALENDAR@SET:SELECTED_OPTION\",\r\n};\r\n\r\nexport const setCalendarDayAction = (day: number) => ({\r\n    type: Types.SET_DAY,\r\n    payload: day,\r\n});\r\n\r\nexport const setCalendarMonthAction = (day: number) => ({\r\n    type: Types.SET_MONTH,\r\n    payload: day,\r\n});\r\n\r\nexport const setCalendarYearAction = (day: number) => ({\r\n    type: Types.SET_YEAR,\r\n    payload: day,\r\n});\r\n\r\nexport const setSelectedOptionAction = (option: string) => ({\r\n    type: Types.SET_SELECTED_OPTION,\r\n    payload: option,\r\n});\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"style_select__1JzaF\",\"select_value\":\"style_select_value__2D-fm\",\"select_options\":\"style_select_options__2Tx-j\",\"select_options_item\":\"style_select_options_item__2OxXP\"};","import { TypedUseSelectorHook, useSelector } from \"react-redux\";\r\nimport { AppStateType } from \"../redux/reducers\";\r\n\r\nexport const useTypedSelector: TypedUseSelectorHook<AppStateType> = useSelector;\r\n","import { FieldState } from \"final-form\";\r\n\r\nexport interface IValidator {\r\n    validate: (\r\n        value: string,\r\n        allValues?: any,\r\n        meta?: FieldState<string> | undefined\r\n    ) => string | undefined;\r\n}\r\n\r\nexport default class FormHelper {\r\n    static validate(validators: IValidator[] = []) {\r\n        return (\r\n            value: string,\r\n            allValues?: any,\r\n            meta?: FieldState<string> | undefined\r\n        ): string | undefined => {\r\n            let error: any = undefined;\r\n            validators.forEach((validator: IValidator) => {\r\n                if (error) return;\r\n                error = validator.validate(value, allValues, meta);\r\n            });\r\n            return error;\r\n        };\r\n    }\r\n}\r\n","import { FieldState } from \"final-form\";\r\nimport { IValidator } from \"./FormHelper\";\r\n\r\ninterface IRequireValidator {\r\n    msg: string;\r\n}\r\n\r\nexport class Require implements IValidator {\r\n    msg: string = \"\";\r\n    constructor({ msg }: IRequireValidator) {\r\n        this.msg = msg;\r\n    }\r\n\r\n    validate(val: string, _: any, meta: FieldState<string> | undefined) {\r\n        const value = val && typeof val === \"string\" ? val.trim() : val;\r\n        if ((!value || value === null || value === \"\" || value === undefined) && meta?.visited) {\r\n            return this.msg;\r\n        }\r\n        return undefined;\r\n    }\r\n}\r\n","import InputField from './InputField';\r\n\r\nexport default InputField;","import React from \"react\";\r\nimport { FieldInputProps } from \"react-final-form\";\r\nimport cn from \"classnames\";\r\n\r\nimport styles from \"./style.module.scss\";\r\n\r\nexport type Props = {\r\n    fieldProps: FieldInputProps<any>;\r\n    className?: StyleSheet;\r\n};\r\n\r\nconst InputField: React.FC<any> = ({\r\n    placeholder,\r\n    className,\r\n    ...fieldProps\r\n}) => {\r\n    return (\r\n        <div className={styles[\"input-container\"]}>\r\n            {fieldProps.label && (\r\n                <label className={styles.input_label}>{fieldProps.label}</label>\r\n            )}\r\n            <input\r\n                className={cn(styles.input, className)}\r\n                onChange={fieldProps.input.onChange}\r\n                value={fieldProps.input.value}\r\n                name={fieldProps.input.name}\r\n                {...fieldProps.input}\r\n                placeholder={placeholder}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default InputField;\r\n","import DateField from './DateField';\r\n\r\nexport default DateField;","import React from \"react\";\r\nimport { FieldInputProps } from \"react-final-form\";\r\nimport cn from \"classnames\";\r\n\r\nimport styles from \"./style.module.scss\";\r\n\r\nexport type Props = {\r\n    fieldProps: FieldInputProps<any>;\r\n    className?: StyleSheet;\r\n};\r\n\r\nconst InputField: React.FC<any> = ({ className, fieldProps }) => {\r\n    let inputRef = React.useRef<HTMLInputElement>(null);\r\n    return (\r\n        <input\r\n            className={cn(styles.date, className)}\r\n            ref={inputRef}\r\n            type=\"text\"\r\n            onChange={fieldProps.input.onChange}\r\n            name={fieldProps.input.name}\r\n            value={fieldProps.input.value}\r\n            placeholder=\"Дата\"\r\n            onFocus={() => {\r\n                if (inputRef && inputRef.current) {\r\n                    inputRef.current.type = \"date\";\r\n                }\r\n            }}\r\n            onBlur={() => {\r\n                if (inputRef && inputRef.current) {\r\n                    inputRef.current.type = \"text\";\r\n                }\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nexport default InputField;\r\n","import React from \"react\";\r\nimport { map } from \"lodash\";\r\nimport { FieldInputProps } from \"react-final-form\";\r\n\r\nimport styles from \"./style.module.scss\";\r\n\r\ntype OptionType = {\r\n    onClick: (option: any) => void;\r\n    onClose: () => void;\r\n    options: any[];\r\n};\r\n\r\nconst Options: React.FC<OptionType> = ({ options, onClick, onClose }) => {\r\n    const optionsRef = React.useRef(null);\r\n\r\n    const onCloseHandler = React.useCallback(() => {\r\n        onClose();\r\n    }, [onClose]);\r\n\r\n    React.useEffect(() => {\r\n        document.body.addEventListener(\"click\", onCloseHandler);\r\n\r\n        return () => document.body.removeEventListener(\"click\", onCloseHandler);\r\n    }, [onCloseHandler]);\r\n    return (\r\n        <div className={styles.select_options} ref={optionsRef}>\r\n            {map(options, (option, index) => (\r\n                <div\r\n                    key={`${option.value}_${index}`}\r\n                    onClick={() => onClick(option)}\r\n                    className={styles.select_options_item}\r\n                >\r\n                    {option.value}\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\ntype Props = {\r\n    fieldProps: FieldInputProps<any>;\r\n    options: any[];\r\n    placeholder?: string;\r\n};\r\n\r\nconst SelectField: React.FC<Props> = ({\r\n    fieldProps,\r\n    options = [],\r\n    placeholder,\r\n}) => {\r\n    const [showOptions, setShowOptions] = React.useState(false);\r\n\r\n    const showOptionsHandler = () => {\r\n        setShowOptions((prev) => !prev);\r\n    };\r\n\r\n    const closeHandler = () => {\r\n        setShowOptions(false);\r\n    } \r\n\r\n    const onClickHandler = (option: any) => {\r\n        fieldProps.onChange(option);\r\n        closeHandler()\r\n    };\r\n\r\n    return (\r\n        <div className={styles.select}>\r\n            <p className={styles.select_value} onClick={showOptionsHandler}>\r\n                {fieldProps.value.value ||\r\n                    placeholder ||\r\n                    (options.length && options[0].value)}\r\n            </p>\r\n            {showOptions && (\r\n                <Options onClick={onClickHandler} options={options} onClose={closeHandler}/>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SelectField;\r\n","import SelectField from './SelectField';\r\n\r\nexport default SelectField;","import ModalForm from './ModalForm';\r\n\r\nexport default ModalForm;","import React from \"react\";\r\nimport { Form } from \"react-final-form\";\r\nimport { map } from \"lodash\";\r\nimport { ModalContainer } from \"../..\";\r\n\r\nimport styles from \"./style.module.scss\";\r\n\r\ntype Props = {\r\n    title: string;\r\n    buttonText: string;\r\n    onSubmit: (data: any) => void;\r\n    onClose: () => void;\r\n};\r\n\r\nconst ModalForm: React.FC<Props> = ({\r\n    children,\r\n    title,\r\n    buttonText,\r\n    onSubmit,\r\n    onClose,\r\n}) => {\r\n    return (\r\n        <ModalContainer onClose={onClose}>\r\n            <Form\r\n                onSubmit={onSubmit}\r\n                render={({ handleSubmit, errors }) => (\r\n                    <form onSubmit={handleSubmit}>\r\n                        <h2 className={styles.form_title}>{title}</h2>\r\n                        {children}\r\n                        {typeof errors === \"object\" &&\r\n                            Object.keys(errors).length > 0 && (\r\n                                <ul className={styles.form_errors}>\r\n                                    {map(\r\n                                        Object.keys(errors),\r\n                                        (error, index) => (\r\n                                            <li key={`${error}_${index}`}>\r\n                                                {errors[error]}\r\n                                            </li>\r\n                                        )\r\n                                    )}\r\n                                </ul>\r\n                            )}\r\n                        <button className={styles.form_btn}>\r\n                            {buttonText}\r\n                        </button>\r\n                    </form>\r\n                )}\r\n            />\r\n        </ModalContainer>\r\n    );\r\n};\r\n\r\nexport default ModalForm;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"style_modal__1sNdq\",\"modal-wrapper\":\"style_modal-wrapper__22jWJ\",\"modal_close\":\"style_modal_close__2GKuW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"style_input__2vQF3\",\"input_label\":\"style_input_label__FoSHQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form_title\":\"style_form_title__1R8pq\",\"form_errors\":\"style_form_errors__1KvuQ\",\"form_btn\":\"style_form_btn__2sLPt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"style_btn__1YbeP\",\"btn_plus\":\"style_btn_plus__3OdyH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"indicator\":\"style_indicator__1ArUc\",\"indicator-container\":\"style_indicator-container__3PB17\",\"slidein\":\"style_slidein__1UBPD\"};","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { userActions } from \"../../../redux/actions/user\";\r\nimport { reactLocalStorage } from \"reactjs-localstorage\";\r\nimport { useTypedSelector } from \"../../../hooks/useTypedSelectors\";\r\n\r\nexport type AuthFormValues = {\r\n    email: string;\r\n    password: string;\r\n    username?: string;\r\n};\r\n\r\nconst useUser = () => {\r\n    const dispatch = useDispatch();\r\n    const [loggedIn, setLoggedIn] = React.useState(\r\n        !!reactLocalStorage.get(\"token\")\r\n    );\r\n\r\n    const username = useTypedSelector(({ user }) => user.username);\r\n\r\n    const auth = React.useCallback(async (data: AuthFormValues) => {\r\n        return userActions.authAction(data);\r\n    }, []);\r\n\r\n    const reg = React.useCallback(async (data: AuthFormValues) => {\r\n        return userActions.regAction(data);\r\n    }, []);\r\n\r\n    const fetchInfo = React.useCallback(async () => {\r\n        dispatch(userActions.fetchInfoAction());\r\n    }, [dispatch]);\r\n\r\n    return {\r\n        reg,\r\n        auth,\r\n        fetchInfo,\r\n        username,\r\n        loggedIn,\r\n        setLoggedIn,\r\n    };\r\n};\r\n\r\nexport default useUser;\r\n","import { FieldState } from \"final-form\";\r\nimport { IValidator } from \"./FormHelper\";\r\n\r\ntype Test = {\r\n    msg: string;\r\n    count: number;\r\n};\r\n\r\ninterface IRangeValidator {\r\n    max?: Test;\r\n    min?: Test;\r\n}\r\n\r\nexport class Range implements IValidator {\r\n    max: Test | undefined;\r\n    min: Test | undefined;\r\n    constructor({ max, min }: IRangeValidator) {\r\n        this.max = max;\r\n        this.min = min;\r\n    }\r\n\r\n    validate(val: string, _: any, meta: FieldState<string> | undefined) {\r\n        const value = val && typeof val === \"string\" ? val.trim() : val;\r\n        if (meta?.visited) {\r\n            if (this.max && value && value.length > this.max.count) {\r\n                return this.max.msg;\r\n            }\r\n            if (this.min && value && value.length < this.min.count) {\r\n                return this.min.msg;\r\n            }\r\n            if (!value && (this.min || this.max)) {\r\n                // TODO: перекинуть наверх\r\n                if (this.min) {\r\n                    return this.min.msg;\r\n                }\r\n                if (this.max) {\r\n                    return this.max.msg;\r\n                }\r\n            }\r\n        }\r\n\r\n        return undefined;\r\n    }\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"style_button__36BKB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notify-container\":\"style_notify-container__13tfQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"date\":\"style_date__1dYRe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"style_container__BsDYz\"};","import { FieldState } from \"final-form\";\r\nimport { IValidator } from \"./FormHelper\";\r\n\r\ninterface IEmailValidator {\r\n    msg: string;\r\n}\r\n\r\nexport class Email implements IValidator {\r\n    msg: string = \"\";\r\n    constructor({ msg }: IEmailValidator) {\r\n        this.msg = msg;\r\n    }\r\n\r\n    template =\r\n        /^([a-z0-9_-]+\\.)*[a-z0-9_-]+@[a-z0-9_-]+(\\.[a-z0-9_-]+)*\\.[a-z]{2,6}$/;\r\n\r\n    validate(val: string, _: any, meta: FieldState<string> | undefined) {\r\n        const value = val && typeof val === \"string\" ? val.trim() : val;\r\n        if (\r\n            (!value || value === null || value === \"\" || value === undefined || !val.match(this.template)) &&\r\n            meta?.visited\r\n        ) {\r\n            return this.msg;\r\n        }\r\n        return undefined;\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { Field, Form } from \"react-final-form\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { Button } from \"../../components\";\r\nimport { InputField } from \"../../components/fields\";\r\nimport useUser, { AuthFormValues } from \"../Home/hooks/useUser\";\r\nimport { reactLocalStorage } from \"reactjs-localstorage\";\r\n\r\nimport styles from \"./style.module.scss\";\r\nimport FormHelper from \"../../utils/validators/FormHelper\";\r\nimport { Email } from \"../../utils/validators/EmailValidator\";\r\nimport { Require } from \"../../utils/validators/RequireValidator\";\r\nimport { Range } from \"../../utils/validators/RangeValidator\";\r\n\r\ntype Props = {\r\n    isReg: boolean;\r\n};\r\n\r\nexport const setToken = (token: string, refresh_token: string) => {\r\n    reactLocalStorage.set(\"token\", token);\r\n    reactLocalStorage.set(\"refresh_token\", refresh_token);\r\n};\r\n\r\nconst Auth: React.FC<Props> = ({ isReg = false }) => {\r\n    const { reg, auth, setLoggedIn, loggedIn } = useUser();\r\n    const history = useHistory();\r\n\r\n    if (loggedIn) {\r\n        history.push(\"/\");\r\n    }\r\n\r\n    const authHandler = async (data: AuthFormValues) => {\r\n        auth(data)\r\n            .then(({ data }) => setToken(data.access_token, data.refresh_token))\r\n            .then(() => setLoggedIn(true));\r\n    };\r\n\r\n    const regHandler = async (data: AuthFormValues) => {\r\n        reg(data)\r\n            .then(({ data }) => setToken(data.access_token, data.refresh_token))\r\n            .then(() => setLoggedIn(true));\r\n    };\r\n\r\n    const onSubmit = async (data: AuthFormValues) => {\r\n        const func = isReg ? regHandler : authHandler;\r\n        func(data);\r\n    };\r\n    return (\r\n        <div className={styles.auth}>\r\n            <h1\r\n                className={styles.auth_title}\r\n                onClick={() => reactLocalStorage.clear()}\r\n            >\r\n                Pockets\r\n            </h1>\r\n            <h3 className={styles.auth_subtitle}>\r\n                {isReg ? \"Adventure starts here\" : \"Welcome to Pockets! 👋🏻\"}\r\n            </h3>\r\n            <p className={styles.auth_description}>\r\n                {isReg\r\n                    ? \"Make your app management easy and fun!\"\r\n                    : \"Please sign-in to your account and start the adventure\"}\r\n            </p>\r\n            <Form\r\n                onSubmit={onSubmit}\r\n                render={({ handleSubmit, errors }) => (\r\n                    <form onSubmit={handleSubmit} className={styles.auth_form}>\r\n                        {typeof errors === \"object\" && (\r\n                            <ul className={styles.auth_form_errors}>\r\n                                {Object.values(errors).map((error) => (\r\n                                    <li\r\n                                        className={styles.auth_form_errors_item}\r\n                                    >\r\n                                        {error}\r\n                                    </li>\r\n                                ))}\r\n                            </ul>\r\n                        )}\r\n                        {isReg && (\r\n                            <div className={styles.auth_field}>\r\n                                <Field\r\n                                    name=\"username\"\r\n                                    label=\"Usermame\"\r\n                                    render={(props) => (\r\n                                        <InputField\r\n                                            placeholder=\"John Doe\"\r\n                                            {...props}\r\n                                        />\r\n                                    )}\r\n                                    validate={FormHelper.validate([\r\n                                        new Require({\r\n                                            msg: \"Имя пользователя обязательное поле\",\r\n                                        }),\r\n                                        new Range({\r\n                                            min: {\r\n                                                count: 4,\r\n                                                msg: \"Количество символов не должно быть меньше 4\",\r\n                                            },\r\n                                        }),\r\n                                    ])}\r\n                                />\r\n                            </div>\r\n                        )}\r\n                        <div className={styles.auth_field}>\r\n                            <Field\r\n                                name=\"email\"\r\n                                label=\"Email\"\r\n                                render={(props) => (\r\n                                    <InputField\r\n                                        placeholder=\"johndoe@gmail.com\"\r\n                                        {...props}\r\n                                    />\r\n                                )}\r\n                                validate={FormHelper.validate([\r\n                                    new Require({\r\n                                        msg: \"Email обязательное поле\",\r\n                                    }),\r\n                                    new Email({ msg: \"Email указан не верно\" }),\r\n                                ])}\r\n                            />\r\n                        </div>\r\n                        <div className={styles.auth_field}>\r\n                            <Field\r\n                                name=\"password\"\r\n                                type=\"password\"\r\n                                label=\"Password\"\r\n                                render={(props) => (\r\n                                    <InputField\r\n                                        placeholder=\"⚉ ⚉ ⚉ ⚉ ⚉ ⚉ ⚉ ⚉\"\r\n                                        {...props}\r\n                                    />\r\n                                )}\r\n                                validate={FormHelper.validate([\r\n                                    new Require({\r\n                                        msg: \"Пароль обязательное поле\",\r\n                                    }),\r\n                                ])}\r\n                            />\r\n                        </div>\r\n                        <Button>Login</Button>\r\n                    </form>\r\n                )}\r\n            />\r\n            <div className={styles.auth_bottom}>\r\n                <p>\r\n                    {isReg\r\n                        ? \"Already have an account?\"\r\n                        : \"New on our platform?\"}\r\n                </p>\r\n                {isReg ? (\r\n                    <Link to=\"/auth\">Sign in instead</Link>\r\n                ) : (\r\n                    <Link to=\"/reg\">Create an account</Link>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Auth;\r\n","import produce from \"immer\";\r\nimport { NotifyType } from \"../actions/notifications\";\r\nimport {\r\n    TGlobalTransactionItem,\r\n    // TransactionActions,\r\n    TTransactionItem,\r\n    Types,\r\n} from \"../actions/transactions\";\r\n\r\nexport declare type TransactionsState = {\r\n    items: TTransactionItem[];\r\n    globalItems: TGlobalTransactionItem[];\r\n    isLoaded: boolean;\r\n    error: NotifyType[];\r\n};\r\n\r\nconst initState: TransactionsState = {\r\n    items: [],\r\n    globalItems: [],\r\n    isLoaded: false,\r\n    error: [],\r\n};\r\n\r\n// const reducer = (state = initState, action: TransactionActions) => {\r\nconst reducer = (state = initState, action: any) => {\r\n    return produce(state, (draft) => {\r\n        switch (action.type) {\r\n            case Types.SET_ITEMS:\r\n                draft.items = action.payload;\r\n                draft.isLoaded = true;\r\n                break;\r\n            case Types.SET_GLOBAL_ITEMS:\r\n                draft.globalItems = action.payload;\r\n                break;\r\n            case Types.LOADING:\r\n                draft.isLoaded = action.payload;\r\n                break;\r\n            case Types.ERROR:\r\n                draft.isLoaded = false;\r\n                draft.error = action.payload;\r\n                break;\r\n            default:\r\n        }\r\n    });\r\n};\r\n\r\nexport default reducer;\r\n","import produce from \"immer\";\r\nimport { NotifyType } from \"../actions/notifications\";\r\nimport { TWidgetColor, TWidgetItem, Types } from \"../actions/widgets\";\r\n\r\nexport declare type WidgetState = {\r\n    items: TWidgetItem[];\r\n    colors: TWidgetColor[];\r\n    isLoading: boolean;\r\n    error: NotifyType[];\r\n};\r\n\r\nconst initState: WidgetState = {\r\n    items: [],\r\n    colors: [],\r\n    isLoading: false,\r\n    error: [],\r\n};\r\n\r\nconst reducer = (state = initState, action: any) => {\r\n    return produce(state, (draft) => {\r\n        switch (action.type) {\r\n            case Types.SET_ITEMS:\r\n                draft.items = action.payload;\r\n                draft.isLoading = false;\r\n                break;\r\n            case Types.SET_COLORS:\r\n                draft.colors = action.payload;\r\n                draft.isLoading = false;\r\n                break;\r\n            case Types.LOADING:\r\n                draft.isLoading = true;\r\n                break;\r\n            case Types.ERROR:\r\n                draft.isLoading = false;\r\n                draft.error = action.payload;\r\n                break;\r\n            default:\r\n        }\r\n    });\r\n};\r\n\r\nexport default reducer;\r\n","import produce from \"immer\";\r\nimport {\r\n    // CategoryActions,\r\n    ITransactionsByCategory,\r\n    TCategory,\r\n    Types,\r\n} from \"../actions/categories\";\r\nimport { NotifyType } from \"../actions/notifications\";\r\n\r\nexport declare type CategoryState = {\r\n    items: TCategory[];\r\n    itemsTransactions: ITransactionsByCategory[];\r\n    isLoaded: boolean;\r\n    error: NotifyType[];\r\n};\r\n\r\nconst initState: CategoryState = {\r\n    items: [],\r\n    itemsTransactions: [],\r\n    isLoaded: false,\r\n    error: [],\r\n};\r\n\r\n// const reducer = (state = initState, action: CategoryActions) => {\r\nconst reducer = (state = initState, action: any) => {\r\n    return produce(state, (draft) => {\r\n        switch (action.type) {\r\n            case Types.SET_ITEMS:\r\n                draft.items = action.payload;\r\n                draft.isLoaded = true;\r\n                break;\r\n            case Types.SET_ITEMS_TRANSACTIONS:\r\n                draft.itemsTransactions = action.payload;\r\n                draft.isLoaded = true;\r\n                break;\r\n            case Types.LOADING:\r\n                draft.isLoaded = action.payload;\r\n                break;\r\n            case Types.ERROR:\r\n                draft.isLoaded = true;\r\n                draft.error = action.payload;\r\n                break;\r\n            default:\r\n        }\r\n    });\r\n};\r\n\r\nexport default reducer;\r\n","import produce from \"immer\";\r\nimport { NotifyType, Types } from \"../actions/notifications\";\r\n\r\nexport declare type NotifyState = {\r\n    items: NotifyType[];\r\n};\r\n\r\nconst initState: NotifyState = {\r\n    items: [],\r\n};\r\n\r\nconst reducer = (state = initState, action: any) => {\r\n    return produce(state, (draft) => {\r\n        switch (action.type) {\r\n            case Types.SET_ITEMS:\r\n                draft.items = action.payload;\r\n                break;\r\n            default:\r\n        }\r\n    });\r\n};\r\n\r\nexport default reducer;\r\n","import produce from \"immer\";\r\nimport DateHelper from \"../../utils/DateHelper\";\r\nimport { Types } from \"../actions/calendar\";\r\n\r\nconst nowDate = new Date();\r\n\r\nconst getDateWithoutTime = (date: Date) => {\r\n    return new Date(date.getFullYear(), date.getMonth(), date.getDate());\r\n};\r\n\r\nconst initState = {\r\n    selectedDay: nowDate.getDate(),\r\n    selectedMonth: nowDate.getMonth(),\r\n    selectedYear: nowDate.getFullYear(),\r\n    options: DateHelper.periodTypes,\r\n    selectedOption: DateHelper.periodTypes[2],\r\n    nowDateStamp: +getDateWithoutTime(nowDate),\r\n    prevDateStamp: DateHelper.getPrevDate(\r\n        getDateWithoutTime(nowDate),\r\n        DateHelper.periodTypes[2]\r\n    ),\r\n};\r\n\r\nconst reducer = (state = initState, action: any) => {\r\n    let date: Date;\r\n    return produce(state, (draft) => {\r\n        switch (action.type) {\r\n            case Types.SET_DAY:\r\n                draft.selectedDay = action.payload;\r\n                date = getDateWithoutTime(\r\n                    new Date(\r\n                        draft.selectedYear,\r\n                        draft.selectedMonth,\r\n                        action.payload\r\n                    )\r\n                );\r\n                draft.nowDateStamp = +date;\r\n                draft.prevDateStamp = DateHelper.getPrevDate(\r\n                    date,\r\n                    draft.selectedOption\r\n                );\r\n                break;\r\n            case Types.SET_MONTH:\r\n                draft.selectedMonth = action.payload;\r\n                date = getDateWithoutTime(\r\n                    new Date(\r\n                        draft.selectedYear,\r\n                        action.payload,\r\n                        draft.selectedDay\r\n                    )\r\n                );\r\n                draft.nowDateStamp = +date;\r\n                draft.prevDateStamp = DateHelper.getPrevDate(\r\n                    date,\r\n                    draft.selectedOption\r\n                );\r\n                break;\r\n            case Types.SET_YEAR:\r\n                draft.selectedYear = action.payload;\r\n                date = getDateWithoutTime(\r\n                    new Date(\r\n                        action.payload,\r\n                        draft.selectedMonth,\r\n                        draft.selectedDay\r\n                    )\r\n                );\r\n                draft.nowDateStamp = +date;\r\n                draft.prevDateStamp = DateHelper.getPrevDate(\r\n                    date,\r\n                    draft.selectedOption\r\n                );\r\n                break;\r\n            case Types.SET_SELECTED_OPTION:\r\n                draft.selectedOption = action.payload;\r\n                date = getDateWithoutTime(\r\n                    new Date(\r\n                        draft.selectedYear,\r\n                        draft.selectedMonth,\r\n                        draft.selectedDay\r\n                    )\r\n                );\r\n                draft.nowDateStamp = +date;\r\n                draft.prevDateStamp = DateHelper.getPrevDate(\r\n                    date,\r\n                    action.payload\r\n                );\r\n                break;\r\n            default:\r\n        }\r\n    });\r\n};\r\n\r\nexport default reducer;\r\n","import produce from \"immer\";\r\nimport { Types } from \"../actions/user\";\r\n\r\nconst initState = {\r\n    username: null,\r\n};\r\n\r\nconst reducer = (state = initState, action: any) => {\r\n    return produce(state, (draft) => {\r\n        switch (action.type) {\r\n            case Types.SET_USERNAME:\r\n                draft.username = action.payload;\r\n                break;\r\n            default:\r\n        }\r\n    });\r\n};\r\n\r\nexport default reducer;\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport transactions from \"./transactions\";\r\nimport widgets from \"./widgets\";\r\nimport categories from \"./categories\";\r\nimport notifications from \"./notifications\";\r\nimport calendar from \"./calendar\";\r\nimport user from \"./user\";\r\n\r\nconst rootReducer = combineReducers({\r\n    transactions,\r\n    widgets,\r\n    categories,\r\n    notifications,\r\n    user,\r\n    calendar,\r\n});\r\n\r\nexport default rootReducer;\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\n","import { createStore, compose, applyMiddleware } from \"redux\";\r\nimport think, { ThunkAction } from \"redux-thunk\";\r\nimport api from \"../api\";\r\n\r\nimport rootReducer, { AppStateType } from \"./reducers\";\r\n\r\ndeclare global {\r\n    interface Window {\r\n        __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\r\n    }\r\n}\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport type ThunkExtra = {\r\n    api: any;\r\n};\r\n\r\nexport declare type TAction<Dispatch> = ThunkAction<\r\n    Dispatch,\r\n    AppStateType,\r\n    ThunkExtra,\r\n    any\r\n>;\r\n\r\nexport const middleware = [\r\n    think.withExtraArgument<ThunkExtra>({\r\n        api,\r\n    }),\r\n];\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport { Route, Switch } from \"react-router\";\nimport { NotifyContainer } from \"./components\";\nimport styles from \"./style.module.scss\";\n\nconst Home = React.lazy(() => import(\"./pages/Home/Home\"));\nconst Auth = React.lazy(() => import(\"./pages/Auth/Auth\"));\n\n// TODO:\n// автозаполнение в edit\n// валидацию сделать только при уходе с поля\n\nconst App = () => {\n    return (\n        <div className={styles.container}>\n            <NotifyContainer />\n            <Switch>\n                <Route path=\"/auth\">\n                    <React.Suspense fallback={<div>Loading...</div>}>\n                        <Auth isReg={false} />\n                    </React.Suspense>\n                </Route>\n                <Route path=\"/reg\">\n                    <React.Suspense fallback={<div>Loading...</div>}>\n                        <Auth isReg={true} />\n                    </React.Suspense>\n                </Route>\n                <Route path=\"/\" exact>\n                    <React.Suspense fallback={<div>Loading...</div>}>\n                        <Home />\n                    </React.Suspense>\n                </Route>\n            </Switch>\n        </div>\n    );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport store from \"./redux/store\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <Router>\n            <App />\n        </Router>\n    </Provider>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}