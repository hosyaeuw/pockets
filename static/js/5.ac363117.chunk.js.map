{"version":3,"sources":["utils/validators/FormHelper.ts","utils/validators/RequireValidator.ts","components/fields/InputField/index.js","components/fields/InputField/InputField.tsx","components/fields/DateInputField/index.js","components/fields/DateInputField/DateField.tsx","components/fields/SelectField/SelectField.tsx","components/fields/SelectField/index.js","components/fields/ModalForm/index.js","components/fields/ModalForm/ModalForm.tsx","components/fields/InputField/style.module.scss","components/fields/DateInputField/style.module.scss","components/fields/SelectField/style.module.scss","components/fields/ModalForm/style.module.scss","utils/validators/RangeValidator.ts","pages/Home/hooks/useUser.ts","pages/Home/components/TransactionsTable/style.module.scss","pages/Home/components/TransactionsTable/components/TransactionsModal/style.module.scss","pages/Home/components/Summary/style.module.scss","pages/Home/components/Summary/components/SummaryModal/Components/Tabs/style.module.scss","pages/Home/components/Summary/components/SummaryModal/style.module.scss","pages/Home/components/Widgets/components/Widget/style.module.scss","pages/Home/components/Widgets/components/WidgetsModal/style.module.scss","pages/Home/components/Widgets/style.module.scss","pages/Home/components/Widgets/components/GraphsModal/style.module.scss","pages/Home/components/Calendar/style.module.scss","pages/Home/components/TotalAmount/style.module.scss","pages/Home/style.module.scss","assets/icons/edit.svg","pages/Home/components/Calendar/hooks/useCalendar.ts","pages/Home/hooks/useTransactions.ts","pages/Home/hooks/useCategories.ts","pages/Home/components/TransactionsTable/components/TransactionsModal/index.js","pages/Home/components/TransactionsTable/components/TransactionsModal/TransactionsModal.tsx","pages/Home/components/TransactionsTable/index.js","pages/Home/components/TransactionsTable/TransactionsTable.tsx","pages/Home/components/Summary/components/SummaryModal/Components/Tabs/index.js","pages/Home/components/Summary/components/SummaryModal/Components/Tabs/Tabs.tsx","pages/Home/components/Summary/components/SummaryModal/index.js","pages/Home/components/Summary/components/SummaryModal/SummaryModal.tsx","pages/Home/components/Summary/index.js","pages/Home/components/Summary/Summary.tsx","pages/Home/hooks/useWidgets.ts","pages/Home/components/Widgets/components/Widget/index.js","pages/Home/components/Widgets/components/Widget/Widget.tsx","pages/Home/components/Widgets/components/WidgetsModal/WidgetsModal.tsx","pages/Home/components/Widgets/components/WidgetsModal/index.js","pages/Home/components/Widgets/components/GraphsModal/index.js","pages/Home/components/Widgets/components/GraphsModal/GraphsModal.tsx","pages/Home/components/Widgets/index.js","pages/Home/components/Widgets/Widgets.tsx","pages/Home/components/Calendar/index.js","pages/Home/components/Calendar/Calendar.tsx","pages/Home/components/TotalAmount/index.js","pages/Home/components/TotalAmount/TotalAmount.tsx","pages/Home/Home.tsx"],"names":["FormHelper","validators","value","allValues","meta","error","undefined","forEach","validator","validate","Require","msg","this","val","_","trim","visited","InputField","placeholder","className","fieldProps","styles","label","input_label","cn","input","onChange","name","DateField","inputRef","React","useRef","date","ref","type","onFocus","current","onBlur","Options","options","onClick","onClose","optionsRef","onCloseHandler","useCallback","useEffect","document","body","addEventListener","removeEventListener","select_options","map","option","index","select_options_item","SelectField","useState","showOptions","setShowOptions","closeHandler","select","select_value","prev","length","ModalForm","children","title","buttonText","onSubmit","render","handleSubmit","errors","form_title","Object","keys","form_errors","form_btn","module","exports","Range","max","min","count","useUser","dispatch","useDispatch","reactLocalStorage","get","loggedIn","setLoggedIn","username","useTypedSelector","user","auth","data","a","userActions","authAction","reg","regAction","fetchInfo","fetchInfoAction","useCalendar","calendar","selectedDay","selectedMonth","selectedYear","selectedOption","nowDateStamp","prevDateStamp","setSelectedDay","day","setCalendarDayAction","setSelectedMonth","month","setCalendarMonthAction","setSelectedYear","year","setCalendarYearAction","setSelectedOption","setSelectedOptionAction","selectedDayName","DateHelper","dayRuNames","selectedMonthName","monthRuNames","useTransactions","transactions","items","globalItems","isLoaded","transactionItems","transactionGlobalItems","addTransaction","TransactionsActions","updateTransaction","deleteTransaction","id","window","confirm","batch","fetchTransactions","fetchGlobalTransactions","useCategories","categories","itemsTransactions","categoryItems","addCategory","CategoryActions","fetchTransactionsByCategories","fetchCategories","TransactionsModal","isEdit","categoryItem","fields","defaultValue","Date","toISOString","split","category","component","amount","TransactionsTable","tableRef","startRows","setStartRows","showModal","setShowModal","idItemRef","scrollHandler","e","Math","floor","currentTarget","scrollTop","table","table_header","table_width","style","display","justifyContent","table_body_scroll","table_body","height","slice","transactionItem","income","is_income","table_cell","table_date","transaction_date","toLocaleDateString","table_amount","width","viewBox","xmlns","table_edit","fillRule","clipRule","d","table_delete","table_empty","Tabs","selectedTab","setSelectedTab","tabs","item","tabs_item","tabs_item__active","onClickHandler","SummaryModal","Summary","filter","transactions_sum","summary","summary_header","table_head","table_scroll","table_row","table_category","useWidgets","widgets","colors","widgetItems","widgetColors","addWidget","WidgetsActions","addWidgetAction","deleteWidget","deleteWidgetAction","fetchWidgetColors","fetchWidgets","Widget","color","isMore","period","limit","transactionsSum","categoryName","widget","background","fill","widget_delete","widget_left","widget_img","widget_validity","widget_right","widget_title","toLowerCase","widget_sum","optionsPeriods","ColorField","onClickHandle","active","TabsField","activeTab","setActiveTab","WidgetsModal","categoryOptions","GraphsModal","state","setState","values","setValues","innerRadius","radius","getAngle","onValueClick","console","log","onValueMouseOver","v","onSeriesMouseOut","hint","Widgets","showIndex","setShowIndex","widgetsEmpty","showModalForm","setShowModalForm","showModalGraphs","setShowModalGraphs","center","widgetItem","is_more","widgets_next","widgets_handler","widgets_add","Calendar","nowDate","dayOnWeek","getDayOnWeek","daysInMonth","getCountDaysInMonth","daysInPrevMonth","daysInNextMonth","prevClickHandler","nextClickHandler","calendar_title","calendar_select","abbreviation","range","calendar_day","disabled","now","getDate","getMonth","getFullYear","TotalAmount","alignItems","Home","home","pockets","pockets_content","pockets_tables","utils","profile","src","profile_photo","alt","editSVG","profile_photo_edit","utils_calendar","to"],"mappings":"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","file":"static/js/5.ac363117.chunk.js","sourcesContent":["import { FieldState } from \"final-form\";\r\n\r\nexport interface IValidator {\r\n    validate: (\r\n        value: string,\r\n        allValues?: any,\r\n        meta?: FieldState<string> | undefined\r\n    ) => string | undefined;\r\n}\r\n\r\nexport default class FormHelper {\r\n    static validate(validators: IValidator[] = []) {\r\n        return (\r\n            value: string,\r\n            allValues?: any,\r\n            meta?: FieldState<string> | undefined\r\n        ): string | undefined => {\r\n            let error: any = undefined;\r\n            validators.forEach((validator: IValidator) => {\r\n                if (error) return;\r\n                error = validator.validate(value, allValues, meta);\r\n            });\r\n            return error;\r\n        };\r\n    }\r\n}\r\n","import { FieldState } from \"final-form\";\r\nimport { IValidator } from \"./FormHelper\";\r\n\r\ninterface IRequireValidator {\r\n    msg: string;\r\n}\r\n\r\nexport class Require implements IValidator {\r\n    msg: string = \"\";\r\n    constructor({ msg }: IRequireValidator) {\r\n        this.msg = msg;\r\n    }\r\n\r\n    validate(val: string, _: any, meta: FieldState<string> | undefined) {\r\n        const value = val && typeof val === \"string\" ? val.trim() : val;\r\n        if ((!value || value === null || value === \"\" || value === undefined) && meta?.visited) {\r\n            return this.msg;\r\n        }\r\n        return undefined;\r\n    }\r\n}\r\n","import InputField from './InputField';\r\n\r\nexport default InputField;","import React from \"react\";\r\nimport { FieldInputProps } from \"react-final-form\";\r\nimport cn from \"classnames\";\r\n\r\nimport styles from \"./style.module.scss\";\r\n\r\nexport type Props = {\r\n    fieldProps: FieldInputProps<any>;\r\n    className?: StyleSheet;\r\n};\r\n\r\nconst InputField: React.FC<any> = ({\r\n    placeholder,\r\n    className,\r\n    ...fieldProps\r\n}) => {\r\n    return (\r\n        <div className={styles[\"input-container\"]}>\r\n            {fieldProps.label && (\r\n                <label className={styles.input_label}>{fieldProps.label}</label>\r\n            )}\r\n            <input\r\n                className={cn(styles.input, className)}\r\n                onChange={fieldProps.input.onChange}\r\n                value={fieldProps.input.value}\r\n                name={fieldProps.input.name}\r\n                {...fieldProps.input}\r\n                placeholder={placeholder}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default InputField;\r\n","import DateField from './DateField';\r\n\r\nexport default DateField;","import React from \"react\";\r\nimport { FieldInputProps } from \"react-final-form\";\r\nimport cn from \"classnames\";\r\n\r\nimport styles from \"./style.module.scss\";\r\n\r\nexport type Props = {\r\n    fieldProps: FieldInputProps<any>;\r\n    className?: StyleSheet;\r\n};\r\n\r\nconst InputField: React.FC<any> = ({ className, fieldProps }) => {\r\n    let inputRef = React.useRef<HTMLInputElement>(null);\r\n    return (\r\n        <input\r\n            className={cn(styles.date, className)}\r\n            ref={inputRef}\r\n            type=\"text\"\r\n            onChange={fieldProps.input.onChange}\r\n            name={fieldProps.input.name}\r\n            value={fieldProps.input.value}\r\n            placeholder=\"Дата\"\r\n            onFocus={() => {\r\n                if (inputRef && inputRef.current) {\r\n                    inputRef.current.type = \"date\";\r\n                }\r\n            }}\r\n            onBlur={() => {\r\n                if (inputRef && inputRef.current) {\r\n                    inputRef.current.type = \"text\";\r\n                }\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nexport default InputField;\r\n","import React from \"react\";\r\nimport { map } from \"lodash\";\r\nimport { FieldInputProps } from \"react-final-form\";\r\n\r\nimport styles from \"./style.module.scss\";\r\n\r\ntype OptionType = {\r\n    onClick: (option: any) => void;\r\n    onClose: () => void;\r\n    options: any[];\r\n};\r\n\r\nconst Options: React.FC<OptionType> = ({ options, onClick, onClose }) => {\r\n    const optionsRef = React.useRef(null);\r\n\r\n    const onCloseHandler = React.useCallback(() => {\r\n        onClose();\r\n    }, [onClose]);\r\n\r\n    React.useEffect(() => {\r\n        document.body.addEventListener(\"click\", onCloseHandler);\r\n\r\n        return () => document.body.removeEventListener(\"click\", onCloseHandler);\r\n    }, [onCloseHandler]);\r\n    return (\r\n        <div className={styles.select_options} ref={optionsRef}>\r\n            {map(options, (option, index) => (\r\n                <div\r\n                    key={`${option.value}_${index}`}\r\n                    onClick={() => onClick(option)}\r\n                    className={styles.select_options_item}\r\n                >\r\n                    {option.value}\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\ntype Props = {\r\n    fieldProps: FieldInputProps<any>;\r\n    options: any[];\r\n    placeholder?: string;\r\n};\r\n\r\nconst SelectField: React.FC<Props> = ({\r\n    fieldProps,\r\n    options = [],\r\n    placeholder,\r\n}) => {\r\n    const [showOptions, setShowOptions] = React.useState(false);\r\n\r\n    const showOptionsHandler = () => {\r\n        setShowOptions((prev) => !prev);\r\n    };\r\n\r\n    const closeHandler = () => {\r\n        setShowOptions(false);\r\n    } \r\n\r\n    const onClickHandler = (option: any) => {\r\n        fieldProps.onChange(option);\r\n        closeHandler()\r\n    };\r\n\r\n    return (\r\n        <div className={styles.select}>\r\n            <p className={styles.select_value} onClick={showOptionsHandler}>\r\n                {fieldProps.value.value ||\r\n                    placeholder ||\r\n                    (options.length && options[0].value)}\r\n            </p>\r\n            {showOptions && (\r\n                <Options onClick={onClickHandler} options={options} onClose={closeHandler}/>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SelectField;\r\n","import SelectField from './SelectField';\r\n\r\nexport default SelectField;","import ModalForm from './ModalForm';\r\n\r\nexport default ModalForm;","import React from \"react\";\r\nimport { Form } from \"react-final-form\";\r\nimport { map } from \"lodash\";\r\nimport { ModalContainer } from \"../..\";\r\n\r\nimport styles from \"./style.module.scss\";\r\n\r\ntype Props = {\r\n    title: string;\r\n    buttonText: string;\r\n    onSubmit: (data: any) => void;\r\n    onClose: () => void;\r\n};\r\n\r\nconst ModalForm: React.FC<Props> = ({\r\n    children,\r\n    title,\r\n    buttonText,\r\n    onSubmit,\r\n    onClose,\r\n}) => {\r\n    return (\r\n        <ModalContainer onClose={onClose}>\r\n            <Form\r\n                onSubmit={onSubmit}\r\n                render={({ handleSubmit, errors }) => (\r\n                    <form onSubmit={handleSubmit}>\r\n                        <h2 className={styles.form_title}>{title}</h2>\r\n                        {children}\r\n                        {typeof errors === \"object\" &&\r\n                            Object.keys(errors).length > 0 && (\r\n                                <ul className={styles.form_errors}>\r\n                                    {map(\r\n                                        Object.keys(errors),\r\n                                        (error, index) => (\r\n                                            <li key={`${error}_${index}`}>\r\n                                                {errors[error]}\r\n                                            </li>\r\n                                        )\r\n                                    )}\r\n                                </ul>\r\n                            )}\r\n                        <button className={styles.form_btn}>\r\n                            {buttonText}\r\n                        </button>\r\n                    </form>\r\n                )}\r\n            />\r\n        </ModalContainer>\r\n    );\r\n};\r\n\r\nexport default ModalForm;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"style_input__2vQF3\",\"input_label\":\"style_input_label__FoSHQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"date\":\"style_date__1dYRe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"style_select__1JzaF\",\"select_value\":\"style_select_value__2D-fm\",\"select_options\":\"style_select_options__2Tx-j\",\"select_options_item\":\"style_select_options_item__2OxXP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form_title\":\"style_form_title__1R8pq\",\"form_errors\":\"style_form_errors__1KvuQ\",\"form_btn\":\"style_form_btn__2sLPt\"};","import { FieldState } from \"final-form\";\r\nimport { IValidator } from \"./FormHelper\";\r\n\r\ntype Test = {\r\n    msg: string;\r\n    count: number;\r\n};\r\n\r\ninterface IRangeValidator {\r\n    max?: Test;\r\n    min?: Test;\r\n}\r\n\r\nexport class Range implements IValidator {\r\n    max: Test | undefined;\r\n    min: Test | undefined;\r\n    constructor({ max, min }: IRangeValidator) {\r\n        this.max = max;\r\n        this.min = min;\r\n    }\r\n\r\n    validate(val: string, _: any, meta: FieldState<string> | undefined) {\r\n        const value = val && typeof val === \"string\" ? val.trim() : val;\r\n        if (meta?.visited) {\r\n            if (this.max && value && value.length > this.max.count) {\r\n                return this.max.msg;\r\n            }\r\n            if (this.min && value && value.length < this.min.count) {\r\n                return this.min.msg;\r\n            }\r\n            if (!value && (this.min || this.max)) {\r\n                // TODO: перекинуть наверх\r\n                if (this.min) {\r\n                    return this.min.msg;\r\n                }\r\n                if (this.max) {\r\n                    return this.max.msg;\r\n                }\r\n            }\r\n        }\r\n\r\n        return undefined;\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { userActions } from \"../../../redux/actions/user\";\r\nimport { reactLocalStorage } from \"reactjs-localstorage\";\r\nimport { useTypedSelector } from \"../../../hooks/useTypedSelectors\";\r\n\r\nexport type AuthFormValues = {\r\n    email: string;\r\n    password: string;\r\n    username?: string;\r\n};\r\n\r\nconst useUser = () => {\r\n    const dispatch = useDispatch();\r\n    const [loggedIn, setLoggedIn] = React.useState(\r\n        !!reactLocalStorage.get(\"token\")\r\n    );\r\n\r\n    const username = useTypedSelector(({ user }) => user.username);\r\n\r\n    const auth = React.useCallback(async (data: AuthFormValues) => {\r\n        return userActions.authAction(data);\r\n    }, []);\r\n\r\n    const reg = React.useCallback(async (data: AuthFormValues) => {\r\n        return userActions.regAction(data);\r\n    }, []);\r\n\r\n    const fetchInfo = React.useCallback(async () => {\r\n        dispatch(userActions.fetchInfoAction());\r\n    }, [dispatch]);\r\n\r\n    return {\r\n        reg,\r\n        auth,\r\n        fetchInfo,\r\n        username,\r\n        loggedIn,\r\n        setLoggedIn,\r\n    };\r\n};\r\n\r\nexport default useUser;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"income\":\"style_income__1bGW2\",\"table\":\"style_table__1Rzb6\",\"table_width\":\"style_table_width__J9xlN\",\"table_edit\":\"style_table_edit__2HoTv\",\"table_delete\":\"style_table_delete__3Wjw6\",\"table_header\":\"style_table_header__2HmC_\",\"table_body\":\"style_table_body___w4vQ\",\"table_body_scroll\":\"style_table_body_scroll__2eCYp\",\"table_cell\":\"style_table_cell__1rxX7\",\"table_date\":\"style_table_date__2oT7h\",\"table_amount\":\"style_table_amount__2hIAO\",\"table_empty\":\"style_table_empty__kzIFj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"category\":\"style_category__3CT4a\",\"fields-container\":\"style_fields-container__3Vrh-\",\"amount\":\"style_amount__2elO5\",\"fields\":\"style_fields__3WB3B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"summary\":\"style_summary__2AfnG\",\"summary_header\":\"style_summary_header__2D4Ue\",\"table\":\"style_table__1uHhY\",\"table_head\":\"style_table_head__3YG_H\",\"table_scroll\":\"style_table_scroll__4w5tF\",\"table_cell\":\"style_table_cell__1jP9B\",\"table_category\":\"style_table_category__2KUHo\",\"table_amount\":\"style_table_amount__gW5IH\",\"table_empty\":\"style_table_empty__1mqyR\",\"income\":\"style_income___m9Cu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tabs\":\"style_tabs__Exn9M\",\"tabs_item\":\"style_tabs_item__AjACS\",\"tabs_item__active\":\"style_tabs_item__active__37_1r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fields-container\":\"style_fields-container__10XNp\",\"fields-tabs\":\"style_fields-tabs__20_JJ\",\"input\":\"style_input__2jtRK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"widget\":\"style_widget__1mU7T\",\"widget_left\":\"style_widget_left__1oq8h\",\"widget_right\":\"style_widget_right__1gxD-\",\"widget_delete\":\"style_widget_delete__3SZme\",\"widget_img\":\"style_widget_img__TO2zV\",\"widget_validity\":\"style_widget_validity__2Jlz8\",\"widget_title\":\"style_widget_title__OiX-U\",\"widget_sum\":\"style_widget_sum__kOHkd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fields\":\"style_fields__11scn\",\"fields-container\":\"style_fields-container__2t20h\",\"fields-top\":\"style_fields-top__efq35\",\"input\":\"style_input__386Bv\",\"color-field\":\"style_color-field__1x0yk\",\"color-field_item\":\"style_color-field_item__kXl4a\",\"active\":\"style_active__18N9D\",\"tabs\":\"style_tabs__Ozs2R\",\"tabs_item\":\"style_tabs_item__3ppPT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"widgets-container\":\"style_widgets-container__3zYDX\",\"widgets-container__reverse\":\"style_widgets-container__reverse__KTecL\",\"widgets-items\":\"style_widgets-items__K_tpn\",\"center\":\"style_center__233q8\",\"widgets-item\":\"style_widgets-item__GmZpx\",\"widgets_more\":\"style_widgets_more__2gzF2\",\"widgets_handler\":\"style_widgets_handler__3Xc1L\",\"widgets_add\":\"style_widgets_add__1Z0H4\",\"widgets_next\":\"style_widgets_next__2BoEY\",\"widgets_next__reverse\":\"style_widgets_next__reverse__3BP4b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"style_title__3mX14\",\"hint\":\"style_hint__1yIdz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"calendar\":\"style_calendar__1Q2Ll\",\"calendar_month-switch\":\"style_calendar_month-switch__1_xwR\",\"calendar_month-switch_svg\":\"style_calendar_month-switch_svg__1V9E0\",\"calendar_month-switch_date\":\"style_calendar_month-switch_date__110eb\",\"calendar_month-switch_month\":\"style_calendar_month-switch_month__3wQ_f\",\"calendar_month-switch_year\":\"style_calendar_month-switch_year__YiMeR\",\"calendar_week-days\":\"style_calendar_week-days__3dYlH\",\"calendar_week-days_item\":\"style_calendar_week-days_item__1UGVY\",\"calendar_day\":\"style_calendar_day__ftudp\",\"disabled\":\"style_disabled__2A2rd\",\"select\":\"style_select__GRqWL\",\"now\":\"style_now__2I2F4\",\"calendar-container\":\"style_calendar-container__1sVEF\",\"calendar_title\":\"style_calendar_title__1ypYf\",\"calendar_select\":\"style_calendar_select__ofXqF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"total-amount\":\"style_total-amount__23uFI\",\"total-amount_title\":\"style_total-amount_title__3FIuX\",\"total-amount_content\":\"style_total-amount_content__173vO\",\"total-amount_juke\":\"style_total-amount_juke__1V53h\",\"total-amount_juke_text\":\"style_total-amount_juke_text__l-aD8\",\"total-amount_row\":\"style_total-amount_row__14VnF\",\"total-amount_count\":\"style_total-amount_count__2CTws\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"style_home__2IdAK\",\"pockets\":\"style_pockets__2xMzS\",\"pockets-wrapper\":\"style_pockets-wrapper__1rsQV\",\"pockets_content\":\"style_pockets_content__2SnDt\",\"pockets_tables\":\"style_pockets_tables__3MPHV\",\"utils\":\"style_utils__xEDPs\",\"utils_calendar\":\"style_utils_calendar__2XVJz\",\"profile\":\"style_profile__3Jsnd\",\"profile_photo\":\"style_profile_photo__Sm3W4\",\"profile_photo-container\":\"style_profile_photo-container__25Qsi\",\"profile_photo_edit-container\":\"style_profile_photo_edit-container__3bJKs\",\"total-amount_title\":\"style_total-amount_title__1TkuX\"};","export default __webpack_public_path__ + \"static/media/edit.17d10101.svg\";","import {\r\n    setCalendarDayAction,\r\n    setCalendarMonthAction,\r\n    setCalendarYearAction,\r\n    setSelectedOptionAction,\r\n} from \"../../../../../redux/actions/calendar\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport DateHelper from \"../../../../../utils/DateHelper\";\r\nimport { useTypedSelector } from \"../../../../../hooks/useTypedSelectors\";\r\n\r\nconst useCalendar = () => {\r\n    const dispatch = useDispatch();\r\n    const [\r\n        selectedDay,\r\n        selectedMonth,\r\n        selectedYear,\r\n        options,\r\n        selectedOption,\r\n        nowDateStamp,\r\n        prevDateStamp,\r\n    ] = useTypedSelector(({ calendar }) => [\r\n        calendar.selectedDay,\r\n        calendar.selectedMonth,\r\n        calendar.selectedYear,\r\n        calendar.options,\r\n        calendar.selectedOption,\r\n        calendar.nowDateStamp,\r\n        calendar.prevDateStamp,\r\n    ]);\r\n\r\n    const setSelectedOption = (option: string) =>\r\n        dispatch(setSelectedOptionAction(option));\r\n\r\n    const setSelectedDay = (day: number) => dispatch(setCalendarDayAction(day));\r\n\r\n    const setSelectedMonth = (month: number) =>\r\n        dispatch(setCalendarMonthAction(month));\r\n\r\n    const setSelectedYear = (year: number) =>\r\n        dispatch(setCalendarYearAction(year));\r\n    return {\r\n        selectedDay,\r\n        selectedMonth,\r\n        selectedYear,\r\n        setSelectedDay,\r\n        setSelectedMonth,\r\n        setSelectedYear,\r\n        setSelectedOption,\r\n        selectedDayName: DateHelper.dayRuNames[selectedDay],\r\n        selectedMonthName: DateHelper.monthRuNames[selectedMonth],\r\n        options,\r\n        nowDateStamp,\r\n        prevDateStamp,\r\n        selectedOption,\r\n    };\r\n};\r\n\r\nexport default useCalendar;\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { TransactionsActions } from \"../../../redux/actions/transactions\";\r\nimport { batch } from \"react-redux\";\r\nimport useCalendar from \"../components/Calendar/hooks/useCalendar\";\r\nimport { useTypedSelector } from \"../../../hooks/useTypedSelectors\";\r\n\r\nexport type TransactionFormValues = {\r\n    amount: number;\r\n    category: { id: number; value: any };\r\n    date: string;\r\n    id?: number;\r\n};\r\n\r\nconst useTransactions = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const { nowDateStamp, prevDateStamp, selectedOption } = useCalendar();\r\n\r\n    const [transactionItems, transactionGlobalItems, isLoaded] =\r\n        useTypedSelector(({ transactions }) => [\r\n            transactions.items,\r\n            transactions.globalItems,\r\n            transactions.isLoaded,\r\n        ]);\r\n\r\n    const addTransaction = React.useCallback(\r\n        async (data: TransactionFormValues) => {\r\n            dispatch(TransactionsActions.addTransaction(data));\r\n        },\r\n        [dispatch]\r\n    );\r\n\r\n    const updateTransaction = React.useCallback(\r\n        async (data: TransactionFormValues) => {\r\n            dispatch(TransactionsActions.updateTransaction(data));\r\n        },\r\n        [dispatch]\r\n    );\r\n\r\n    const deleteTransaction = React.useCallback(\r\n        async (id: number) => {\r\n            if (window.confirm(\"Вы точно хотите удалить запись?\")) {\r\n                dispatch(TransactionsActions.deleteTransaction(id));\r\n            }\r\n        },\r\n        [dispatch]\r\n    );\r\n\r\n    React.useEffect(() => {\r\n        batch(() => {\r\n            dispatch(TransactionsActions.fetchTransactions());\r\n            dispatch(TransactionsActions.fetchGlobalTransactions());\r\n        });\r\n    }, [dispatch, nowDateStamp, prevDateStamp, selectedOption]);\r\n\r\n    return {\r\n        transactionGlobalItems,\r\n        isLoaded,\r\n        transactionItems,\r\n        addTransaction,\r\n        updateTransaction,\r\n        deleteTransaction,\r\n    };\r\n};\r\n\r\nexport default useTransactions;\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useTypedSelector } from \"../../../hooks/useTypedSelectors\";\r\nimport CategoryActions from \"../../../redux/actions/categories\";\r\nimport useCalendar from \"../components/Calendar/hooks/useCalendar\";\r\n\r\nexport type CategoryFormValues = {\r\n    id?: number;\r\n    category_type: boolean;\r\n    name: string;\r\n};\r\n\r\nconst useCategories = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const { nowDateStamp, prevDateStamp, selectedOption } = useCalendar();\r\n\r\n    const [categoryItems, itemsTransactions, isLoaded] = useTypedSelector(\r\n        ({ categories }) => [\r\n            categories.items,\r\n            categories.itemsTransactions,\r\n            categories.isLoaded,\r\n        ]\r\n    );\r\n\r\n    const addCategory = React.useCallback(\r\n        async (data: CategoryFormValues) => {\r\n            dispatch(CategoryActions.addCategory(data));\r\n        },\r\n        [dispatch]\r\n    );\r\n\r\n    React.useEffect(() => {\r\n        dispatch(CategoryActions.fetchTransactionsByCategories());\r\n    }, [dispatch, nowDateStamp, prevDateStamp, selectedOption]);\r\n\r\n    React.useEffect(() => {\r\n        dispatch(CategoryActions.fetchCategories());\r\n    }, [dispatch]);\r\n\r\n    return {\r\n        categoryItems,\r\n        addCategory,\r\n        itemsTransactions,\r\n        isLoaded,\r\n    };\r\n};\r\n\r\nexport default useCategories;\r\n","import TransactionsModal from \"./TransactionsModal\";\r\n\r\nexport default TransactionsModal;","import { map } from \"lodash\";\r\nimport React from \"react\";\r\nimport { Field } from \"react-final-form\";\r\nimport {\r\n    DateField,\r\n    ModalForm,\r\n    SelectField,\r\n} from \"../../../../../../components/fields\";\r\nimport FormHelper from \"../../../../../../utils/validators/FormHelper\";\r\nimport { Require } from \"../../../../../../utils/validators/RequireValidator\";\r\nimport useCategories from \"../../../../hooks/useCategories\";\r\nimport useTransactions, {\r\n    TransactionFormValues,\r\n} from \"../../../../hooks/useTransactions\";\r\n\r\nimport styles from \"./style.module.scss\";\r\n\r\ntype Props = {\r\n    id?: number | null;\r\n    onClose: () => void;\r\n};\r\n\r\nconst TransactionsModal: React.FC<Props> = ({ id, onClose }) => {\r\n    const isEdit = !!id;\r\n\r\n    const { categoryItems } = useCategories();\r\n\r\n    const options = map(categoryItems, (categoryItem) => ({\r\n        id: categoryItem.id,\r\n        value: categoryItem.name,\r\n    }));\r\n    const { addTransaction, updateTransaction } = useTransactions();\r\n\r\n    const onSubmit = (data: TransactionFormValues) => {\r\n        if (isEdit) {\r\n            data = { ...data, id };\r\n        }\r\n        const func = isEdit ? updateTransaction : addTransaction;\r\n        func(data);\r\n    };\r\n\r\n    return (\r\n        <ModalForm\r\n            title={`${isEdit ? \"Изменить\" : \"Добавить\"} данные`}\r\n            buttonText={isEdit ? \"Сохранить\" : \"Добавить\"}\r\n            onSubmit={onSubmit}\r\n            onClose={onClose}\r\n        >\r\n            <div className={styles[\"fields-container\"]}>\r\n                <div className={styles.fields}>\r\n                    <Field\r\n                        name=\"date\"\r\n                        render={(fieldProps) => (\r\n                            <DateField fieldProps={fieldProps} />\r\n                        )}\r\n                        defaultValue={new Date().toISOString().split(\"T\")[0]}\r\n                    />\r\n                </div>\r\n                <div className={styles.category}>\r\n                    <Field\r\n                        name=\"category\"\r\n                        render={(fieldProps) => (\r\n                            <SelectField\r\n                                placeholder={\"Категория\"}\r\n                                options={options}\r\n                                fieldProps={fieldProps.input}\r\n                            />\r\n                        )}\r\n                        validate={(value, allValues, meta) => {\r\n                            FormHelper.validate([\r\n                                new Require({\r\n                                    msg: \"Категория обязательное поле\",\r\n                                }),\r\n                            ])(value?.value || undefined, allValues, meta);\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div className={styles.fields}>\r\n                    <Field\r\n                        name=\"amount\"\r\n                        component=\"input\"\r\n                        type=\"number\"\r\n                        placeholder=\"Сумма\"\r\n                        className={styles.amount}\r\n                        validate={FormHelper.validate([\r\n                            new Require({\r\n                                msg: \"Сумма обязательное поле\",\r\n                            }),\r\n                        ])}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </ModalForm>\r\n    );\r\n};\r\n\r\nexport default TransactionsModal;\r\n","import TransactionsTable from \"./TransactionsTable\";\r\n\r\nexport default TransactionsTable;","import React from \"react\";\r\nimport { map } from \"lodash\";\r\nimport cn from \"classnames\";\r\nimport { ActivityIndicator, ButtonText } from \"../../../../components\";\r\nimport styles from \"./style.module.scss\";\r\nimport useTransactions from \"../../hooks/useTransactions\";\r\nimport { TTransactionItem } from \"../../../../redux/actions/transactions\";\r\nimport { TransactionsModal } from \"./components\";\r\n\r\nconst countTableView = 9;\r\nconst cellHeight = 59;\r\n\r\nconst TransactionsTable = () => {\r\n    const tableRef = React.useRef<HTMLDivElement>(null);\r\n    const [startRows, setStartRows] = React.useState(0);\r\n    const { transactionItems, deleteTransaction, isLoaded } = useTransactions();\r\n\r\n    const [showModal, setShowModal] = React.useState(false);\r\n    const idItemRef = React.useRef<number | null>(null);\r\n\r\n    const addClickHandler = () => {\r\n        idItemRef.current = null;\r\n        setShowModal(true);\r\n    };\r\n\r\n    const editClickHandler = (id: number) => {\r\n        idItemRef.current = id;\r\n        setShowModal(true);\r\n    };\r\n\r\n    const scrollHandler = (e: any) => {\r\n        setStartRows(Math.floor(e.currentTarget.scrollTop / cellHeight));\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        const table = tableRef.current;\r\n        table?.addEventListener(\"scroll\", scrollHandler);\r\n\r\n        return () => table?.removeEventListener(\"scroll\", scrollHandler);\r\n    }, []);\r\n    return (\r\n        <div>\r\n            {showModal && (\r\n                <TransactionsModal\r\n                    id={idItemRef.current}\r\n                    onClose={() => setShowModal(false)}\r\n                />\r\n            )}\r\n            <table className={styles.table}>\r\n                <thead className={styles.table_header}>\r\n                    <tr>\r\n                        <th className={styles.table_width}>даты</th>\r\n                        <th className={styles.table_width}>категория</th>\r\n                        <th className={styles.table_width}>суммы</th>\r\n                        <th className={styles.table_width}>\r\n                            <div\r\n                                style={{\r\n                                    display: \"flex\",\r\n                                    justifyContent: \"center\",\r\n                                }}\r\n                            >\r\n                                <ButtonText onClick={addClickHandler}>\r\n                                    Добавить\r\n                                </ButtonText>\r\n                            </div>\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n            </table>\r\n            <div className={styles.table_body_scroll} ref={tableRef}>\r\n                {isLoaded ? (\r\n                    !!transactionItems.length ? (\r\n                        <table className={styles.table_body}>\r\n                            <tbody>\r\n                                <tr\r\n                                    style={{\r\n                                        height: cellHeight * startRows,\r\n                                    }}\r\n                                ></tr>\r\n                                {map(\r\n                                    transactionItems.slice(\r\n                                        startRows,\r\n                                        countTableView + startRows\r\n                                    ),\r\n                                    (transactionItem: TTransactionItem) => (\r\n                                        <tr\r\n                                            key={transactionItem.id}\r\n                                            className={cn({\r\n                                                [styles.income]:\r\n                                                    transactionItem.category\r\n                                                        .is_income,\r\n                                            })}\r\n                                        >\r\n                                            <td\r\n                                                className={`${styles.table_cell} ${styles.table_date} ${styles.table_width}`}\r\n                                            >\r\n                                                {new Date(\r\n                                                    transactionItem.transaction_date *\r\n                                                        1000\r\n                                                ).toLocaleDateString()}\r\n                                            </td>\r\n                                            <td\r\n                                                className={`${styles.table_cell} ${styles.table_width}`}\r\n                                            >\r\n                                                {transactionItem.category.name}\r\n                                            </td>\r\n                                            <td\r\n                                                className={`${styles.table_cell} ${styles.table_amount} ${styles.table_width}`}\r\n                                            >\r\n                                                {transactionItem.amount}\r\n                                            </td>\r\n                                            <td\r\n                                                className={`${styles.table_cell} ${styles.table_width}`}\r\n                                            >\r\n                                                <svg\r\n                                                    width=\"22\"\r\n                                                    height=\"22\"\r\n                                                    viewBox=\"0 0 22 22\"\r\n                                                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                                                    className={\r\n                                                        styles.table_edit\r\n                                                    }\r\n                                                    onClick={() =>\r\n                                                        editClickHandler(\r\n                                                            transactionItem.id\r\n                                                        )\r\n                                                    }\r\n                                                >\r\n                                                    <path\r\n                                                        fillRule=\"evenodd\"\r\n                                                        clipRule=\"evenodd\"\r\n                                                        d=\"M21.7 5.7L11.7 15.7C11.5 15.9 11.3 16 11 16H7C6.4 16 6 15.6 6 15V11C6 10.7 6.1 10.5 6.3 10.3L16.3 0.3C16.7 -0.1 17.3 -0.1 17.7 0.3L21.7 4.3C22.1 4.7 22.1 5.3 21.7 5.7ZM20 13.7V19C20 20.7 18.7 22 17 22H3C1.3 22 0 20.7 0 19V5C0 3.3 1.3 2 3 2H8.3C8.9 2 9.3 2.4 9.3 3C9.3 3.6 8.9 4 8.3 4H3C2.4 4 2 4.4 2 5V19C2 19.6 2.4 20 3 20H17C17.6 20 18 19.6 18 19V13.7C18 13.1 18.4 12.7 19 12.7C19.6 12.7 20 13.1 20 13.7ZM17 2.4L19.6 5L10.6 14H8V11.4L17 2.4Z\"\r\n                                                    />\r\n                                                </svg>\r\n\r\n                                                <svg\r\n                                                    width=\"20\"\r\n                                                    height=\"22\"\r\n                                                    viewBox=\"0 0 20 22\"\r\n                                                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                                                    className={\r\n                                                        styles.table_delete\r\n                                                    }\r\n                                                    onClick={() =>\r\n                                                        deleteTransaction(\r\n                                                            transactionItem.id\r\n                                                        )\r\n                                                    }\r\n                                                >\r\n                                                    <path\r\n                                                        fillRule=\"evenodd\"\r\n                                                        clipRule=\"evenodd\"\r\n                                                        d=\"M19 4H15V3C15 1.3 13.7 0 12 0H8C6.3 0 5 1.3 5 3V4H1C0.4 4 0 4.4 0 5C0 5.6 0.4 6 1 6H2V19C2 20.7 3.3 22 5 22H15C16.7 22 18 20.7 18 19V6H19C19.6 6 20 5.6 20 5C20 4.4 19.6 4 19 4ZM7 3C7 2.4 7.4 2 8 2H12C12.6 2 13 2.4 13 3V4H7V3ZM15 20C15.6 20 16 19.6 16 19V6H4V19C4 19.6 4.4 20 5 20H15ZM9 10V16C9 16.6 8.6 17 8 17C7.4 17 7 16.6 7 16V10C7 9.4 7.4 9 8 9C8.6 9 9 9.4 9 10ZM13 16V10C13 9.4 12.6 9 12 9C11.4 9 11 9.4 11 10V16C11 16.6 11.4 17 12 17C12.6 17 13 16.6 13 16Z\"\r\n                                                    />\r\n                                                </svg>\r\n                                            </td>\r\n                                        </tr>\r\n                                    )\r\n                                )}\r\n\r\n                                <tr\r\n                                    style={{\r\n                                        height:\r\n                                            cellHeight *\r\n                                            (transactionItems.length -\r\n                                                (countTableView + startRows)),\r\n                                    }}\r\n                                ></tr>\r\n                            </tbody>\r\n                        </table>\r\n                    ) : (\r\n                        <div className={styles.table_empty}>\r\n                            Записей пока нет\r\n                        </div>\r\n                    )\r\n                ) : (\r\n                    <ActivityIndicator />\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TransactionsTable;\r\n","import Tabs from './Tabs';\r\n\r\nexport default Tabs;","import React from \"react\";\r\nimport { map } from \"lodash\";\r\nimport cn from \"classnames\";\r\nimport { FieldInputProps } from \"react-final-form\";\r\n\r\nimport styles from \"./style.module.scss\";\r\n\r\ntype TabProps = {\r\n    id: number;\r\n    value: any;\r\n    label: string;\r\n};\r\n\r\ntype TabsProps = {\r\n    items: TabProps[];\r\n    fieldProps: FieldInputProps<any>;\r\n};\r\n\r\nconst Tabs: React.FC<TabsProps> = ({ items, fieldProps }) => {\r\n    const [selectedTab, setSelectedTab] = React.useState(items[0]);\r\n\r\n    const onClickHandler = (item: TabProps) => {\r\n        setSelectedTab(item);\r\n        fieldProps.onChange(item.value);\r\n    };\r\n\r\n    return (\r\n        <div className={styles.tabs}>\r\n            {map(items, (item) => (\r\n                <span\r\n                    key={item.id}\r\n                    className={cn(styles.tabs_item, {\r\n                        [styles.tabs_item__active]: selectedTab.id === item.id,\r\n                    })}\r\n                    onClick={() => onClickHandler(item)}\r\n                >\r\n                    {item.label}\r\n                </span>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Tabs;\r\n","import SummaryModal from \"./SummaryModal\";\r\n\r\nexport default SummaryModal;","import React from \"react\";\r\nimport { Field } from \"react-final-form\";\r\nimport { ModalForm } from \"../../../../../../components/fields\";\r\nimport FormHelper from \"../../../../../../utils/validators/FormHelper\";\r\nimport { Range } from \"../../../../../../utils/validators/RangeValidator\";\r\nimport { Require } from \"../../../../../../utils/validators/RequireValidator\";\r\nimport useCategories, { CategoryFormValues } from \"../../../../hooks/useCategories\";\r\nimport { Tabs } from \"./Components\";\r\n\r\nimport styles from \"./style.module.scss\";\r\n\r\ntype Props = {\r\n    onClose: () => void;\r\n};\r\n\r\nconst SummaryModal: React.FC<Props> = ({ onClose }) => {\r\n    const { addCategory } = useCategories();\r\n\r\n    const onSubmit = (data: CategoryFormValues) => {\r\n        addCategory(data);\r\n    };\r\n\r\n    const tabs = [\r\n        {\r\n            id: 1,\r\n            label: \"Доход\",\r\n            value: true,\r\n        },\r\n        {\r\n            id: 2,\r\n            label: \"Расход\",\r\n            value: false,\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <ModalForm\r\n            title=\"Добавить данные\"\r\n            buttonText=\"Добавить\"\r\n            onSubmit={onSubmit}\r\n            onClose={onClose}\r\n        >\r\n            <div className={styles[\"fields-container\"]}>\r\n                <div className={styles[\"fields-tabs\"]}>\r\n                    <Field\r\n                        name=\"category_type\"\r\n                        render={(fieldProps) => (\r\n                            <Tabs items={tabs} fieldProps={fieldProps.input} />\r\n                        )}\r\n                    />\r\n                </div>\r\n                <Field\r\n                    name=\"name\"\r\n                    component=\"input\"\r\n                    type=\"text\"\r\n                    placeholder=\"Название\"\r\n                    className={styles.input}\r\n                    validate={FormHelper.validate([\r\n                        new Require({ msg: \"Название обязательно\" }),\r\n                        new Range({\r\n                            min: {\r\n                                count: 2,\r\n                                msg: \"Название не может быть меньше чем 2 символа\",\r\n                            },\r\n                            max: {\r\n                                count: 255,\r\n                                msg: \"Название не может быть больше чем 255 символа\",\r\n                            },\r\n                        }),\r\n                    ])}\r\n                />\r\n            </div>\r\n        </ModalForm>\r\n    );\r\n};\r\n\r\nexport default SummaryModal;\r\n","import Summary from \"./Summary\";\r\n\r\nexport default Summary;","import React from \"react\";\r\nimport { ActivityIndicator, ButtonText } from \"../../../../components\";\r\nimport { map } from \"lodash\";\r\nimport cn from \"classnames\";\r\n\r\nimport styles from \"./style.module.scss\";\r\nimport useCategories from \"../../hooks/useCategories\";\r\nimport { SummaryModal } from \"./components\";\r\n\r\nconst Summary = () => {\r\n    const { itemsTransactions, isLoaded } = useCategories();\r\n\r\n    const [showModal, setShowModal] = React.useState(false);\r\n\r\n    const addClickHandler = () => {\r\n        setShowModal(true);\r\n    };\r\n\r\n    const items = itemsTransactions.filter((item) => item.transactions_sum > 0);\r\n\r\n    return (\r\n        <div className={styles.summary}>\r\n            {showModal && <SummaryModal onClose={() => setShowModal(false)} />}\r\n            <div className={styles.summary_header}>\r\n                <h3>Суммарно</h3>\r\n                <ButtonText onClick={addClickHandler}>\r\n                    Добавить категорию\r\n                </ButtonText>\r\n            </div>\r\n            <table className={`${styles.table} ${styles.table_head}`}>\r\n                <thead>\r\n                    <tr>\r\n                        <th className={styles.table_cell}>Расходы</th>\r\n                        <th className={styles.table_cell}>Сумма</th>\r\n                    </tr>\r\n                </thead>\r\n            </table>\r\n            <div className={styles.table_scroll}>\r\n                {isLoaded ? (\r\n                    !!items.length ? (\r\n                        <table className={styles.table}>\r\n                            <tbody>\r\n                                {map(items, (categoryItem) => (\r\n                                    <tr\r\n                                        key={categoryItem.id}\r\n                                        className={cn(styles.table_row, {\r\n                                            [styles.income]:\r\n                                                categoryItem.is_income,\r\n                                        })}\r\n                                    >\r\n                                        <td\r\n                                            className={`${styles.table_cell} ${styles.table_category}`}\r\n                                        >\r\n                                            {categoryItem.name}\r\n                                        </td>\r\n                                        <td\r\n                                            className={`${styles.table_cell} ${styles.table_amount}`}\r\n                                        >\r\n                                            {categoryItem.transactions_sum}\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </table>\r\n                    ) : (\r\n                        <div className={styles.table_empty}>\r\n                            Записей пока нет\r\n                        </div>\r\n                    )\r\n                ) : (\r\n                    <ActivityIndicator />\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Summary;\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useTypedSelector } from \"../../../hooks/useTypedSelectors\";\r\nimport { WidgetsActions } from \"../../../redux/actions/widgets\";\r\nimport useCalendar from \"../components/Calendar/hooks/useCalendar\";\r\n\r\nexport type WidgetFormValues = {\r\n    category: {\r\n        id: number;\r\n        value: string;\r\n    };\r\n    color: {\r\n        id: number;\r\n        value: string;\r\n    };\r\n    isMore: boolean;\r\n    limit: string;\r\n    period: {\r\n        id: number;\r\n        value: \"День\" | \"Неделя\" | \"Месяц\" | \"Год\";\r\n    };\r\n};\r\n\r\nconst useWidgets = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const { nowDateStamp, prevDateStamp, selectedOption } = useCalendar();\r\n\r\n    const [widgetItems, widgetColors, isLoaded] = useTypedSelector(\r\n        ({ widgets }) => [widgets.items, widgets.colors, widgets.isLoaded]\r\n    );\r\n\r\n    const addWidget = React.useCallback(\r\n        async (data: WidgetFormValues) => {\r\n            dispatch(WidgetsActions.addWidgetAction(data));\r\n        },\r\n        [dispatch]\r\n    );\r\n\r\n    const deleteWidget = React.useCallback(\r\n        async (id: number) => {\r\n            dispatch(WidgetsActions.deleteWidgetAction(id));\r\n        },\r\n        [dispatch]\r\n    );\r\n\r\n    React.useEffect(() => {\r\n        dispatch(WidgetsActions.fetchWidgetColors());\r\n    }, [dispatch]);\r\n\r\n    React.useEffect(() => {\r\n        dispatch(WidgetsActions.fetchWidgets());\r\n    }, [dispatch, nowDateStamp, prevDateStamp, selectedOption]);\r\n\r\n    return {\r\n        widgetItems,\r\n        widgetColors,\r\n        isLoaded,\r\n        addWidget,\r\n        deleteWidget,\r\n    };\r\n};\r\n\r\nexport default useWidgets;\r\n","import Widget from \"./Widget\";\r\n\r\nexport default Widget;","import React from \"react\";\r\n\r\nimport styles from \"./style.module.scss\";\r\n\r\nexport type Props = {\r\n    color: string;\r\n    isMore: boolean;\r\n    period: \"День\" | \"Неделя\" | \"Месяц\" | \"Год\";\r\n    limit: number;\r\n    transactionsSum: number;\r\n    categoryName: string;\r\n    onClick: () => void;\r\n};\r\n\r\nconst Widget: React.FC<Props> = ({\r\n    color,\r\n    isMore,\r\n    period,\r\n    limit,\r\n    transactionsSum,\r\n    categoryName,\r\n    onClick,\r\n}) => {\r\n\r\n    return (\r\n        <div className={styles.widget} style={{ background: color + \"22\" }}>\r\n            <svg\r\n                width=\"20\"\r\n                height=\"20\"\r\n                viewBox=\"0 0 20 20\"\r\n                fill=\"none\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                className={styles.widget_delete}\r\n                onClick={onClick}\r\n            >\r\n                <path\r\n                    d=\"M18.8639 10.1622L11.0968 17.5442C9.90192 18.6799 8.36558 19.1667 6.82924 19.1667C5.2929 19.1667 3.75656 18.5988 2.56163 17.5442C0.257125 15.354 0.257125 11.7035 2.56163 9.51327L10.414 2.05014C11.1822 1.32005 12.2918 0.833328 13.4014 0.833328C14.5109 0.833328 15.6205 1.23893 16.3887 2.05014C18.0957 3.67256 18.0957 6.18731 16.3887 7.80973L8.53628 15.2729C7.51206 16.2463 5.89037 16.2463 4.95149 15.2729C4.52473 14.8673 4.26868 14.2183 4.26868 13.5693C4.26868 12.9203 4.52473 12.2714 5.03684 11.8658L12.2918 4.9705C12.6332 4.64601 13.1453 4.64601 13.4867 4.9705C13.8281 5.29498 13.8281 5.78171 13.4867 6.10619L6.23177 13.0015C6.06107 13.1637 5.97572 13.326 5.97572 13.5693C5.97572 13.8127 6.06107 13.9749 6.23177 14.1372C6.57318 14.4616 7.0853 14.4616 7.4267 14.1372L15.2791 6.67404C16.3033 5.70058 16.3033 4.15929 15.2791 3.26696C14.3402 2.37463 12.6332 2.37463 11.6943 3.26696L3.84191 10.7301C2.13487 12.3525 2.13487 14.8673 3.84191 16.4897C5.54896 18.1121 8.19487 18.1121 9.90192 16.4897L17.7543 9.02654C18.0957 8.70206 18.6078 8.70206 18.9492 9.02654C19.2907 9.35103 19.2053 9.83775 18.8639 10.1622Z\"\r\n                    fill=\"black\"\r\n                />\r\n            </svg>\r\n\r\n            <div className={styles.widget_left}>\r\n                <div className={styles.widget_img}>\r\n                    <svg\r\n                        width=\"24\"\r\n                        height=\"36\"\r\n                        viewBox=\"0 0 24 36\"\r\n                        fill=\"none\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                    >\r\n                        <path\r\n                            fillRule=\"evenodd\"\r\n                            clipRule=\"evenodd\"\r\n                            d=\"M23.4782 12.237C23.4782 5.93709 18.313 0.782608 12 0.782608C5.68695 0.782608 0.521729 5.93709 0.521729 12.237C0.521729 15.9597 2.24347 19.2528 4.96955 21.2573L3.39129 33.5708C3.24782 34.1435 3.53477 34.7163 3.96521 35.0026C4.39564 35.289 4.96955 35.289 5.54347 35.0026L12 31.1368L18.4565 35.0026C18.6 35.1458 18.8869 35.1458 19.1739 35.1458C19.4609 35.1458 19.7478 35.0026 19.8913 34.8594C20.3217 34.5731 20.6087 34.0004 20.4652 33.4276L18.8869 21.2573C21.7565 19.2528 23.4782 15.9597 23.4782 12.237ZM3.39129 12.237C3.39129 7.51207 7.26521 3.64621 12 3.64621C16.7348 3.64621 20.6087 7.51207 20.6087 12.237C20.6087 16.9619 16.7348 20.8278 12 20.8278C7.26521 20.8278 3.39129 16.9619 3.39129 12.237ZM12.7174 28.2732L17.3087 30.9936L16.3043 22.8324C15.013 23.4051 13.5783 23.6914 12 23.6914C10.4217 23.6914 8.98695 23.4051 7.69564 22.8324L6.69129 30.9936L11.2826 28.2732C11.713 27.9868 12.2869 27.9868 12.7174 28.2732Z\"\r\n                            fill={color}\r\n                        />\r\n                    </svg>\r\n                </div>\r\n                <p className={styles.widget_validity}>{period}</p>\r\n            </div>\r\n            <div className={styles.widget_right}>\r\n                <p className={styles.widget_title}>\r\n                    Тратить на {categoryName.toLowerCase()} {isMore ? 'больше' : 'меньше'} {limit} рублей\r\n                </p>\r\n                <p className={styles.widget_sum} style={{ color: color }}>\r\n                    {transactionsSum}/{limit}\r\n                </p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Widget;\r\n","import React from \"react\";\r\nimport { Field, FieldInputProps } from \"react-final-form\";\r\nimport cn from \"classnames\";\r\nimport { map, filter } from \"lodash\";\r\n\r\nimport useWidgets, { WidgetFormValues } from \"../../../../hooks/useWidgets\";\r\nimport { ModalForm, SelectField } from \"../../../../../../components/fields\";\r\nimport useCategories from \"../../../../hooks/useCategories\";\r\n\r\nimport styles from \"./style.module.scss\";\r\nimport { TWidgetColor } from \"../../../../../../redux/actions/widgets\";\r\nimport FormHelper from \"../../../../../../utils/validators/FormHelper\";\r\nimport { Require } from \"../../../../../../utils/validators/RequireValidator\";\r\n\r\ntype Props = {\r\n    onClose: () => void;\r\n};\r\n\r\nconst optionsPeriods = [\r\n    {\r\n        id: 1,\r\n        value: \"День\",\r\n    },\r\n    {\r\n        id: 2,\r\n        value: \"Неделя\",\r\n    },\r\n    {\r\n        id: 3,\r\n        value: \"Месяц\",\r\n    },\r\n    {\r\n        id: 4,\r\n        value: \"Год\",\r\n    },\r\n];\r\n\r\ntype ColorFieldProps = {\r\n    colors: TWidgetColor[];\r\n    fieldProps: FieldInputProps<any>;\r\n};\r\n\r\nconst ColorField: React.FC<ColorFieldProps> = ({ colors, fieldProps }) => {\r\n    const onClickHandle = (color: TWidgetColor) => {\r\n        fieldProps.onChange(color);\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        if (!!colors.length && !fieldProps.value) {\r\n            fieldProps.onChange(colors[0]);\r\n        }\r\n    }, [fieldProps, colors]);\r\n    return (\r\n        <div className={styles[\"color-field\"]}>\r\n            {map(colors, (color) => (\r\n                <span\r\n                    key={color.id}\r\n                    onClick={() => onClickHandle(color)}\r\n                    className={cn(styles[\"color-field_item\"], {\r\n                        [styles.active]: color.id === fieldProps.value.id,\r\n                    })}\r\n                    style={{ background: color.value }}\r\n                ></span>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst TabsField: React.FC<{ fieldProps: FieldInputProps<any> }> = ({\r\n    fieldProps,\r\n}) => {\r\n    const [activeTab, setActiveTab] = React.useState(false);\r\n\r\n    const moreHandler = () => {\r\n        setActiveTab(true);\r\n        fieldProps.onChange(true);\r\n    };\r\n\r\n    const lessHandler = () => {\r\n        setActiveTab(false);\r\n        fieldProps.onChange(false);\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        if (!fieldProps.value) {\r\n            fieldProps.onChange(false);\r\n        }\r\n    }, [fieldProps]);\r\n    return (\r\n        <div className={styles.tabs}>\r\n            <div\r\n                className={cn(styles.tabs_item, {\r\n                    [styles.active]: activeTab,\r\n                })}\r\n                onClick={moreHandler}\r\n            >\r\n                Больше\r\n            </div>\r\n            <div\r\n                className={cn(styles.tabs_item, {\r\n                    [styles.active]: !activeTab,\r\n                })}\r\n                onClick={lessHandler}\r\n            >\r\n                Меньше\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst WidgetsModal: React.FC<Props> = ({ onClose }) => {\r\n    const { widgetColors, addWidget } = useWidgets();\r\n\r\n    const { categoryItems } = useCategories();\r\n\r\n    const categoryOptions = map(\r\n        filter(categoryItems, (categoryItem) => !categoryItem.is_income),\r\n        (categoryItem) => ({\r\n            id: categoryItem.id,\r\n            value: categoryItem.name,\r\n        })\r\n    );\r\n\r\n    const onSubmit = (data: WidgetFormValues) => {\r\n        addWidget(data);\r\n    };\r\n\r\n    return (\r\n        <ModalForm\r\n            title=\"Добавить данные\"\r\n            buttonText=\"Добавить\"\r\n            onSubmit={onSubmit}\r\n            onClose={onClose}\r\n        >\r\n            <div className={styles[\"fields-container\"]}>\r\n                <div className={styles[\"fields-top\"]}>\r\n                    <Field\r\n                        name=\"color\"\r\n                        render={(fieldProps) => (\r\n                            <ColorField\r\n                                colors={widgetColors}\r\n                                fieldProps={fieldProps.input}\r\n                            />\r\n                        )}\r\n                    />\r\n                    <div className={styles[\"fields\"]}>\r\n                        <Field\r\n                            name=\"limit\"\r\n                            component=\"input\"\r\n                            type=\"number\"\r\n                            placeholder=\"Лимит\"\r\n                            className={styles.input}\r\n                            validate={FormHelper.validate([\r\n                                new Require({ msg: \"Лимит обязательное поле\" }),\r\n                            ])}\r\n                        />\r\n                    </div>\r\n                    <div className={styles[\"fields\"]}>\r\n                        <Field\r\n                            name=\"category\"\r\n                            render={(fieldProps) => (\r\n                                <SelectField\r\n                                    placeholder=\"Категория\"\r\n                                    options={categoryOptions}\r\n                                    fieldProps={fieldProps.input}\r\n                                />\r\n                            )}\r\n                            validate={(value, allValues, meta) => {\r\n                                FormHelper.validate([\r\n                                    new Require({\r\n                                        msg: \"Категория обязательное поле\",\r\n                                    }),\r\n                                ])(value?.value, allValues, meta);\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    <div className={styles[\"fields\"]}>\r\n                        <Field\r\n                            name=\"period\"\r\n                            render={(fieldProps) => (\r\n                                <SelectField\r\n                                    placeholder=\"Срок\"\r\n                                    options={optionsPeriods}\r\n                                    fieldProps={fieldProps.input}\r\n                                />\r\n                            )}\r\n                            validate={(value, allValues, meta) => {\r\n                                FormHelper.validate([\r\n                                    new Require({\r\n                                        msg: \"Срок обязательное поле\",\r\n                                    }),\r\n                                ])(value?.value, allValues, meta);\r\n                            }}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <Field\r\n                    name=\"isMore\"\r\n                    render={(fieldProps) => (\r\n                        <TabsField fieldProps={fieldProps.input} />\r\n                    )}\r\n                />\r\n            </div>\r\n        </ModalForm>\r\n    );\r\n};\r\n\r\nexport default WidgetsModal;\r\n","import WidgetsModal from \"./WidgetsModal\";\r\n\r\nexport default WidgetsModal;","import GraphsModal from \"./GraphsModal\";\r\n\r\nexport default GraphsModal;","import React from \"react\";\r\nimport { ModalContainer } from \"../../../../../../components\";\r\nimport { RadialChart, Hint } from \"react-vis\";\r\n\r\nimport styles from \"./style.module.scss\";\r\nimport useCategories from \"../../../../hooks/useCategories\";\r\nimport { map } from \"lodash\";\r\n\r\ntype Props = {\r\n    onClose: () => void;\r\n};\r\n\r\nconst GraphsModal: React.FC<Props> = ({ onClose }) => {\r\n    const [state, setState] = React.useState<any>(false);\r\n    const [values, setValues] = React.useState<any[]>([]);\r\n\r\n    const { itemsTransactions } = useCategories();\r\n\r\n    React.useEffect(() => {\r\n        setValues(\r\n            map(itemsTransactions, (item) => ({\r\n                id: item.id,\r\n                name: item.name,\r\n                transactionsSum: item.transactions_sum,\r\n            }))\r\n        );\r\n    }, [itemsTransactions]);\r\n    return (\r\n        <ModalContainer onClose={onClose}>\r\n            <h2 className={styles.title}>График</h2>\r\n            <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                <RadialChart\r\n                    innerRadius={120}\r\n                    radius={175}\r\n                    getAngle={(d) => d.transactionsSum}\r\n                    onValueClick={(data) => console.log(data)}\r\n                    data={values}\r\n                    onValueMouseOver={(v) => setState(v)}\r\n                    onSeriesMouseOut={() => setState(false)}\r\n                    width={360}\r\n                    height={360}\r\n                >\r\n                    {state !== false && (\r\n                        <Hint value={state}>\r\n                            <div className={styles.hint}>\r\n                                {state.name}\r\n                            </div>\r\n                        </Hint>\r\n                    )}\r\n                </RadialChart>\r\n            </div>\r\n        </ModalContainer>\r\n    );\r\n};\r\n\r\nexport default GraphsModal;\r\n","import Widgets from \"./Widgets\";\r\n\r\nexport default Widgets;","import React from \"react\";\r\nimport useWidgets from \"../../hooks/useWidgets\";\r\nimport { Widget, WidgetsModal } from \"./components\";\r\nimport { map } from \"lodash\";\r\n\r\nimport styles from \"./style.module.scss\";\r\nimport cn from \"classnames\";\r\nimport GraphsModal from \"./components/GraphsModal\";\r\nimport { ActivityIndicator } from \"../../../../components\";\r\n\r\nconst countShow = 4;\r\n\r\nconst Widgets = () => {\r\n    const { widgetItems, deleteWidget, isLoaded } = useWidgets();\r\n    const [showIndex, setShowIndex] = React.useState(0);\r\n\r\n    const onClickHandle = () => {\r\n        setShowIndex((prev) => (prev > 0 ? 0 : 2));\r\n    };\r\n    const widgetsEmpty = widgetItems.length === 0;\r\n\r\n    const [showModalForm, setShowModalForm] = React.useState(false);\r\n    const [showModalGraphs, setShowModalGraphs] = React.useState(false);\r\n    return (\r\n        <div className={cn(styles[\"widgets-container\"])}>\r\n            {showModalForm && (\r\n                <WidgetsModal onClose={() => setShowModalForm(false)} />\r\n            )}\r\n            {showModalGraphs && (\r\n                <GraphsModal onClose={() => setShowModalGraphs(false)} />\r\n            )}\r\n            <div\r\n                className={cn(styles[\"widgets-items\"], {\r\n                    [styles.center]: widgetsEmpty,\r\n                })}\r\n            >\r\n                {isLoaded ? (\r\n                    <>\r\n                        {!widgetsEmpty ? (\r\n                            <>\r\n                                {map(\r\n                                    widgetItems.slice(\r\n                                        showIndex,\r\n                                        showIndex + countShow\r\n                                    ),\r\n                                    (widgetItem) => (\r\n                                        <div\r\n                                            className={styles[\"widgets-item\"]}\r\n                                            key={widgetItem.id}\r\n                                        >\r\n                                            <Widget\r\n                                                color={widgetItem.color}\r\n                                                isMore={widgetItem.is_more}\r\n                                                period={widgetItem.period}\r\n                                                limit={widgetItem.limit}\r\n                                                transactionsSum={\r\n                                                    widgetItem.transactions_sum\r\n                                                }\r\n                                                categoryName={\r\n                                                    widgetItem.category.name\r\n                                                }\r\n                                                onClick={() =>\r\n                                                    deleteWidget(widgetItem.id)\r\n                                                }\r\n                                            />\r\n                                        </div>\r\n                                    )\r\n                                )}\r\n                            </>\r\n                        ) : (\r\n                            <p>Виджетов нет</p>\r\n                        )}\r\n                    </>\r\n                ) : (\r\n                    <ActivityIndicator />\r\n                )}\r\n            </div>\r\n\r\n            <div className={styles[\"widgets_more\"]}>\r\n                {widgetItems.length > countShow && (\r\n                    <button\r\n                        className={cn(styles.widgets_next, {\r\n                            [styles[\"widgets_next__reverse\"]]: showIndex > 0,\r\n                        })}\r\n                        onClick={onClickHandle}\r\n                    >\r\n                        <svg\r\n                            width=\"184\"\r\n                            height=\"24\"\r\n                            viewBox=\"0 0 184 24\"\r\n                            fill=\"none\"\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                        >\r\n                            <path\r\n                                d=\"M183.061 13.0606C183.646 12.4749 183.646 11.5251 183.061 10.9393L173.515 1.39338C172.929 0.807596 171.979 0.807596 171.393 1.39338C170.808 1.97917 170.808 2.92892 171.393 3.5147L179.879 12L171.393 20.4853C170.808 21.0711 170.808 22.0208 171.393 22.6066C171.979 23.1924 172.929 23.1924 173.515 22.6066L183.061 13.0606ZM1.31134e-07 13.5L182 13.5L182 10.5L-1.31134e-07 10.5L1.31134e-07 13.5Z\"\r\n                                fill=\"#5D5FEF\"\r\n                            />\r\n                        </svg>\r\n                    </button>\r\n                )}\r\n                <div className={styles.widgets_handler}>\r\n                    <button\r\n                        className={styles.widgets_add}\r\n                        onClick={() => setShowModalGraphs(true)}\r\n                    >\r\n                        Графики\r\n                    </button>\r\n                    <button\r\n                        className={styles.widgets_add}\r\n                        onClick={() => setShowModalForm(true)}\r\n                    >\r\n                        Добавить виджет\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Widgets;\r\n","import Calendar from \"./Calendar\";\r\n\r\nexport default Calendar;","import React from \"react\";\r\nimport { range, map } from \"lodash\";\r\nimport cn from \"classnames\";\r\n\r\nimport DateHelper from \"../../../../utils/DateHelper\";\r\n\r\nimport styles from \"./style.module.scss\";\r\nimport { Select } from \"../../../../components\";\r\nimport useCalendar from \"./hooks/useCalendar\";\r\n\r\nconst totalDays = 42;\r\n\r\nconst Calendar = () => {\r\n    const {\r\n        selectedDay,\r\n        selectedMonth,\r\n        selectedYear,\r\n        setSelectedDay,\r\n        setSelectedMonth,\r\n        setSelectedYear,\r\n        options,\r\n        setSelectedOption,\r\n    } = useCalendar();\r\n    const nowDate = new Date();\r\n\r\n    const dayOnWeek = DateHelper.getDayOnWeek(\r\n        new Date(selectedYear, selectedMonth, 0)\r\n    );\r\n\r\n    const daysInMonth = DateHelper.getCountDaysInMonth(selectedMonth + 1);\r\n    const daysInPrevMonth = DateHelper.getCountDaysInMonth(selectedMonth);\r\n    const daysInNextMonth = totalDays - (daysInMonth + dayOnWeek);\r\n\r\n    const prevClickHandler = () => {\r\n        let index = selectedMonth - 1;\r\n        if (index < 0) {\r\n            index = 11;\r\n            setSelectedYear(selectedYear - 1);\r\n        }\r\n        setSelectedMonth(index);\r\n    };\r\n    const nextClickHandler = () => {\r\n        let index = selectedMonth + 1;\r\n        if (index > 11) {\r\n            index = 0;\r\n            setSelectedYear(selectedYear + 1);\r\n        }\r\n        setSelectedMonth(index);\r\n    };\r\n\r\n    const onSelectChangeHandler = (option: string) => {\r\n        setSelectedOption(option);\r\n    };\r\n    return (\r\n        <div className={styles[\"calendar-container\"]}>\r\n            <div className={styles.calendar_title}>\r\n                <h3>Выбор даты</h3>\r\n                <div className={styles.calendar_select}>\r\n                    <Select\r\n                        options={options}\r\n                        onChange={onSelectChangeHandler}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className={styles[\"calendar_month-switch\"]}>\r\n                <span\r\n                    className={styles[\"calendar_month-switch_svg\"]}\r\n                    onClick={prevClickHandler}\r\n                >\r\n                    <svg\r\n                        width=\"6\"\r\n                        height=\"12\"\r\n                        viewBox=\"0 0 6 12\"\r\n                        fill=\"none\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                    >\r\n                        <path\r\n                            d=\"M5.775 9.975C6.075 10.275 6.075 10.725 5.775 11.025C5.625 11.175 5.475 11.25 5.25 11.25C5.025 11.25 4.875 11.175 4.725 11.025L0.225 6.525C-0.075 6.225 -0.075 5.775 0.225 5.475L4.725 0.975C5.025 0.675 5.475 0.675 5.775 0.975C6.075 1.275 6.075 1.725 5.775 2.025L1.8 6L5.775 9.975Z\"\r\n                            fill=\"#6E6B7B\"\r\n                        />\r\n                    </svg>\r\n                </span>\r\n\r\n                <div className={styles[\"calendar_month-switch_date\"]}>\r\n                    <span className={styles[\"calendar_month-switch_month\"]}>\r\n                        {DateHelper.monthRuNames[selectedMonth]}\r\n                    </span>\r\n                    <span className={styles[\"calendar_month-switch_year\"]}>\r\n                        {selectedYear}\r\n                    </span>\r\n                </div>\r\n                <span\r\n                    className={styles[\"calendar_month-switch_svg\"]}\r\n                    onClick={nextClickHandler}\r\n                >\r\n                    <svg\r\n                        width=\"6\"\r\n                        height=\"12\"\r\n                        viewBox=\"0 0 6 12\"\r\n                        fill=\"none\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                    >\r\n                        <path\r\n                            d=\"M5.775 6.525L1.275 11.025C1.125 11.175 0.975 11.25 0.75 11.25C0.525 11.25 0.375 11.175 0.225 11.025C-0.075 10.725 -0.075 10.275 0.225 9.975L4.2 6L0.225 2.025C-0.075 1.725 -0.075 1.275 0.225 0.975C0.525 0.675 0.975 0.675 1.275 0.975L5.775 5.475C6.075 5.775 6.075 6.225 5.775 6.525Z\"\r\n                            fill=\"#6E6B7B\"\r\n                        />\r\n                    </svg>\r\n                </span>\r\n            </div>\r\n            <div className={styles[\"calendar_week-days\"]}>\r\n                {map(DateHelper.dayRuNames, (day) => (\r\n                    <div\r\n                        className={styles[\"calendar_week-days_item\"]}\r\n                        key={day.abbreviation}\r\n                    >\r\n                        {day.abbreviation}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <div className={styles.calendar}>\r\n                {range(\r\n                    daysInPrevMonth - dayOnWeek + 1,\r\n                    daysInPrevMonth + 1\r\n                ).map((day) => (\r\n                    <div\r\n                        className={`${styles.calendar_day} ${styles.disabled}`}\r\n                        key={`prev_${day}`}\r\n                        onClick={() => {\r\n                            prevClickHandler();\r\n                            setSelectedDay(day);\r\n                        }}\r\n                    >\r\n                        {day}\r\n                    </div>\r\n                ))}\r\n\r\n                {range(1, daysInMonth + 1).map((day) => (\r\n                    <div\r\n                        className={cn(styles.calendar_day, {\r\n                            [styles.now]:\r\n                                day === nowDate.getDate() &&\r\n                                nowDate.getMonth() === selectedMonth &&\r\n                                nowDate.getFullYear() === selectedYear,\r\n                            [styles.select]: day === selectedDay,\r\n                        })}\r\n                        key={`active_${day}`}\r\n                        onClick={() => setSelectedDay(day)}\r\n                    >\r\n                        {day}\r\n                    </div>\r\n                ))}\r\n\r\n                {range(1, daysInNextMonth + 1).map((day) => (\r\n                    <div\r\n                        className={`${styles.calendar_day} ${styles.disabled}`}\r\n                        key={`next_${day}`}\r\n                        onClick={() => {\r\n                            nextClickHandler();\r\n                            setSelectedDay(day);\r\n                        }}\r\n                    >\r\n                        {day}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Calendar;\r\n","import TotalAmount from \"./TotalAmount\";\r\n\r\nexport default TotalAmount;","import React from \"react\";\r\nimport useTransactions from \"../../hooks/useTransactions\";\r\nimport { map } from \"lodash\";\r\n\r\nimport styles from \"./style.module.scss\";\r\nimport useCalendar from \"../Calendar/hooks/useCalendar\";\r\n\r\nconst TotalAmount = () => {\r\n    const { transactionGlobalItems } = useTransactions();\r\n    const { selectedMonthName, selectedYear, selectedOption } = useCalendar();\r\n\r\n    const items = transactionGlobalItems.filter((item) => item.amount > 0);\r\n    return (\r\n        <div className={styles[\"total-amount\"]}>\r\n            <div className={styles[\"total-amount_content\"]}>\r\n                <h2 className={styles[\"total-amount_title\"]}>\r\n                    {selectedMonthName} {selectedYear}\r\n                </h2>\r\n                {!!items.length ? (\r\n                    <>\r\n                        <div>\r\n                            {map(items, (item, index) => (\r\n                                <div\r\n                                    className={styles[\"total-amount_row\"]}\r\n                                    key={`${index}_${item.name}`}\r\n                                >\r\n                                    <span>{item.name}</span>\r\n                                    <span\r\n                                        className={styles[\"total-amount_count\"]}\r\n                                    >\r\n                                        {item.amount}\r\n                                    </span>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </>\r\n                ) : (\r\n                    <div\r\n                        style={{\r\n                            width: \"100%\",\r\n                            height: \"50%\",\r\n                            display: \"flex\",\r\n                            justifyContent: \"center\",\r\n                            alignItems: \"center\",\r\n                        }}\r\n                    >\r\n                        Нет данных\r\n                    </div>\r\n                )}\r\n            </div>\r\n            <div className={styles[\"total-amount_juke\"]}>\r\n                <span className={styles[\"total-amount_juke_text\"]}>\r\n                    Результаты за {selectedOption.toLowerCase()}\r\n                </span>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TotalAmount;\r\n","import React from \"react\";\r\nimport editSVG from \"../../assets/icons/edit.svg\";\r\n\r\nimport {\r\n    TransactionsTable,\r\n    Widgets,\r\n    Summary,\r\n    Calendar,\r\n    TotalAmount,\r\n} from \"./components/\";\r\nimport useUser from \"./hooks/useUser\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport styles from \"./style.module.scss\";\r\n\r\nconst Home: React.FC = () => {\r\n    const { username, fetchInfo, loggedIn } = useUser();\r\n\r\n    React.useEffect(() => {\r\n        if (!username && loggedIn) {\r\n            fetchInfo();\r\n        }\r\n    }, [username, fetchInfo, loggedIn]);\r\n    return (\r\n        <div className={styles.home}>\r\n            {!loggedIn ? (\r\n                <Redirect to=\"/auth\" />\r\n            ) : (\r\n                <>\r\n                    <div className={styles[\"pockets-wrapper\"]}>\r\n                        <div className={styles.pockets}>\r\n                            <h2>Pockets</h2>\r\n                            <div className={styles.pockets_content}>\r\n                                <div className={styles.pockets_tables}>\r\n                                    <TransactionsTable />\r\n                                    <Summary />\r\n                                </div>\r\n                                <Widgets />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={styles.utils}>\r\n                        <div>\r\n                            <div className={styles.profile}>\r\n                                <div\r\n                                    className={\r\n                                        styles[\"profile_photo-container\"]\r\n                                    }\r\n                                >\r\n                                    <img\r\n                                        src=\"https://thispersondoesnotexist.com/image\"\r\n                                        className={styles.profile_photo}\r\n                                        alt=\"personal_photo\"\r\n                                    />\r\n                                    <div\r\n                                        className={\r\n                                            styles[\r\n                                                \"profile_photo_edit-container\"\r\n                                            ]\r\n                                        }\r\n                                    >\r\n                                        <img\r\n                                            src={editSVG}\r\n                                            className={\r\n                                                styles.profile_photo_edit\r\n                                            }\r\n                                            alt=\"personal_photo\"\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <h2>Привет, {username}</h2>\r\n                            </div>\r\n                            <div className={styles.utils_calendar}>\r\n                                <Calendar />\r\n                            </div>\r\n                        </div>\r\n                        <div className={styles[\"total-amount\"]}>\r\n                            <h3 className={styles[\"total-amount_title\"]}>\r\n                                Всего\r\n                            </h3>\r\n                            <TotalAmount />\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n"],"sourceRoot":""}