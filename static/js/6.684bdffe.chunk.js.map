{"version":3,"sources":["utils/validators/FormHelper.ts","utils/validators/RequireValidator.ts","components/fields/InputField/index.js","components/fields/InputField/InputField.tsx","components/fields/DateInputField/index.js","components/fields/DateInputField/DateField.tsx","components/fields/SelectField/SelectField.tsx","components/fields/SelectField/index.js","components/fields/ModalForm/index.js","components/fields/ModalForm/ModalForm.tsx","components/fields/InputField/style.module.scss","components/fields/DateInputField/style.module.scss","components/fields/SelectField/style.module.scss","components/fields/ModalForm/style.module.scss","utils/validators/RangeValidator.ts","pages/Home/hooks/useUser.ts","pages/Auth/style.module.scss","utils/validators/EmailValidator.ts","pages/Auth/Auth.tsx"],"names":["FormHelper","validators","value","allValues","meta","error","undefined","forEach","validator","validate","Require","msg","this","val","_","trim","visited","InputField","placeholder","className","fieldProps","styles","label","input_label","cn","input","onChange","name","DateField","inputRef","React","useRef","date","ref","type","onFocus","current","onBlur","Options","options","onClick","onClose","optionsRef","onCloseHandler","useCallback","useEffect","document","body","addEventListener","removeEventListener","select_options","map","option","index","select_options_item","SelectField","useState","showOptions","setShowOptions","closeHandler","select","select_value","prev","length","ModalForm","children","title","buttonText","onSubmit","render","handleSubmit","errors","form_title","Object","keys","form_errors","form_btn","module","exports","Range","max","min","count","useUser","dispatch","useDispatch","reactLocalStorage","get","loggedIn","setLoggedIn","username","useTypedSelector","user","auth","data","a","userActions","authAction","reg","regAction","fetchInfo","fetchInfoAction","Email","template","match","setToken","token","refresh_token","set","Auth","isReg","history","useHistory","push","authHandler","then","access_token","regHandler","auth_title","clear","auth_subtitle","auth_description","auth_form","auth_form_errors","values","auth_form_errors_item","auth_field","props","auth_bottom","to"],"mappings":"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","file":"static/js/6.684bdffe.chunk.js","sourcesContent":["import { FieldState } from \"final-form\";\r\n\r\nexport interface IValidator {\r\n    validate: (\r\n        value: string,\r\n        allValues?: any,\r\n        meta?: FieldState<string> | undefined\r\n    ) => string | undefined;\r\n}\r\n\r\nexport default class FormHelper {\r\n    static validate(validators: IValidator[] = []) {\r\n        return (\r\n            value: string,\r\n            allValues?: any,\r\n            meta?: FieldState<string> | undefined\r\n        ): string | undefined => {\r\n            let error: any = undefined;\r\n            validators.forEach((validator: IValidator) => {\r\n                if (error) return;\r\n                error = validator.validate(value, allValues, meta);\r\n            });\r\n            return error;\r\n        };\r\n    }\r\n}\r\n","import { FieldState } from \"final-form\";\r\nimport { IValidator } from \"./FormHelper\";\r\n\r\ninterface IRequireValidator {\r\n    msg: string;\r\n}\r\n\r\nexport class Require implements IValidator {\r\n    msg: string = \"\";\r\n    constructor({ msg }: IRequireValidator) {\r\n        this.msg = msg;\r\n    }\r\n\r\n    validate(val: string, _: any, meta: FieldState<string> | undefined) {\r\n        const value = val && typeof val === \"string\" ? val.trim() : val;\r\n        if ((!value || value === null || value === \"\" || value === undefined) && meta?.visited) {\r\n            return this.msg;\r\n        }\r\n        return undefined;\r\n    }\r\n}\r\n","import InputField from './InputField';\r\n\r\nexport default InputField;","import React from \"react\";\r\nimport { FieldInputProps } from \"react-final-form\";\r\nimport cn from \"classnames\";\r\n\r\nimport styles from \"./style.module.scss\";\r\n\r\nexport type Props = {\r\n    fieldProps: FieldInputProps<any>;\r\n    className?: StyleSheet;\r\n};\r\n\r\nconst InputField: React.FC<any> = ({\r\n    placeholder,\r\n    className,\r\n    ...fieldProps\r\n}) => {\r\n    return (\r\n        <div className={styles[\"input-container\"]}>\r\n            {fieldProps.label && (\r\n                <label className={styles.input_label}>{fieldProps.label}</label>\r\n            )}\r\n            <input\r\n                className={cn(styles.input, className)}\r\n                onChange={fieldProps.input.onChange}\r\n                value={fieldProps.input.value}\r\n                name={fieldProps.input.name}\r\n                {...fieldProps.input}\r\n                placeholder={placeholder}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default InputField;\r\n","import DateField from './DateField';\r\n\r\nexport default DateField;","import React from \"react\";\r\nimport { FieldInputProps } from \"react-final-form\";\r\nimport cn from \"classnames\";\r\n\r\nimport styles from \"./style.module.scss\";\r\n\r\nexport type Props = {\r\n    fieldProps: FieldInputProps<any>;\r\n    className?: StyleSheet;\r\n};\r\n\r\nconst InputField: React.FC<any> = ({ className, fieldProps }) => {\r\n    let inputRef = React.useRef<HTMLInputElement>(null);\r\n    return (\r\n        <input\r\n            className={cn(styles.date, className)}\r\n            ref={inputRef}\r\n            type=\"text\"\r\n            onChange={fieldProps.input.onChange}\r\n            name={fieldProps.input.name}\r\n            value={fieldProps.input.value}\r\n            placeholder=\"Дата\"\r\n            onFocus={() => {\r\n                if (inputRef && inputRef.current) {\r\n                    inputRef.current.type = \"date\";\r\n                }\r\n            }}\r\n            onBlur={() => {\r\n                if (inputRef && inputRef.current) {\r\n                    inputRef.current.type = \"text\";\r\n                }\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nexport default InputField;\r\n","import React from \"react\";\r\nimport { map } from \"lodash\";\r\nimport { FieldInputProps } from \"react-final-form\";\r\n\r\nimport styles from \"./style.module.scss\";\r\n\r\ntype OptionType = {\r\n    onClick: (option: any) => void;\r\n    onClose: () => void;\r\n    options: any[];\r\n};\r\n\r\nconst Options: React.FC<OptionType> = ({ options, onClick, onClose }) => {\r\n    const optionsRef = React.useRef(null);\r\n\r\n    const onCloseHandler = React.useCallback(() => {\r\n        onClose();\r\n    }, [onClose]);\r\n\r\n    React.useEffect(() => {\r\n        document.body.addEventListener(\"click\", onCloseHandler);\r\n\r\n        return () => document.body.removeEventListener(\"click\", onCloseHandler);\r\n    }, [onCloseHandler]);\r\n    return (\r\n        <div className={styles.select_options} ref={optionsRef}>\r\n            {map(options, (option, index) => (\r\n                <div\r\n                    key={`${option.value}_${index}`}\r\n                    onClick={() => onClick(option)}\r\n                    className={styles.select_options_item}\r\n                >\r\n                    {option.value}\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\ntype Props = {\r\n    fieldProps: FieldInputProps<any>;\r\n    options: any[];\r\n    placeholder?: string;\r\n};\r\n\r\nconst SelectField: React.FC<Props> = ({\r\n    fieldProps,\r\n    options = [],\r\n    placeholder,\r\n}) => {\r\n    const [showOptions, setShowOptions] = React.useState(false);\r\n\r\n    const showOptionsHandler = () => {\r\n        setShowOptions((prev) => !prev);\r\n    };\r\n\r\n    const closeHandler = () => {\r\n        setShowOptions(false);\r\n    } \r\n\r\n    const onClickHandler = (option: any) => {\r\n        fieldProps.onChange(option);\r\n        closeHandler()\r\n    };\r\n\r\n    return (\r\n        <div className={styles.select}>\r\n            <p className={styles.select_value} onClick={showOptionsHandler}>\r\n                {fieldProps.value.value ||\r\n                    placeholder ||\r\n                    (options.length && options[0].value)}\r\n            </p>\r\n            {showOptions && (\r\n                <Options onClick={onClickHandler} options={options} onClose={closeHandler}/>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SelectField;\r\n","import SelectField from './SelectField';\r\n\r\nexport default SelectField;","import ModalForm from './ModalForm';\r\n\r\nexport default ModalForm;","import React from \"react\";\r\nimport { Form } from \"react-final-form\";\r\nimport { map } from \"lodash\";\r\nimport { ModalContainer } from \"../..\";\r\n\r\nimport styles from \"./style.module.scss\";\r\n\r\ntype Props = {\r\n    title: string;\r\n    buttonText: string;\r\n    onSubmit: (data: any) => void;\r\n    onClose: () => void;\r\n};\r\n\r\nconst ModalForm: React.FC<Props> = ({\r\n    children,\r\n    title,\r\n    buttonText,\r\n    onSubmit,\r\n    onClose,\r\n}) => {\r\n    return (\r\n        <ModalContainer onClose={onClose}>\r\n            <Form\r\n                onSubmit={onSubmit}\r\n                render={({ handleSubmit, errors }) => (\r\n                    <form onSubmit={handleSubmit}>\r\n                        <h2 className={styles.form_title}>{title}</h2>\r\n                        {children}\r\n                        {typeof errors === \"object\" &&\r\n                            Object.keys(errors).length > 0 && (\r\n                                <ul className={styles.form_errors}>\r\n                                    {map(\r\n                                        Object.keys(errors),\r\n                                        (error, index) => (\r\n                                            <li key={`${error}_${index}`}>\r\n                                                {errors[error]}\r\n                                            </li>\r\n                                        )\r\n                                    )}\r\n                                </ul>\r\n                            )}\r\n                        <button className={styles.form_btn}>\r\n                            {buttonText}\r\n                        </button>\r\n                    </form>\r\n                )}\r\n            />\r\n        </ModalContainer>\r\n    );\r\n};\r\n\r\nexport default ModalForm;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"style_input__2vQF3\",\"input_label\":\"style_input_label__FoSHQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"date\":\"style_date__1dYRe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"style_select__1JzaF\",\"select_value\":\"style_select_value__2D-fm\",\"select_options\":\"style_select_options__2Tx-j\",\"select_options_item\":\"style_select_options_item__2OxXP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form_title\":\"style_form_title__1R8pq\",\"form_errors\":\"style_form_errors__1KvuQ\",\"form_btn\":\"style_form_btn__2sLPt\"};","import { FieldState } from \"final-form\";\r\nimport { IValidator } from \"./FormHelper\";\r\n\r\ntype Test = {\r\n    msg: string;\r\n    count: number;\r\n};\r\n\r\ninterface IRangeValidator {\r\n    max?: Test;\r\n    min?: Test;\r\n}\r\n\r\nexport class Range implements IValidator {\r\n    max: Test | undefined;\r\n    min: Test | undefined;\r\n    constructor({ max, min }: IRangeValidator) {\r\n        this.max = max;\r\n        this.min = min;\r\n    }\r\n\r\n    validate(val: string, _: any, meta: FieldState<string> | undefined) {\r\n        const value = val && typeof val === \"string\" ? val.trim() : val;\r\n        if (meta?.visited) {\r\n            if (this.max && value && value.length > this.max.count) {\r\n                return this.max.msg;\r\n            }\r\n            if (this.min && value && value.length < this.min.count) {\r\n                return this.min.msg;\r\n            }\r\n            if (!value && (this.min || this.max)) {\r\n                // TODO: перекинуть наверх\r\n                if (this.min) {\r\n                    return this.min.msg;\r\n                }\r\n                if (this.max) {\r\n                    return this.max.msg;\r\n                }\r\n            }\r\n        }\r\n\r\n        return undefined;\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { userActions } from \"../../../redux/actions/user\";\r\nimport { reactLocalStorage } from \"reactjs-localstorage\";\r\nimport { useTypedSelector } from \"../../../hooks/useTypedSelectors\";\r\n\r\nexport type AuthFormValues = {\r\n    email: string;\r\n    password: string;\r\n    username?: string;\r\n};\r\n\r\nconst useUser = () => {\r\n    const dispatch = useDispatch();\r\n    const [loggedIn, setLoggedIn] = React.useState(\r\n        !!reactLocalStorage.get(\"token\")\r\n    );\r\n\r\n    const username = useTypedSelector(({ user }) => user.username);\r\n\r\n    const auth = React.useCallback(async (data: AuthFormValues) => {\r\n        return userActions.authAction(data);\r\n    }, []);\r\n\r\n    const reg = React.useCallback(async (data: AuthFormValues) => {\r\n        return userActions.regAction(data);\r\n    }, []);\r\n\r\n    const fetchInfo = React.useCallback(async () => {\r\n        dispatch(userActions.fetchInfoAction());\r\n    }, [dispatch]);\r\n\r\n    return {\r\n        reg,\r\n        auth,\r\n        fetchInfo,\r\n        username,\r\n        loggedIn,\r\n        setLoggedIn,\r\n    };\r\n};\r\n\r\nexport default useUser;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"auth\":\"style_auth__zxVX_\",\"auth_title\":\"style_auth_title__1R8OT\",\"auth_subtitle\":\"style_auth_subtitle__1Pu4t\",\"auth_description\":\"style_auth_description__3N9Cv\",\"auth_field\":\"style_auth_field__3KZ0g\",\"auth_form\":\"style_auth_form__28LgK\",\"auth_form_errors\":\"style_auth_form_errors__1_lJH\",\"auth_bottom\":\"style_auth_bottom__2nxIY\"};","import { FieldState } from \"final-form\";\r\nimport { IValidator } from \"./FormHelper\";\r\n\r\ninterface IEmailValidator {\r\n    msg: string;\r\n}\r\n\r\nexport class Email implements IValidator {\r\n    msg: string = \"\";\r\n    constructor({ msg }: IEmailValidator) {\r\n        this.msg = msg;\r\n    }\r\n\r\n    template =\r\n        /^([a-z0-9_-]+\\.)*[a-z0-9_-]+@[a-z0-9_-]+(\\.[a-z0-9_-]+)*\\.[a-z]{2,6}$/;\r\n\r\n    validate(val: string, _: any, meta: FieldState<string> | undefined) {\r\n        const value = val && typeof val === \"string\" ? val.trim() : val;\r\n        if (\r\n            (!value || value === null || value === \"\" || value === undefined || !val.match(this.template)) &&\r\n            meta?.visited\r\n        ) {\r\n            return this.msg;\r\n        }\r\n        return undefined;\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { Field, Form } from \"react-final-form\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { Button } from \"../../components\";\r\nimport { InputField } from \"../../components/fields\";\r\nimport useUser, { AuthFormValues } from \"../Home/hooks/useUser\";\r\nimport { reactLocalStorage } from \"reactjs-localstorage\";\r\n\r\nimport styles from \"./style.module.scss\";\r\nimport FormHelper from \"../../utils/validators/FormHelper\";\r\nimport { Email } from \"../../utils/validators/EmailValidator\";\r\nimport { Require } from \"../../utils/validators/RequireValidator\";\r\nimport { Range } from \"../../utils/validators/RangeValidator\";\r\n\r\ntype Props = {\r\n    isReg: boolean;\r\n};\r\n\r\nexport const setToken = (token: string, refresh_token: string) => {\r\n    reactLocalStorage.set(\"token\", token);\r\n    reactLocalStorage.set(\"refresh_token\", refresh_token);\r\n};\r\n\r\nconst Auth: React.FC<Props> = ({ isReg = false }) => {\r\n    const { reg, auth, setLoggedIn, loggedIn } = useUser();\r\n    const history = useHistory();\r\n\r\n    if (loggedIn) {\r\n        history.push(\"/\");\r\n    }\r\n\r\n    const authHandler = async (data: AuthFormValues) => {\r\n        auth(data)\r\n            .then(({ data }) => setToken(data.access_token, data.refresh_token))\r\n            .then(() => setLoggedIn(true));\r\n    };\r\n\r\n    const regHandler = async (data: AuthFormValues) => {\r\n        reg(data)\r\n            .then(({ data }) => setToken(data.access_token, data.refresh_token))\r\n            .then(() => setLoggedIn(true));\r\n    };\r\n\r\n    const onSubmit = async (data: AuthFormValues) => {\r\n        const func = isReg ? regHandler : authHandler;\r\n        func(data);\r\n    };\r\n    return (\r\n        <div className={styles.auth}>\r\n            <h1\r\n                className={styles.auth_title}\r\n                onClick={() => reactLocalStorage.clear()}\r\n            >\r\n                Pockets\r\n            </h1>\r\n            <h3 className={styles.auth_subtitle}>\r\n                {isReg ? \"Adventure starts here\" : \"Welcome to Pockets! 👋🏻\"}\r\n            </h3>\r\n            <p className={styles.auth_description}>\r\n                {isReg\r\n                    ? \"Make your app management easy and fun!\"\r\n                    : \"Please sign-in to your account and start the adventure\"}\r\n            </p>\r\n            <Form\r\n                onSubmit={onSubmit}\r\n                render={({ handleSubmit, errors }) => (\r\n                    <form onSubmit={handleSubmit} className={styles.auth_form}>\r\n                        {typeof errors === \"object\" && (\r\n                            <ul className={styles.auth_form_errors}>\r\n                                {Object.values(errors).map((error) => (\r\n                                    <li\r\n                                        className={styles.auth_form_errors_item}\r\n                                    >\r\n                                        {error}\r\n                                    </li>\r\n                                ))}\r\n                            </ul>\r\n                        )}\r\n                        {isReg && (\r\n                            <div className={styles.auth_field}>\r\n                                <Field\r\n                                    name=\"username\"\r\n                                    label=\"Usermame\"\r\n                                    render={(props) => (\r\n                                        <InputField\r\n                                            placeholder=\"John Doe\"\r\n                                            {...props}\r\n                                        />\r\n                                    )}\r\n                                    validate={FormHelper.validate([\r\n                                        new Require({\r\n                                            msg: \"Имя пользователя обязательное поле\",\r\n                                        }),\r\n                                        new Range({\r\n                                            min: {\r\n                                                count: 4,\r\n                                                msg: \"Количество символов не должно быть меньше 4\",\r\n                                            },\r\n                                        }),\r\n                                    ])}\r\n                                />\r\n                            </div>\r\n                        )}\r\n                        <div className={styles.auth_field}>\r\n                            <Field\r\n                                name=\"email\"\r\n                                label=\"Email\"\r\n                                render={(props) => (\r\n                                    <InputField\r\n                                        placeholder=\"johndoe@gmail.com\"\r\n                                        {...props}\r\n                                    />\r\n                                )}\r\n                                validate={FormHelper.validate([\r\n                                    new Require({\r\n                                        msg: \"Email обязательное поле\",\r\n                                    }),\r\n                                    new Email({ msg: \"Email указан не верно\" }),\r\n                                ])}\r\n                            />\r\n                        </div>\r\n                        <div className={styles.auth_field}>\r\n                            <Field\r\n                                name=\"password\"\r\n                                type=\"password\"\r\n                                label=\"Password\"\r\n                                render={(props) => (\r\n                                    <InputField\r\n                                        placeholder=\"⚉ ⚉ ⚉ ⚉ ⚉ ⚉ ⚉ ⚉\"\r\n                                        {...props}\r\n                                    />\r\n                                )}\r\n                                validate={FormHelper.validate([\r\n                                    new Require({\r\n                                        msg: \"Пароль обязательное поле\",\r\n                                    }),\r\n                                ])}\r\n                            />\r\n                        </div>\r\n                        <Button>Login</Button>\r\n                    </form>\r\n                )}\r\n            />\r\n            <div className={styles.auth_bottom}>\r\n                <p>\r\n                    {isReg\r\n                        ? \"Already have an account?\"\r\n                        : \"New on our platform?\"}\r\n                </p>\r\n                {isReg ? (\r\n                    <Link to=\"/auth\">Sign in instead</Link>\r\n                ) : (\r\n                    <Link to=\"/reg\">Create an account</Link>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Auth;\r\n"],"sourceRoot":""}